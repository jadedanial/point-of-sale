# All rights reserved to Jade Danial

# Jade Danial is a passionate programmer and creator of Code Hub blog.
# He is fueled by his passion for learning. He is fascinated by the idea of discovering the world of programming.
# Meanwhile, he is developing desktop and web applications using his skills in programming.

# Porftfolio: http://www.jadedanial.com
# Email: danialjade@gmail.com

# This project was created on November 8, 2017 at 5:15 PM and finished October 14, 2020 at 8:07 PM.
# It took so long to finished because Jade Danial prioritized his personal website and portfolio and he is also a full time employee.

import resource
import sys
import os
import time
import psycopg2
import pdfkit
import pandas as pd
import pyqtgraph as pg
from psycopg2 import sql
from psycopg2 import connect, extensions, sql
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QUrl
from PyQt5.QtWidgets import QMessageBox, QMenu, QDesktopWidget, QGraphicsOpacityEffect, QFileDialog, QDialog
from PyQt5.Qt import Qt
from PyQt5.QtWebEngineWidgets import QWebEngineView as QWebView, QWebEnginePage as QWebPage
from PyQt5.QtWebEngineWidgets import QWebEngineSettings as QWebSettings
from PyQt5.QtChart import QChart, QChartView, QPieSeries, QPieSlice
from PyQt5.QtGui import QPainter, QBrush, QColor
from pyqtgraph import PlotWidget, plot
from datetime import datetime, date, timedelta
from config import config

CheckLoadDialogBox = "Nothing"
ScreenSize = 0
ControlRegister = "Nothing"
Module = "Nothing"
PreviousModule = "Nothing"
MyDictionary = {}
SelectedComboBox = "Nothing"
ReportDataList = []
Currencies = ["Philippine Peso", "US Dollar"]

# Database module.


class Database():

    # Check database if exist.
    def CheckDatabase():

        try:

            params = config()

            conn = psycopg2.connect(**params)

            conn.autocommit = True

            cursor = conn.cursor()

            cursor.execute("SELECT datname FROM pg_database;")

            list_database = cursor.fetchall()

            if ("DanialSoftPOS",) not in list_database:

                return "not existed"

            else:

                return "existed"

            conn.close()

        except Exception as Err:

            print(Err)

            return "Failed to connect to database."

    # Create database.
    def CreateDatabase():

        try:

            params = config()

            conn = psycopg2.connect(**params)

            DB_NAME = "DanialSoftPOS"

            autocommit = extensions.ISOLATION_LEVEL_AUTOCOMMIT

            conn.set_isolation_level(autocommit)

            cursor = conn.cursor()

            cursor.execute(sql.SQL("CREATE DATABASE {}").format(
                sql.Identifier(DB_NAME)))

            conn.close()

            Database.ConnectDatabase()

        except Exception as Err:

            print(Err)

    # Connecting to database.
    def ConnectDatabase():

        checked = Database.CheckDatabase()

        if checked == "not existed":

            Database.CreateDatabase()

        try:

            f = open("database.ini", "r", encoding="utf-8")
            l = f.readlines()

            conn = psycopg2.connect(
                host="localhost", database="DanialSoftPOS", user="postgres", password=l[4].split("=")[1])

            cursor = conn.cursor()

            f.close()

            # Creating database tables.

            cursor.execute(
                "CREATE TABLE IF NOT EXISTS Users(Username TEXT PRIMARY KEY NOT NULL, Email TEXT, Password TEXT, Category TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS CurrentUser(CurrentUsername TEXT, LogDate TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS RememberUser(RememberUsername TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS CheckRegisteringNewAccount(RegisterUserAtStartup TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS Settings(Carrier TEXT, PayMethod TEXT, Location TEXT, PayTerm TEXT, Discount TEXT, Category TEXT, Measurement TEXT, Taxing TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS VendorProduct(VenPro TEXT PRIMARY KEY NOT NULL, VenCode TEXT, ProCode TEXT, VenPrice TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS Vendors(VenCode TEXT PRIMARY KEY NOT NULL, VenName TEXT, VenAddress TEXT, VenPhone TEXT, VenEmail TEXT, VenPayTerm TEXT, VenDiscount TEXT, VenCurrency TEXT, VenTaxing TEXT, VenPayMethod TEXT, VenCarrier TEXT, VenRemarks TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS Products(ProCode TEXT PRIMARY KEY NOT NULL, ProName TEXT, ProCategory TEXT, ProPrice TEXT, ProLocation TEXT, ProReorder TEXT, ProMeasurement TEXT, ProRemarks TEXT, ProLastVendor TEXT, UnitCost TEXT, ProQuantity TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS Purchases(PurCode TEXT PRIMARY KEY NOT NULL, VenCode TEXT, PurDate DATE, PurStatus TEXT, PurDueDate DATE, PurShipDate DATE, PurRemarks TEXT, PurTotal TEXT, PurPaid TEXT, PurBalance TEXT, PurOrderQuantity TEXT, PurNotReceived TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS PurchaseProduct(PurPro TEXT PRIMARY KEY NOT NULL, PurCode TEXT, ProCode TEXT, ProQnty TEXT, PurDiscount TEXT, PurTax TEXT, PurPrice TEXT, PurSubTotal TEXT, NotReceived TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS ReceiveOrder(ReceiveDate TEXT, PurCode TEXT, ProCode TEXT, OrderQnty TEXT, ReceiveQnty TEXT, ReceiveUser TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS Customers(CusCode TEXT PRIMARY KEY NOT NULL, CusName TEXT, CusAddress TEXT, CusPhone TEXT, CusEmail TEXT, CusPayTerm TEXT, CusDiscount TEXT, CusCurrency TEXT, CusTaxing TEXT, CusPayMethod TEXT, CusCarrier TEXT, CusRemarks TEXT)")
            cursor.execute("CREATE TABLE IF NOT EXISTS Sales(SaleCode TEXT PRIMARY KEY NOT NULL, CusCode TEXT, SaleDate DATE, SaleSubTotal TEXT, SaleDiscount TEXT, SaleTax TEXT, SaleTotal TEXT, SaleProfit TEXT, SalePaid TEXT, SaleBal TEXT, PayMethod TEXT, PayStatus TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS SaleProduct(SalePro TEXT PRIMARY KEY NOT NULL, SaleCode TEXT, ProCode TEXT, ProQnty TEXT, SaleTotal TEXT, SaleProfit TEXT)")
            cursor.execute(
                "CREATE TABLE IF NOT EXISTS Notifications(NotifText TEXT, NotifDate TEXT)")

            conn.commit()

            return conn

        except Exception as Err:

            print(Err)

    # Creat default user.
    def CreateDefaultUser(username, password, email, category):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute("SELECT * FROM Users WHERE Username = %s", (username,))

        if cursor.fetchall():

            pass

        else:

            query = "INSERT INTO Users(Username, Email, Password, Category) VALUES(%s, %s, %s, %s)"
            data = (username, email, password, category)

            cursor.execute(query, data)

            conn.commit()

        conn.close()

    # Add a new user account.
    def AddUser(count, username, email, password, confirmpassword, category, savefrom):

        specialchars = set(",./;:}{][\/-+=!#$%^&*")

        if username == "" or email == "" or password == "" or confirmpassword == "":

            return "Please fill all fields!"

        elif any((c in specialchars) for c in username):

            return "Username must not contain special characters ,./;:}{][\/-+=!#$%^&*!"

        elif len(username) <= 7:

            return "Username must not be less than 8 characters!"

        elif len(username) >= 16:

            return "Username must not be more than 15 characters!"

        elif not "@" in email or not "." in email:

            return "Invalid email!"

        elif any((c in specialchars) for c in password):

            return "Password must not contain special characters ,./;:}{][\/-+=!#$%^&*!"

        elif len(password) <= 7:

            return "Password must not be less than 8 characters!"

        elif len(password) >= 31:

            return "Password must not be more than 30 characters!"

        elif not any(c.isdigit() for c in password) or not any(c.isalpha() for c in password):

            return "Password must be alphanumeric characters!"

        elif not any(c.isupper() for c in password) or not any(c.islower() for c in password):

            return "Password must have lower and uppercase letter!"

        elif password != confirmpassword:

            return "Password does not match the confirm password!"

        else:

            conn = Database.ConnectDatabase()

            cursor = conn.cursor()

            if savefrom == "RegisterModule":

                cursor.execute(
                    "SELECT * FROM Users WHERE Username = %s", (username,))

                if cursor.fetchall():

                    return "Username " + username + " already exist!"

                else:

                    query = "INSERT INTO Users(Username, Email, Password, Category) VALUES(%s, %s, %s, %s)"
                    data = (username, email, password, category)

                    cursor.execute(query, data)

                    conn.commit()

                    return "New user " + username + " successfully added, please login."

            elif savefrom == "SettingsModule":

                if count == 1:

                    cursor.execute("DELETE FROM Users *")

                query = "INSERT INTO Users(Username, Email, Password, Category) VALUES(%s, %s, %s, %s)"
                data = (username, email, password, category)

                cursor.execute(query, data)

                conn.commit()

                return "User Accounts succesfully saved."

            conn.close()

    # Check login credentials.
    def UserLogin(username, password, logintype):

        if username == "" or password == "":

            return "No,Please fill all fields!"

        else:

            conn = Database.ConnectDatabase()

            cursor = conn.cursor()

            if logintype == "ValidateLoginPushButtonLoginUI":

                cursor.execute(
                    "SELECT * FROM Users WHERE Username = %s AND Password = %s", (username, password,))

            elif logintype == "AdminValidateLoginPushButtonLoginUI":

                category = "Administrator"
                cursor.execute(
                    "SELECT * FROM Users WHERE Username = %s AND Password = %s AND Category = %s", (username, password, category,))

            result = cursor.fetchall()

            for r in result:

                wholog = r[3]

            if result:

                return wholog + ",Welcome " + username

            else:

                return "No,User not recognized!"

            conn.close()

    # Add current user.
    def CurrentUser(username, logdate):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        query = "INSERT INTO CurrentUser(CurrentUsername, LogDate) VALUES(%s, %s) RETURNING CurrentUsername"
        data = (username, logdate)

        cursor.execute(query, data)

        conn.commit()

        result = cursor.fetchone()
        lastrow = result[0]

        return lastrow

        conn.close()

    # Remember user.
    def RememberUser(username):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute("DELETE FROM RememberUser *")

        query = "INSERT INTO RememberUser(RememberUsername) VALUES(%s)"
        data = (username,)

        cursor.execute(query, data)

        conn.commit()
        conn.close()

    # Forget user.
    def ForgetUser(username):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute(
            "SELECT * FROM RememberUser WHERE RememberUsername = %s", (username,))

        result = cursor.fetchall()

        if result:

            cursor.execute(
                "DELETE FROM RememberUser WHERE RememberUsername = %s", (username,))

            conn.commit()

        conn.close()

    # Execute remember me checkbox.
    def RememberMe():

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute("SELECT * FROM RememberUser")

        results = cursor.fetchall()

        if results:

            for result in results:

                remebered = result[0]

            cursor.execute(
                "SELECT * FROM Users WHERE Username = %s", (remebered,))

            remeberedusers = cursor.fetchall()

            if remeberedusers:

                for remebereduser in remeberedusers:

                    username = remebereduser[0]
                    password = remebereduser[2]

            else:

                username = ""
                password = ""

        else:

            username = ""
            password = ""

        return username + "," + password

        conn.close()

    # Enable or disable registering new account at startup.
    def EnableDisableRegisteringNewAccount(yesno):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute("DELETE FROM CheckRegisteringNewAccount *")

        query = "INSERT INTO CheckRegisteringNewAccount(RegisterUserAtStartup) VALUES(%s)"
        data = (yesno,)

        cursor.execute(query, data)

        conn.commit()
        conn.close()

    # Check registering new account.
    def CheckRegisteringNewAccount():

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute("SELECT * FROM CheckRegisteringNewAccount")

        results = cursor.fetchall()

        if results:

            for result in results:

                return result[0]

        conn.close()

    # Add data to settings module.
    def AddSettingsModule(count, carrier, paymethod, location, payterm, discount, category, measurement, taxing):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if count == 1:

            cursor.execute("DELETE FROM Settings *")

        query = "INSERT INTO Settings(Carrier, PayMethod, Location, PayTerm, Discount, Category, Measurement, Taxing) VALUES(%s, %s, %s, %s, %s, %s, %s, %s)"
        data = (carrier, paymethod, location, payterm,
                discount, category, measurement, taxing)

        cursor.execute(query, data)

        conn.commit()
        conn.close()

    # Add data to vendors module.
    def AddVendorsModule(vendorcode, name, address, phone, email, payterm, discount, currency, taxing, paymethod, carrier, remarks, pvlist):

        venprice = None
        prolist = list()

        for data in pvlist:

            venprice = data.split("&")[1]

        if not venprice:

            return "Vendor should have atleast 1 product."

        else:

            conn = Database.ConnectDatabase()

            cursor = conn.cursor()

            cursor.execute(
                "SELECT * FROM Vendors WHERE VenCode = %s", (vendorcode,))

            results = cursor.fetchall()

            code = vendorcode

            namelower = name.lower()

            if results:

                cursor.execute(
                    "SELECT * FROM Vendors WHERE LOWER(VenName) LIKE %s", (namelower,))

                nameexist = cursor.fetchall()

                if nameexist:

                    for n in nameexist:

                        code = n[0]

                if code != vendorcode:

                    return "Vendor name already exists."

                else:

                    cursor.execute("UPDATE Vendors SET VenName = %s, VenAddress = %s, VenPhone = %s, VenEmail = %s, VenPayTerm = %s, VenDiscount = %s, VenCurrency = %s, VenTaxing = %s, VenPayMethod = %s, VenCarrier = %s, VenRemarks = %s WHERE VenCode = %s", (
                        name, address, phone, email, payterm, discount, currency, taxing, paymethod, carrier, remarks, vendorcode))

                    for data in pvlist:

                        procode = data.split("&")[0]
                        venprice = data.split("&")[1]
                        venpro = vendorcode + procode

                        cursor.execute(
                            "SELECT * FROM VendorProduct WHERE VenPro = %s", (venpro,))

                        existed = cursor.fetchall()

                        if existed:

                            cursor.execute(
                                "UPDATE VendorProduct SET VenPrice = %s WHERE VenPro = %s", (venprice, venpro))

                        else:

                            query = "INSERT INTO VendorProduct(VenPro, VenCode, ProCode, VenPrice) VALUES(%s, %s, %s, %s)"
                            data = (venpro, vendorcode, procode, venprice)

                            cursor.execute(query, data)

                        conn.commit()

                        unitcost = 0

                        cursor.execute(
                            "SELECT AVG(CAST(VenPrice AS DECIMAL)) FROM VendorProduct WHERE ProCode = %s GROUP BY ProCode", (procode,))

                        productexists = cursor.fetchall()

                        if productexists:

                            for productexist in productexists:

                                unitcost = productexist[0]

                            proprice = float(unitcost) * 0.25 + float(unitcost)

                            cursor.execute(
                                "UPDATE Products SET UnitCost = %s, ProPrice = %s WHERE ProCode = %s", (unitcost, proprice, procode))

                        conn.commit()

                        prolist.append(procode)

                    cursor.execute(
                        "SELECT ProCode FROM VendorProduct WHERE VenCode = %s", (vendorcode,))

                    check = cursor.fetchall()

                    if check:

                        for data in check:

                            if data[0] not in prolist:

                                cursor.execute(
                                    "DELETE FROM VendorProduct WHERE VenPro = %s", (vendorcode + data[0],))

                        conn.commit()

                return "Vendor successfully updated."

            else:

                cursor.execute(
                    "SELECT * FROM Vendors WHERE LOWER(VenName) LIKE %s", (namelower,))

                results = cursor.fetchall()

                if results:

                    return "Vendor name already exists."

                else:

                    query = "INSERT INTO Vendors(VenCode, VenName, VenAddress, VenPhone, VenEmail, VenPayTerm, VenDiscount, VenCurrency, VenTaxing, VenPayMethod, VenCarrier, VenRemarks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
                    data = (vendorcode, name, address, phone, email, payterm,
                            discount, currency, taxing, paymethod, carrier, remarks)

                    cursor.execute(query, data)

                    for data in pvlist:

                        procode = data.split("&")[0]
                        venprice = data.split("&")[1]
                        venpro = vendorcode + procode

                        query = "INSERT INTO VendorProduct(VenPro, VenCode, ProCode, VenPrice) VALUES(%s, %s, %s, %s)"
                        data = (venpro, vendorcode, procode, venprice)

                        cursor.execute(query, data)

                        conn.commit()

                        unitcost = 0

                        cursor.execute(
                            "SELECT AVG(CAST(VenPrice AS DECIMAL)) FROM VendorProduct WHERE ProCode = %s GROUP BY ProCode", (procode,))

                        productexists = cursor.fetchall()

                        if productexists:

                            for productexist in productexists:

                                unitcost = productexist[0]

                            proprice = float(unitcost) * 0.25 + float(unitcost)

                            cursor.execute(
                                "UPDATE Products SET UnitCost = %s, ProPrice = %s WHERE ProCode = %s", (unitcost, proprice, procode))

                        conn.commit()

            conn.close()

    # Add data to purchase module.
    def AddPurchasesModule(purchasecode, vendorcode, date, status, duedate, reqshipdate, remarks, total, paid, balance, orderqty, purnotreceived, pvlist):

        purquantity = None
        prolist = list()

        for data in pvlist:

            purquantity = data.split("&")[1]

        if not purquantity:

            return "Should have atleast 1 product."

        else:

            conn = Database.ConnectDatabase()

            cursor = conn.cursor()

            cursor.execute(
                "SELECT * FROM Purchases WHERE PurCode = %s", (purchasecode,))

            results = cursor.fetchall()

            if results:

                if status == "New" or status == "Canceled":

                    cursor.execute("UPDATE Purchases SET PurDate = %s, PurStatus = %s, PurDueDate = %s, PurShipDate = %s, PurRemarks = %s, PurTotal = %s, PurPaid = %s, PurBalance = %s, PurOrderQuantity =  %s, PurNotReceived = %s WHERE PurCode = %s", (
                        date, status, duedate, reqshipdate, remarks, total, paid, balance, orderqty, purnotreceived, purchasecode))

                    for data in pvlist:

                        procode = data.split("&")[0]
                        quantity = data.split("&")[1]
                        price = data.split("&")[2]
                        price = price.split(" ")[0]
                        discount = data.split("&")[3]
                        tax = data.split("&")[4]
                        pursubtotal = data.split("&")[5]
                        purpro = purchasecode + procode

                        cursor.execute(
                            "SELECT * FROM PurchaseProduct WHERE PurPro = %s", (purpro,))

                        existed = cursor.fetchall()

                        if existed:

                            cursor.execute("UPDATE PurchaseProduct SET ProQnty = %s, PurPrice = %s, PurSubTotal = %s, NotReceived = %s, PurDiscount = %s, PurTax = %s WHERE PurPro = %s", (
                                quantity, price, pursubtotal, quantity, discount, tax, purpro))

                        else:

                            query = "INSERT INTO PurchaseProduct(PurPro, PurCode, ProCode, ProQnty, PurPrice, PurSubTotal, PurDiscount, PurTax, NotReceived) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)"
                            data = (purpro, purchasecode, procode, quantity,
                                    price, pursubtotal, discount, tax, quantity)

                            cursor.execute(query, data)

                        prolist.append(procode)

                    conn.commit()

                    cursor.execute(
                        "SELECT ProCode FROM PurchaseProduct WHERE PurCode = %s", (purchasecode,))

                    check = cursor.fetchall()

                    if check:

                        for data in check:

                            if data[0] not in prolist:

                                cursor.execute(
                                    "DELETE FROM PurchaseProduct WHERE PurPro = %s", (purchasecode + data[0],))

                    conn.commit()

                else:

                    cursor.execute("UPDATE Purchases SET PurDate = %s, PurStatus = %s, PurDueDate = %s, PurShipDate = %s, PurRemarks = %s, PurTotal = %s, PurPaid = %s, PurBalance = %s, PurOrderQuantity =  %s WHERE PurCode = %s", (
                        date, status, duedate, reqshipdate, remarks, total, paid, balance, orderqty, purchasecode))

                    conn.commit()

                return "Purchase successfully updated."

            else:

                query = "INSERT INTO Purchases(PurCode, VenCode, PurDate, PurStatus, PurDueDate, PurShipDate, PurRemarks, PurTotal, PurPaid, PurBalance, PurOrderQuantity, PurNotReceived) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
                data = (purchasecode, vendorcode, date, status, duedate, reqshipdate,
                        remarks, total, paid, balance, orderqty, purnotreceived)

                cursor.execute(query, data)

                conn.commit()

                for data in pvlist:

                    procode = data.split("&")[0]
                    quantity = data.split("&")[1]
                    price = data.split("&")[2]
                    price = price.split(" ")[0]
                    discount = data.split("&")[3]
                    tax = data.split("&")[4]
                    pursubtotal = data.split("&")[5]
                    purpro = purchasecode + procode

                    query = "INSERT INTO PurchaseProduct(PurPro, PurCode, ProCode, ProQnty, PurPrice, PurSubTotal, PurDiscount, PurTax, NotReceived) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s)"
                    data = (purpro, purchasecode, procode, quantity,
                            price, pursubtotal, discount, tax, quantity)

                    cursor.execute(query, data)

                    conn.commit()

                return "Purchase successfully saved."

            conn.close()

    # Add data to products module.
    def AddProductsModule(productcode, name, category, price, location, reorder, measurement, remarks, lastvendor, unitcost, quantity):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute(
            "SELECT * FROM Products WHERE ProCode = %s", (productcode,))

        code = productcode

        namelower = name.lower()

        results = cursor.fetchall()

        if results:

            cursor.execute(
                "SELECT * FROM Products WHERE LOWER(ProName) LIKE %s", (namelower,))

            nameexist = cursor.fetchall()

            if nameexist:

                for n in nameexist:

                    code = n[0]

            if code != productcode:

                return "Product name already exists."

            else:

                cursor.execute("UPDATE Products SET ProName = %s, ProCategory = %s, ProPrice = %s, ProLocation = %s, ProReorder = %s, ProMeasurement = %s, ProRemarks = %s WHERE ProCode = %s", (
                    name, category, price, location, reorder, measurement, remarks, productcode))

                conn.commit()

            return "Product successfully updated."

        else:

            cursor.execute(
                "SELECT * FROM Products WHERE LOWER(ProName) LIKE %s", (namelower,))

            nameexist = cursor.fetchall()

            if nameexist:

                return "Product name already exists."

            else:

                query = "INSERT INTO Products(ProCode, ProName, ProCategory, ProPrice, ProLocation, ProReorder, ProMeasurement, ProRemarks, ProLastVendor, UnitCost, ProQuantity) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
                data = (productcode, name, category, price, location, reorder,
                        measurement, remarks, lastvendor, unitcost, quantity)

                cursor.execute(query, data)

                conn.commit()

        conn.close()

    # Add data to sale module.
    def AddSalesModule(salecode, customercode, date, subtotal, discount, tax, saletotal, saleprofit, paid, balance, paymethod, paystatus, pvlist):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        query = "INSERT INTO Sales(SaleCode, CusCode, SaleDate, SaleSubTotal, SaleDiscount, SaleTax, SaleTotal, SaleProfit, SalePaid, SaleBal, PayMethod, PayStatus) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
        data = (salecode, customercode, date, subtotal, discount, tax,
                saletotal, saleprofit, paid, balance, paymethod, paystatus)

        cursor.execute(query, data)

        conn.commit()

        saletotal = float(saletotal)
        saleprofit = float(saleprofit)

        for data in pvlist:

            discount = discount.split(" %")[0]
            tax = tax.split(" %")[0]

            d = int(discount) / 100
            t = int(tax) / 100

            discounted = float(data.split("&")[3]) * d
            taxed = float(data.split("&")[3]) * t

            salecode = data.split("&")[0]
            procode = data.split("&")[1]
            quantity = data.split("&")[2]
            saletotalbyproduct = float(data.split("&")[3]) + taxed - discounted
            saleprofitbyproduct = float(data.split(
                "&")[3]) - discounted - float(data.split("&")[4])
            saletotal += saletotalbyproduct
            saleprofit += saleprofitbyproduct
            salepro = salecode + procode

            query = "INSERT INTO SaleProduct(SalePro, SaleCode, ProCode, ProQnty, SaleTotal, SaleProfit) VALUES(%s, %s, %s, %s, %s, %s)"
            data = (salepro, salecode, procode, quantity,
                    saletotalbyproduct, saleprofitbyproduct)

            cursor.execute(query, data)

            cursor.execute(
                "SELECT ProQuantity FROM Products WHERE ProCode = %s", (procode,))

            result = cursor.fetchone()

            if result:

                oldqty = result[0]

            cursor.execute("UPDATE Products SET ProQuantity = %s WHERE ProCode = %s", (float(
                oldqty) - float(quantity), procode))

            conn.commit()

            cursor.execute(
                "SELECT ProName, ProReorder, ProQuantity FROM Products WHERE ProCode = %s", (procode,))

            checkreorder = cursor.fetchall()

            if checkreorder:

                for c in checkreorder:

                    name = c[0]
                    reorder = c[1]
                    newqty = c[2]

                if float(newqty) < float(reorder):

                    query = "INSERT INTO Notifications(NotifText, NotifDate) VALUES(%s, %s)"
                    data = ("Please consider to reorder stock for " + name + " with product ID " + procode +
                            " because the quantity of remaining stocks are only " + newqty + " which are less than the reorder point of " + reorder + ".", date)

                    cursor.execute(query, data)

                    conn.commit()

        cursor.execute("UPDATE Sales SET SaleTotal = %s, SaleProfit = %s WHERE SaleCode = %s",
                       (saletotal, saleprofit, salecode))

        conn.commit()

        return "Sale successfully charged."

        conn.close()

    # Generate product code.
    def GenerateCode(whatcode):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if whatcode == "Vendor":

            cursor.execute("SELECT VenCode FROM Vendors")

        elif whatcode == "Product":

            cursor.execute("SELECT ProCode FROM Products")

        elif whatcode == "Purchase":

            cursor.execute("SELECT PurCode FROM Purchases")

        elif whatcode == "Customer":

            cursor.execute("SELECT CusCode FROM Customers")

        elif whatcode == "Sale":

            cursor.execute("SELECT SaleCode FROM Sales")

        results = cursor.fetchall()

        lastcode = 0

        if results:

            for result in results:

                code = int(result[0].split("C")[1])

                if code > lastcode:

                    lastcode = code

            lastcode += 1

            if whatcode == "Vendor":

                return "VEC" + "{lastcode:07}".format(lastcode=lastcode)

            elif whatcode == "Product":

                return "PRC" + "{lastcode:07}".format(lastcode=lastcode)

            elif whatcode == "Purchase":

                return "PUC" + "{lastcode:07}".format(lastcode=lastcode)

            elif whatcode == "Customer":

                return "BUC" + "{lastcode:07}".format(lastcode=lastcode)

            elif whatcode == "Sale":

                return "SAC" + "{lastcode:07}".format(lastcode=lastcode)

        else:

            if whatcode == "Vendor":

                return "VEC0000001"

            elif whatcode == "Product":

                return "PRC0000001"

            elif whatcode == "Purchase":

                return "PUC0000001"

            elif whatcode == "Customer":

                return "BUC0000001"

            elif whatcode == "Sale":

                return "SAC0000001"

        conn.close()

    # Add data to Receive Order module.
    def AddReceiveOrderModule(date, purchase, vendor, product, orderqnty, receiveqnty, user):

        notreceived = 0

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        query = "INSERT INTO ReceiveOrder(ReceiveDate, PurCode, ProCode, OrderQnty, ReceiveQnty, ReceiveUser) VALUES(%s, %s, %s, %s, %s, %s)"
        data = (date, purchase, product, orderqnty, receiveqnty, user)

        cursor.execute(query, data)

        conn.commit()

        cursor.execute(
            "SELECT NotReceived FROM PurchaseProduct WHERE PurPro = %s", (purchase + product,))

        result = cursor.fetchone()

        if result:

            notreceived = float(result[0]) - float(receiveqnty)

            cursor.execute("UPDATE PurchaseProduct SET NotReceived = %s WHERE PurPro = %s",
                           (notreceived, purchase + product))

            conn.commit()

        cursor.execute("SELECT * FROM Products WHERE ProCode = %s", (product,))

        result = cursor.fetchall()

        oldqty = 0

        if result:

            for r in result:

                oldqty = float(r[10]) + float(receiveqnty)

            cursor.execute(
                "UPDATE Products SET ProLastVendor = %s, ProQuantity = %s WHERE ProCode = %s", (vendor, oldqty, product))

            conn.commit()

        conn.close()

    # Add data to customers module.
    def AddCustomersModule(customercode, name, address, phone, email, payterm, discount, currency, taxing, paymethod, carrier, remarks):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        cursor.execute(
            "SELECT * FROM Customers WHERE CusCode = %s", (customercode,))

        results = cursor.fetchall()

        code = customercode

        namelower = name.lower()

        if results:

            cursor.execute(
                "SELECT * FROM Customers WHERE LOWER(CusName) LIKE %s", (namelower,))

            nameexist = cursor.fetchall()

            if nameexist:

                for n in nameexist:

                    code = n[0]

            if code != customercode:

                return "Customer name already exists."

            else:

                cursor.execute("UPDATE Customers SET CusName = %s, CusAddress = %s, CusPhone = %s, CusEmail = %s, CusPayTerm = %s, CusDiscount = %s, CusCurrency = %s, CusTaxing = %s, CusPayMethod = %s, CusCarrier = %s, CusRemarks = %s WHERE CusCode = %s", (
                    name, address, phone, email, payterm, discount, currency, taxing, paymethod, carrier, remarks, customercode))

                conn.commit()

                return "Customer successfully updated."

        else:

            cursor.execute(
                "SELECT * FROM Customers WHERE LOWER(CusName) LIKE %s", (namelower,))

            results = cursor.fetchall()

            if results:

                return "Customer name already exists."

            else:

                query = "INSERT INTO Customers(CusCode, CusName, CusAddress, CusPhone, CusEmail, CusPayTerm, CusDiscount, CusCurrency, CusTaxing, CusPayMethod, CusCarrier, CusRemarks) VALUES(%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)"
                data = (customercode, name, address, phone, email, payterm,
                        discount, currency, taxing, paymethod, carrier, remarks)

                cursor.execute(query, data)

                conn.commit()

            conn.close()

# My custom dialog box.


class MyDialogBox(QtWidgets.QDialog):

    def __init__(self, parent=None):

        QtWidgets.QDialog.__init__(self, parent)
        self.DialogPosition = 0
        self.resize(450, 60)
        self.DialogTimer = QtCore.QTimer(self)
        self.DialogTimer.timeout.connect(self.AdjustDialogPosition)
        self.DialogTimer.start(1)
        self.setGeometry(QtCore.QRect(265, 0, 450, 60))
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.setStyleSheet("QDialog#MyDialogBox{background-color: rgb(44,62,80);}\n""QLabel#MessageLabel{color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n""QPushButton{background-color: rgb(40,40,40);border: none; color: rgb(255,255,255);}\n""QPushButton:hover{background-color: rgb(0,0,0);border: none; color: rgb(255,255,255);}")
        self.DialogFrame = QtWidgets.QFrame(self)
        self.DialogFrame.setGeometry(QtCore.QRect(10, 5, 430, 35))
        self.DialogFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.DialogFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.DialogFrame.setObjectName("DialogFrame")
        self.MessageLabel = QtWidgets.QLabel(self.DialogFrame)
        self.MessageLabel.setGeometry(QtCore.QRect(50, 8, 221, 16))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.MessageLabel.setFont(font)
        self.MessageLabel.setObjectName("MessageLabel")
        self.YesPushButton = QtWidgets.QPushButton(self.DialogFrame)
        self.YesPushButton.setGeometry(QtCore.QRect(290, 5, 55, 25))
        self.YesPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.YesPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.YesPushButton.setObjectName("YesPushButton")
        self.NoPushButton = QtWidgets.QPushButton(self.DialogFrame)
        self.NoPushButton.setGeometry(QtCore.QRect(350, 5, 55, 25))
        self.NoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.NoPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.NoPushButton.setObjectName("NoPushButton")
        self.OkPushButton = QtWidgets.QPushButton(self.DialogFrame)
        self.OkPushButton.setGeometry(QtCore.QRect(350, 5, 55, 25))
        self.OkPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.OkPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.OkPushButton.setObjectName("OkPushButton")
        self.OkPushButton.clicked.connect(self.OKButton)

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, MyDialogBox):

        _translate = QtCore.QCoreApplication.translate
        MyDialogBox.setWindowTitle(_translate("MyDialogBox", "Dialog"))
        self.MessageLabel.setText(_translate("MyDialogBox", ""))
        self.YesPushButton.setText(_translate("MyDialogBox", "Yes"))
        self.NoPushButton.setText(_translate("MyDialogBox", "No"))
        self.OkPushButton.setText(_translate("MyDialogBox", "OK"))

    # Make drop effect for dialog box.
    def AdjustDialogPosition(self):

        if self.DialogPosition < 15:

            self.DialogPosition += 1

            global ScreenSize

            if ScreenSize == 980:

                self.setGeometry(QtCore.QRect(
                    265, self.DialogPosition, 450, 60))

            else:

                self.setGeometry(QtCore.QRect(
                    412, self.DialogPosition, 450, 60))

        else:

            self.DialogTimer.setInterval(2000)
            self.DialogTimer.timeout.connect(self.OKButton)

    # Message in dialog box.
    def MessageType(self, dialogmessage, dialogtype, dialogstyle):

        global ScreenSize

        if ScreenSize == 980:

            self.setGeometry(QtCore.QRect(265, 0, 450, 60))

        else:

            self.setGeometry(QtCore.QRect(412, 0, 450, 60))

        if dialogtype == "OkType":

            self.YesPushButton.hide()
            self.NoPushButton.hide()
            self.OkPushButton.show()
            self.MessageLabel.setGeometry(QtCore.QRect(40, 8, 300, 16))

        elif dialogtype == "YesNoType":

            self.YesPushButton.show()
            self.NoPushButton.show()
            self.OkPushButton.hide()
            self.MessageLabel.setGeometry(QtCore.QRect(55, 8, 215, 16))

        if dialogstyle == "InfoStyle":

            self.DialogFrame.setStyleSheet(
                "QFrame#DialogFrame{background-image: url(:/DialogBoxImg/Res/infomessage.png);border: none;}\n")

        elif dialogstyle == "AlertStyle":

            self.DialogFrame.setStyleSheet(
                "QFrame#DialogFrame{background-image: url(:/DialogBoxImg/Res/alertmessage.png);border: none;}\n")

        self.MessageLabel.setText(dialogmessage)

    # Fade out dialog.
    def Fade(self, widget):

        self.effect = QGraphicsOpacityEffect()
        widget.setGraphicsEffect(self.effect)

        self.animation = QtCore.QPropertyAnimation(self.effect, b"opacity")
        self.animation.setDuration(300)
        self.animation.setStartValue(1)
        self.animation.setEndValue(0)
        self.animation.start()

    # OK button events.
    def OKButton(self):

        global CheckLoadDialogBox
        CheckLoadDialogBox = "No"

        global Module
        global PreviousModule

        Module = PreviousModule

        self.Fade(self)

        self.DialogTimer.timeout.connect(self.CloseDialog)
        self.DialogTimer.stop()

    # Close dialog box.
    def CloseDialog(self):

        self.close()

# Main GUI class.


class MainGUI(QtWidgets.QWidget):

    # Get the date and time now.
    def TimeNow(self):

        self.TimeTextLabel.setText(datetime.now().strftime(
            "%d-%b-%y" + "   " + "%I:%M:%S %p"))

    # Trigger when user click the window.
    def mousePressEvent(self, event):

        try:

            self.offset = event.pos()
            QtWidgets.QWidget.mousePressEvent(self, event)

        except Exception as e:

            pass

    # Move window position when user drag.
    def mouseMoveEvent(self, event):

        try:

            x = event.globalX()
            y = event.globalY()
            x_w = self.offset.x()
            y_w = self.offset.y()
            self.move(x-x_w, y-y_w)
            QtWidgets.QWidget.mousePressEvent(self, event)

        except Exception as e:

            pass

    # GUI for registering new user.
    def MainGUIAddUser(self):

        self.RegisterErrorLabelLoginUI.setText(Database.AddUser(0, self.SignupUsernameLineEditLoginUI.text(), self.SignupEmailLineEditLoginUI.text(
        ), self.SignupPasswordLineEditLoginUI.text(), self.SignupConfirmPasswordLineEditLoginUI.text(), "Normal", "RegisterModule"))

        RegisterSuccess = "New user " + self.SignupUsernameLineEditLoginUI.text() + \
            " successfully added, please login."

        if self.RegisterErrorLabelLoginUI.text() == RegisterSuccess:

            self.MessageBox("New User successfully added.",
                            "OkType", "InfoStyle")

            self.SignupUsernameLineEditLoginUI.setText("")
            self.SignupEmailLineEditLoginUI.setText("")
            self.SignupPasswordLineEditLoginUI.setText("")
            self.SignupConfirmPasswordLineEditLoginUI.setText("")

        else:

            if self.RegisterErrorLabelLoginUI.text() == "Please fill all fields!":

                self.MessageBox("Please fill all blank fields.",
                                "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Username must not contain special characters ,./;:}{][\/-+=!#$%^&*!":

                self.MessageBox(
                    "Username must not contain special characters.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Username must not be less than 8 characters!":

                self.MessageBox(
                    "Username must not be less than 8 characters long.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Username must not be more than 15 characters!":

                self.MessageBox(
                    "Username must not be more than 15 characters long.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Invalid email!":

                self.MessageBox("Invalid email address.",
                                "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password must not contain special characters ,./;:}{][\/-+=!#$%^&*!":

                self.MessageBox(
                    "Password must not contain special characters.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password must not be less than 8 characters!":

                self.MessageBox(
                    "Password must not be less than 8 characters long.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password must not be more than 30 characters!":

                self.MessageBox(
                    "Password must not be more than 30 characters long.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password must be alphanumeric characters!":

                self.MessageBox(
                    "Password must be alphanumeric characters.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password must have lower and uppercase letter!":

                self.MessageBox(
                    "Password must have lower and uppercase letter.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Password does not match the confirm password!":

                self.MessageBox(
                    "Password does not match the confirm password.", "OkType", "AlertStyle")

            elif self.RegisterErrorLabelLoginUI.text() == "Username " + self.SignupUsernameLineEditLoginUI.text() + " already exist!":

                self.MessageBox("Username already exists.",
                                "OkType", "AlertStyle")

        self.RegisterErrorLabelLoginUI.setText("")

    # GUI for login of user.
    def MainGUIUserLogin(self, requester):

        LoginType = self.sender()

        if LoginType == None:

            LoginType = requester

        else:

            LoginType = LoginType.objectName()

        if LoginType == "ValidateLoginPushButtonLoginUI":

            LoginErrorLabelVar = Database.UserLogin(self.LoginUsernameLineEditLoginUI.text(
            ), self.LoginPasswordLineEditLoginUI.text(), LoginType)

            self.LoginErrorLabelLoginUI.setText(
                LoginErrorLabelVar.split(",")[1])

            LoginSuccess = "Welcome " + self.LoginUsernameLineEditLoginUI.text()

            if self.LoginErrorLabelLoginUI.text() == LoginSuccess:

                if self.LoginRemembermeCheckBoxLoginUI.isChecked():

                    Database.RememberUser(
                        self.LoginUsernameLineEditLoginUI.text())

                else:

                    Database.ForgetUser(
                        self.LoginUsernameLineEditLoginUI.text())

                self.MyTimer.start(1000)

                HomeUserNameLabelVar = Database.CurrentUser(
                    self.LoginUsernameLineEditLoginUI.text(), self.TimeTextLabel.text())

                if LoginErrorLabelVar.split(",")[0] == "Administrator":

                    self.AdminLoginAccountSettingsFrame.hide()
                    self.SettingsTabWidget.raise_()
                    self.SettingsTabWidget.setCurrentIndex(1)
                    self.HomeUserNameLabel.setText(
                        "Administrator: " + HomeUserNameLabelVar)

                else:

                    self.HomeUserNameLabel.setText(HomeUserNameLabelVar)

                self.Login()

            else:

                if self.LoginErrorLabelLoginUI.text() == "User not recognized!":

                    self.MessageBox(
                        "User account not recognized.", "OkType", "AlertStyle")

                elif self.LoginErrorLabelLoginUI.text() == "Please fill all fields!":

                    self.MessageBox(
                        "Please fill all blank fields.", "OkType", "AlertStyle")

                self.LoginErrorLabelLoginUI.setText("")

        elif LoginType == "AdminValidateLoginPushButtonLoginUI":

            AdminLoginErrorLabelVar = Database.UserLogin(self.AdminLoginUsernameLineEditLoginUI.text(
            ), self.AdminLoginPasswordLineEditLoginUI.text(), LoginType)

            self.AdminLoginErrorLabel.setText(
                AdminLoginErrorLabelVar.split(",")[1])

            LoginSuccess = "Welcome " + self.AdminLoginUsernameLineEditLoginUI.text()

            if self.AdminLoginErrorLabel.text() == LoginSuccess:

                global Module
                global PreviousModule

                Module = "SettingLogoPushButton"
                PreviousModule = Module

                self.AdminLoginAccountSettingsFrame.hide()
                self.SettingsTabWidget.raise_()
                self.SettingsTabWidget.setCurrentIndex(1)

            else:

                if self.AdminLoginErrorLabel.text() == "User not recognized!":

                    self.MessageBox(
                        "Administrator account not recognized.", "OkType", "AlertStyle")

                elif self.AdminLoginErrorLabel.text() == "Please fill all fields!":

                    self.MessageBox(
                        "Please fill all blank fields.", "OkType", "AlertStyle")

                self.AdminLoginErrorLabel.setText("")

    # Change the color of Login and Register.
    def VerifyOption(self):

        Verify = self.sender()

        global Module
        global PreviousModule

        if Verify.objectName() == "LoginPushButtonLoginUI":

            Module = "LogIn"
            PreviousModule = Module

            self.LoginPushButtonLoginUI.setStyleSheet(
                "QPushButton#LoginPushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(52,152,219);border: none;}")
            self.RegisterPushButtonLoginUI.setStyleSheet(
                "QPushButton#RegisterPushButtonLoginUI{background-color: rgb(44,62,80);color: rgba(52,152,219,0.3);border: none;}")

        elif Verify.objectName() == "RegisterPushButtonLoginUI":

            Module = "Register"
            PreviousModule = Module

            self.LoginPushButtonLoginUI.setStyleSheet(
                "QPushButton#LoginPushButtonLoginUI{background-color: rgb(44,62,80);color: rgba(52,152,219,0.3);border: none;}")
            self.RegisterPushButtonLoginUI.setStyleSheet(
                "QPushButton#RegisterPushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(52,152,219);border: none;}")

    # User login, load values from database.
    def Login(self):

        global Module
        Module = "Nothing"

        self.MyTimer.start()

        self.UserNameLabel.setText(self.HomeUserNameLabel.text())
        self.LoginUsernameLineEditLoginUI.setText("")
        self.LoginPasswordLineEditLoginUI.setText("")
        self.LoginErrorLabelLoginUI.setText("")
        self.SignupUsernameLineEditLoginUI.setText("")
        self.SignupEmailLineEditLoginUI.setText("")
        self.SignupPasswordLineEditLoginUI.setText("")
        self.SignupConfirmPasswordLineEditLoginUI.setText("")
        self.RegisterErrorLabelLoginUI.setText("")
        self.UserValidationFrame.hide()
        self.HomeFrame.show()
        self.HomeFrame.raise_()

        DataToLoad = ("Carrier,SettingsCarrierTableWidget", "PayMethod,SettingsPayMethodTableWidget", "Location,SettingsLocationTableWidget", "PayTerm,SettingsPayTermTableWidget", "Discount,SettingsDiscountTableWidget", "Category,SettingsCategoryTableWidget", "Measurement,SettingsMeasurementTableWidget", "Taxing,SettingsTaxingTableWidget", "*,SettingsUserTableWidget", "PayTerm.Discount.Taxing.PayMethod.Carrier,AddVendor", "VenCode.VenName.VenPhone.VenEmail.VenAddress.VenDiscount.NormalQuery.None,VendorListTableWidget", "CusCode.CusName.CusPhone.CusEmail.CusAddress.CusDiscount.NormalQuery.None,CustomerListTableWidget", "Measurement,AddProduct", "Category,AddProduct", "Location,AddProduct",
                      "ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None,CurrentInventoryListTableWidget", "VenCode.VenName.VenCurrency.NormalQuery.None,AddPurchaseVendorNameComboBox", "PurCode.VenCode.PurDate.PurStatus.PurDueDate.PurShipDate.PurTotal.PurPaid.PurBalance.NormalQuery.None,PurchaseListTableWidget", "PurCode.NormalQuery.None,SearchReceiveOrderNumberComboBox", "PayTerm.Discount.Taxing.PayMethod.Carrier,AddCustomer", "CusCode.CusName.NormalQuery,AddSaleCustomerNameComboBox", "ProCode.NormalQuery,AddSaleProductCodeComboBox", "SaleCode.CusCode.SaleDate.SaleTotal.SalePaid.SaleBal.PayMethod.NormalQuery.None,SaleListTableWidget", "NotifText.NotifDate,NotificationsTableWidget")

        for x in range(len(DataToLoad)):

            self.LoadData(DataToLoad[x].split(",")[0],
                          DataToLoad[x].split(",")[1])

        self.AddVendorIDLineEdit.setText(str(Database.GenerateCode("Vendor")))
        self.AddStockItemCodeLineEdit.setText(
            str(Database.GenerateCode("Product")))
        self.AddPurchaseOrderNumberLineEdit.setText(
            str(Database.GenerateCode("Purchase")))
        self.AddCustomerIDLineEdit.setText(
            str(Database.GenerateCode("Customer")))

    # User logout, back to default values and layout.
    def Logout(self):

        self.UserValidationFrame.show()
        self.UserValidationFrame.raise_()

        self.VendorTabWidget.setCurrentIndex(1)
        self.SearchVendorLineEdit.setText("")
        self.VendorListTableWidget.setRowCount(0)
        self.VendorListTableWidget.clearContents()
        self.AddVendorNameLineEdit.setText("")
        self.AddVendorAddressLineEdit.setText("")
        self.AddVendorPhoneLineEdit.setText("")
        self.AddVendorEmailLineEdit.setText("")
        self.AddVendorPaymentTermComboBox.setCurrentIndex(0)
        self.AddVendorDiscountComboBox.setCurrentIndex(0)
        self.AddVendorCurrencyComboBox.setCurrentIndex(0)
        self.AddVendorTaxingComboBox.setCurrentIndex(0)
        self.AddVendorPaymentMethodComboBox.setCurrentIndex(0)
        self.AddVendorCarrierComboBox.setCurrentIndex(0)
        self.AddVendorRemarksLineEdit.setText("")
        self.AddVendorProductTableWidget.setRowCount(0)
        self.AddVendorProductTableWidget.clearContents()

        self.PurchaseTabWidget.setCurrentIndex(1)
        self.SearchPurchaseLineEdit.setText("")
        self.PurchaseListTableWidget.setRowCount(0)
        self.PurchaseListTableWidget.clearContents()
        self.AddPurchaseVendorIDLineEdit.setText("--")
        self.AddPurchaseVendorNameComboBox.setCurrentIndex(0)
        self.AddPurchaseProductTableWidget.setRowCount(0)
        self.AddPurchaseProductTableWidget.clearContents()
        self.AddPurchaseCurrencyLineEdit.setText("")
        self.AddPurchaseRemarksLineEdit.setText("")
        self.AddPurchaseTotalLineEdit.setText("0.0")
        self.AddPurchasePaidLineEdit.setText("0.0")
        self.AddPurchaseBalanceLineEdit.setText("0.0")

        self.InventoryTabWidget.setCurrentIndex(2)
        self.SearchInventoryLineEdit.setText("")
        self.CurrentInventoryListTableWidget.setRowCount(0)
        self.CurrentInventoryListTableWidget.clearContents()
        self.SearchReceiveOrderNumberComboBox.setCurrentIndex(0)
        self.SearchReceiveOrderNumberTableWidget.setRowCount(0)
        self.SearchReceiveOrderNumberTableWidget.clearContents()
        self.AddStockItemCodeLineEdit.setText("")
        self.AddStockItemNameLineEdit.setText("")
        self.AddStockItemCategoryComboBox.setCurrentIndex(0)
        self.AddStockItemPriceLineEdit.setText("0.00")
        self.AddStockItemReorderPointLineEdit.setText("")
        self.AddStockItemMeasurementComboBox.setCurrentIndex(0)
        self.AddStockItemLocationComboBox.setCurrentIndex(0)
        self.AddStockRemarksLineEdit.setText("")

        self.SaleTabWidget.setCurrentIndex(1)
        self.SearchSaleLineEdit.setText("")
        self.SaleListTableWidget.setRowCount(0)
        self.SaleListTableWidget.clearContents()
        self.CustomerSaleListTableWidget.setRowCount(0)
        self.CustomerSaleListTableWidget.clearContents()
        self.AddSaleCustomerNameComboBox.setCurrentIndex(0)
        self.AddSaleProductTableWidget.setRowCount(0)
        self.AddSaleProductTableWidget.clearContents()
        self.AddSaleProductCurrencyComboBox.setCurrentIndex(0)
        self.AddSaleProductPayMethodComboBox.setCurrentIndex(0)
        self.AddSaleProductNameLineEdit.setText("---")
        self.AddSaleProductPriceLineEdit.setText("0000000")
        self.AddSaleProductQuantityLineEdit.setText("")
        self.AddSaleSubTotalLineEdit.setText("0.0")
        self.AddSaleDiscountLineEdit.setText("0 %")
        self.AddSaleTaxLineEdit.setText("0 %")
        self.AddSaleTotalLineEdit.setText("0.0")
        self.AddSalePaidLineEdit.setText("0.0")
        self.AddSaleBalanceLineEdit.setText("0.0")
        self.AddSaleChangeLineEdit.setText("0.0")
        self.AddSaleCalcPaidLineEdit.setText("")

        self.CustomerTabWidget.setCurrentIndex(1)
        self.SearchCustomerLineEdit.setText("")
        self.CustomerListTableWidget.setRowCount(0)
        self.CustomerListTableWidget.clearContents()
        self.AddCustomerNameLineEdit.setText("")
        self.AddCustomerAddressLineEdit.setText("")
        self.AddCustomerPhoneLineEdit.setText("")
        self.AddCustomerEmailLineEdit.setText("")
        self.AddCustomerPaymentTermComboBox.setCurrentIndex(0)
        self.AddCustomerDiscountComboBox.setCurrentIndex(0)
        self.AddCustomerCurrencyComboBox.setCurrentIndex(0)
        self.AddCustomerTaxingComboBox.setCurrentIndex(0)
        self.AddCustomerPaymentMethodComboBox.setCurrentIndex(0)
        self.AddCustomerCarrierComboBox.setCurrentIndex(0)
        self.AddCustomerRemarksLineEdit.setText("")

        self.AdminLoginAccountSettingsFrame.show()
        self.AdminLoginAccountSettingsFrame.raise_()
        self.AdminLoginUsernameLineEditLoginUI.setText("")
        self.AdminLoginPasswordLineEditLoginUI.setText("")
        self.AdminLoginErrorLabel.setText("")
        self.SettingsTabWidget.setCurrentIndex(1)
        self.SettingsPreferencesAToolBox.setCurrentIndex(0)
        self.SettingsPreferencesBToolBox.setCurrentIndex(0)
        self.SettingsCarrierTableWidget.clearContents()
        self.SettingsCarrierTableWidget.setRowCount(0)
        self.SettingsLocationTableWidget.clearContents()
        self.SettingsLocationTableWidget.setRowCount(0)
        self.SettingsDiscountTableWidget.clearContents()
        self.SettingsDiscountTableWidget.setRowCount(0)
        self.SettingsMeasurementTableWidget.clearContents()
        self.SettingsMeasurementTableWidget.setRowCount(0)
        self.SettingsPayMethodTableWidget.clearContents()
        self.SettingsPayMethodTableWidget.setRowCount(0)
        self.SettingsPayTermTableWidget.clearContents()
        self.SettingsPayTermTableWidget.setRowCount(0)
        self.SettingsCategoryTableWidget.clearContents()
        self.SettingsCategoryTableWidget.setRowCount(0)
        self.SettingsTaxingTableWidget.clearContents()
        self.SettingsTaxingTableWidget.setRowCount(0)
        self.SettingsUserTableWidget.setRowCount(0)
        self.SettingsUserTableWidget.clearContents()

        self.ReportsMenuFrame.raise_()
        self.ReportsInventorySummaryFilterFrame.raise_()

        self.ReportsInventorySummaryFilterByProductsComboBox.clear()
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.clear()
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.clear()
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.clear()
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.clear()
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.clear()
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.clear()
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.clear()
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.clear()
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.clear()
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.clear()
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.clear()
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.clear()
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.clear()
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.clear()
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.clear()
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.clear()
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.clear()
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.clear()
        self.ReportsProductPriceListFilterByProductsComboBox.clear()
        self.ReportsCustomerListFilterByCustomerComboBox.clear()
        self.ReportsVendorListFilterByVendorComboBox.clear()
        self.ReportsVendorProductListFilterByVendorComboBox.clear()
        self.ReportsVendorProductListFilterByProductsComboBox.clear()
        self.ReportsInventoryByLocationFilterByProductsComboBox.clear()
        self.ReportsInventoryByLocationFilterByLocationComboBox.clear()
        self.ReportsInventoryDetailsFilterByProductsComboBox.clear()
        self.ReportsInventoryDetailsFilterByLocationComboBox.clear()

        self.ReportsInventorySummaryFilterByProductsComboBox.addItem("")
        self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem("")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem("")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem("")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem("")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem("")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
            "Custom Select Items")

        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem("")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
            "Custom Select Items")

        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem("")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
            "Custom Select Items")

        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem("")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
            "All Items")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
            "Custom Select Items")

        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
            "Custom Select Items")

        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem("")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
            "Custom Select Items")

        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
            "Custom Select Items")

        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem("")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
            "Custom Select Items")

        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem("")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
            "Custom Select Items")

        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem("")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
            "Custom Select Items")

        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem("")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
            "Custom Select Items")

        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem("")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
            "Custom Select Items")

        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "Custom Select Items")

        self.ReportsProductPriceListFilterByProductsComboBox.addItem("")
        self.ReportsProductPriceListFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsProductPriceListFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsCustomerListFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerListFilterByCustomerComboBox.addItem("All Items")
        self.ReportsCustomerListFilterByCustomerComboBox.addItem(
            "Custom Select Items")

        self.ReportsVendorListFilterByVendorComboBox.addItem("")
        self.ReportsVendorListFilterByVendorComboBox.addItem("All Items")
        self.ReportsVendorListFilterByVendorComboBox.addItem(
            "Custom Select Items")

        self.ReportsVendorProductListFilterByVendorComboBox.addItem("")
        self.ReportsVendorProductListFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsVendorProductListFilterByVendorComboBox.addItem(
            "Custom Select Items")

        self.ReportsVendorProductListFilterByProductsComboBox.addItem("")
        self.ReportsVendorProductListFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsVendorProductListFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem("")
        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem("")
        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
            "All Items")
        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
            "Custom Select Items")

        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem("")
        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
            "Custom Select Items")

        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem("")
        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
            "All Items")
        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
            "Custom Select Items")

        self.ReportsInventorySummaryFilterByProductsComboBox.setCurrentIndex(0)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setCurrentIndex(
            0)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setCurrentIndex(
            0)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setCurrentIndex(
            0)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setCurrentIndex(
            0)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setCurrentIndex(
            0)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setCurrentIndex(
            0)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setCurrentIndex(
            0)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setCurrentIndex(
            0)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setCurrentIndex(
            0)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setCurrentIndex(
            0)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setCurrentIndex(
            0)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setCurrentIndex(
            0)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setCurrentIndex(0)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setCurrentIndex(
            0)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setCurrentIndex(
            0)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setCurrentIndex(
            0)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setCurrentIndex(
            0)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setCurrentIndex(
            0)
        self.ReportsProductPriceListFilterByProductsComboBox.setCurrentIndex(0)
        self.ReportsCustomerListFilterByCustomerComboBox.setCurrentIndex(0)
        self.ReportsVendorListFilterByVendorComboBox.setCurrentIndex(0)
        self.ReportsVendorProductListFilterByVendorComboBox.setCurrentIndex(0)
        self.ReportsVendorProductListFilterByProductsComboBox.setCurrentIndex(
            0)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setCurrentIndex(
            0)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setCurrentIndex(
            0)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setCurrentIndex(0)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setCurrentIndex(0)

        self.ReportWebViewBrowser.history().clear()

        self.MyTimer.stop()
        self.FooterFrame.hide()

    # Load data from database.
    def LoadData(self, datatable, tablewidget):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if tablewidget == "SettingsCarrierTableWidget" or tablewidget == "SettingsPayMethodTableWidget" or tablewidget == "SettingsLocationTableWidget" or tablewidget == "SettingsPayTermTableWidget" or tablewidget == "SettingsDiscountTableWidget" or tablewidget == "SettingsCategoryTableWidget" or tablewidget == "SettingsMeasurementTableWidget" or tablewidget == "SettingsTaxingTableWidget":

            MyQuery = "SELECT " + datatable + " FROM Settings"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                if tablewidget == "SettingsCarrierTableWidget":

                    self.SettingsCarrierTableWidget.clearContents()
                    self.SettingsCarrierTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsCarrierTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsCarrierTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsCarrierTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsPayMethodTableWidget":

                    self.SettingsPayMethodTableWidget.clearContents()
                    self.SettingsPayMethodTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsPayMethodTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsPayMethodTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsPayMethodTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsLocationTableWidget":

                    self.SettingsLocationTableWidget.clearContents()
                    self.SettingsLocationTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsLocationTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsLocationTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsLocationTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsPayTermTableWidget":

                    self.SettingsPayTermTableWidget.clearContents()
                    self.SettingsPayTermTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsPayTermTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsPayTermTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsPayTermTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsDiscountTableWidget":

                    self.SettingsDiscountTableWidget.clearContents()
                    self.SettingsDiscountTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsDiscountTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsDiscountTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp("\d+\.?\d*")
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsDiscountTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsCategoryTableWidget":

                    self.SettingsCategoryTableWidget.clearContents()
                    self.SettingsCategoryTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsCategoryTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsCategoryTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsCategoryTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsMeasurementTableWidget":

                    self.SettingsMeasurementTableWidget.clearContents()
                    self.SettingsMeasurementTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsMeasurementTableWidget.insertRow(
                            rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsMeasurementTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp(r'[\w\d\ ]+')
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsMeasurementTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

                elif tablewidget == "SettingsTaxingTableWidget":

                    self.SettingsTaxingTableWidget.clearContents()
                    self.SettingsTaxingTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(result):

                        self.SettingsTaxingTableWidget.insertRow(rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            if data == None:

                                data = ""
                                self.SettingsTaxingTableWidget.removeRow(
                                    rownumber)

                            self.tableLineEdit = QtWidgets.QLineEdit()
                            font = QtGui.QFont()
                            font.setFamily("Raleway")
                            font.setPointSize(11)
                            font.setBold(False)
                            font.setWeight(50)
                            self.tableLineEdit.setFont(font)
                            self.tableLineEdit.setStyleSheet(
                                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
                            self.tableLineEdit.setText(data)
                            self.tableLineEdit.setObjectName("tableLineEdit")
                            rx = QtCore.QRegExp("\d+\.?\d*")
                            validator = QtGui.QRegExpValidator(rx)
                            self.tableLineEdit.setValidator(validator)

                            self.SettingsTaxingTableWidget.setCellWidget(
                                rownumber, 0, self.tableLineEdit)

        elif tablewidget == "SettingsUserTableWidget":

            MyQuery = "SELECT " + datatable + " FROM Users"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.SettingsUserTableWidget.clearContents()
                self.SettingsUserTableWidget.setSortingEnabled(False)
                self.SettingsUserTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.SettingsUserTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.SettingsUserTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                        item = self.SettingsUserTableWidget.item(rownumber, 0)
                        item.setFlags(QtCore.Qt.ItemIsSelectable |
                                      QtCore.Qt.ItemIsEnabled)

                    for i in range(0, 4):

                        item = self.SettingsUserTableWidget.item(rownumber, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.SettingsUserTableWidget.setSortingEnabled(True)

        elif tablewidget == "AddVendor" or tablewidget == "AddCustomer":

            if tablewidget == "AddVendor":

                self.AddVendorPaymentTermComboBox.clear()
                self.AddVendorDiscountComboBox.clear()
                self.AddVendorTaxingComboBox.clear()
                self.AddVendorPaymentMethodComboBox.clear()
                self.AddVendorCarrierComboBox.clear()
                self.AddVendorCurrencyComboBox.clear()

                self.AddVendorPaymentTermComboBox.addItem("")
                self.AddVendorDiscountComboBox.addItem("")
                self.AddVendorTaxingComboBox.addItem("")
                self.AddVendorPaymentMethodComboBox.addItem("")
                self.AddVendorCarrierComboBox.addItem("")
                self.AddVendorCurrencyComboBox.addItem("")

            elif tablewidget == "AddCustomer":

                self.AddCustomerPaymentTermComboBox.clear()
                self.AddCustomerDiscountComboBox.clear()
                self.AddCustomerTaxingComboBox.clear()
                self.AddCustomerPaymentMethodComboBox.clear()
                self.AddCustomerCarrierComboBox.clear()
                self.AddCustomerCurrencyComboBox.clear()

                self.AddCustomerPaymentTermComboBox.addItem("")
                self.AddCustomerDiscountComboBox.addItem("")
                self.AddCustomerTaxingComboBox.addItem("")
                self.AddCustomerPaymentMethodComboBox.addItem("")
                self.AddCustomerCarrierComboBox.addItem("")
                self.AddCustomerCurrencyComboBox.addItem("")

            data = datatable.split(".")

            for d in data:

                MyQuery = "SELECT " + d + " FROM Settings"

                cursor.execute(MyQuery)

                result = cursor.fetchall()

                if result:

                    for r in result:

                        if r[0] is not None:

                            if d == "PayTerm":

                                if tablewidget == "AddVendor":

                                    self.AddVendorPaymentTermComboBox.addItem(
                                        r[0])

                                elif tablewidget == "AddCustomer":

                                    self.AddCustomerPaymentTermComboBox.addItem(
                                        r[0])

                            elif d == "Discount":

                                if tablewidget == "AddVendor":

                                    self.AddVendorDiscountComboBox.addItem(
                                        r[0] + " %")

                                elif tablewidget == "AddCustomer":

                                    self.AddCustomerDiscountComboBox.addItem(
                                        r[0] + " %")

                            elif d == "Taxing":

                                if tablewidget == "AddVendor":

                                    self.AddVendorTaxingComboBox.addItem(
                                        r[0] + " %")

                                elif tablewidget == "AddCustomer":

                                    self.AddCustomerTaxingComboBox.addItem(
                                        r[0] + " %")

                            elif d == "PayMethod":

                                if tablewidget == "AddVendor":

                                    self.AddVendorPaymentMethodComboBox.addItem(
                                        r[0])

                                elif tablewidget == "AddCustomer":

                                    self.AddCustomerPaymentMethodComboBox.addItem(
                                        r[0])

                            elif d == "Carrier":

                                if tablewidget == "AddVendor":

                                    self.AddVendorCarrierComboBox.addItem(r[0])

                                elif tablewidget == "AddCustomer":

                                    self.AddCustomerCarrierComboBox.addItem(
                                        r[0])

            global Currencies

            for c in Currencies:

                if tablewidget == "AddVendor":

                    self.AddVendorCurrencyComboBox.addItem(c)

                elif tablewidget == "AddCustomer":

                    self.AddCustomerCurrencyComboBox.addItem(c)

        elif tablewidget == "VendorListTableWidget":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            phone = datatable.split(".")[2]
            email = datatable.split(".")[3]
            address = datatable.split(".")[4]
            discount = datatable.split(".")[5]
            query = datatable.split(".")[6]
            string = datatable.split(".")[7]
            string = string.lower()

            if query == "NormalQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + phone + ", " + \
                    email + ", " + address + ", " + discount + " FROM Vendors"

            elif query == "SearchQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + phone + ", " + email + ", " + address + ", " + discount + " FROM Vendors WHERE " + "LOWER(" + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + name + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + phone + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + email + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + address + ")" + " LIKE " + "'%" + string + "%'" + \
                    " OR " + "LOWER(" + discount + ")" + \
                    " LIKE " + "'%" + string + "%'"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.VendorListTableWidget.clearContents()
                self.VendorListTableWidget.setSortingEnabled(False)
                self.VendorListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.VendorListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.VendorListTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 6):

                    for j in range(self.VendorListTableWidget.rowCount()):

                        item = self.VendorListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.VendorListTableWidget.setSortingEnabled(True)

        elif tablewidget == "CustomerListTableWidget":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            phone = datatable.split(".")[2]
            email = datatable.split(".")[3]
            address = datatable.split(".")[4]
            discount = datatable.split(".")[5]
            query = datatable.split(".")[6]
            string = datatable.split(".")[7]
            string = string.lower()

            if query == "NormalQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + phone + ", " + \
                    email + ", " + address + ", " + discount + " FROM Customers"

            elif query == "SearchQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + phone + ", " + email + ", " + address + ", " + discount + " FROM Customers WHERE " + "LOWER(" + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + name + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + phone + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + email + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + address + ")" + " LIKE " + "'%" + string + "%'" + \
                    " OR " + "LOWER(" + discount + ")" + \
                    " LIKE " + "'%" + string + "%'"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.CustomerListTableWidget.clearContents()
                self.CustomerListTableWidget.setSortingEnabled(False)
                self.CustomerListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.CustomerListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.CustomerListTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 6):

                    for j in range(self.CustomerListTableWidget.rowCount()):

                        item = self.CustomerListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.CustomerListTableWidget.setSortingEnabled(True)

        elif tablewidget == "AddProduct":

            if datatable == "Measurement":

                self.AddStockItemMeasurementComboBox.clear()
                self.AddStockItemMeasurementComboBox.addItem("")

            elif datatable == "Category":

                self.AddStockItemCategoryComboBox.clear()
                self.AddStockItemCategoryComboBox.addItem("")

            elif datatable == "Location":

                self.AddStockItemLocationComboBox.clear()
                self.AddStockItemLocationComboBox.addItem("")

            MyQuery = "SELECT " + datatable + " FROM Settings"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                for r in result:

                    if r[0] is not None:

                        if datatable == "Measurement":

                            self.AddStockItemMeasurementComboBox.addItem(r[0])

                        elif datatable == "Category":

                            self.AddStockItemCategoryComboBox.addItem(r[0])

                        elif datatable == "Location":

                            self.AddStockItemLocationComboBox.addItem(r[0])

        elif tablewidget == "CurrentInventoryListTableWidget":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            category = datatable.split(".")[2]
            price = datatable.split(".")[3]
            location = datatable.split(".")[4]
            lastvendor = datatable.split(".")[5]
            unitcost = datatable.split(".")[6]
            quantity = datatable.split(".")[7]
            measurement = datatable.split(".")[8]
            query = datatable.split(".")[9]
            string = datatable.split(".")[10]
            string = string.lower()

            if query == "NormalQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + category + "," + price + ", " + location + \
                    ", " + lastvendor + ", " + unitcost + ", " + \
                    quantity + ", " + measurement + " FROM Products"

            elif query == "SearchQuery":

                MyQuery = "SELECT " + code + ", " + name + ", " + category + ", " + price + ", " + location + ", " + lastvendor + ", " + unitcost + ", " + quantity + ", " + measurement + " FROM Products WHERE " + "LOWER(" + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + name + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + category + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + \
                    price + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + location + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + lastvendor + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + unitcost + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + quantity + ")" + \
                    " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + measurement + ")" + \
                    " LIKE " + "'%" + string + "%'"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.CurrentInventoryListTableWidget.clearContents()
                self.CurrentInventoryListTableWidget.setSortingEnabled(False)
                self.CurrentInventoryListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.CurrentInventoryListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        if columnnumber == 8:

                            qitem = self.CurrentInventoryListTableWidget.item(
                                rownumber, columnnumber - 1)
                            self.CurrentInventoryListTableWidget.setItem(
                                rownumber, columnnumber - 1, QtWidgets.QTableWidgetItem(str(qitem.text()) + " " + str(data)))

                        else:

                            self.CurrentInventoryListTableWidget.setItem(
                                rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 8):

                    for j in range(self.CurrentInventoryListTableWidget.rowCount()):

                        item = self.CurrentInventoryListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.CurrentInventoryListTableWidget.setSortingEnabled(True)

        elif tablewidget == "ProductWidgetListTableWidget":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            Category = datatable.split(".")[2]
            measurement = datatable.split(".")[3]
            price = datatable.split(".")[4]
            vendor = datatable.split(".")[5]
            data = datatable.split(".")[6]
            editmode = datatable.split(".")[7]
            query = datatable.split(".")[8]
            string = datatable.split(".")[9]
            string = string.lower()
            button = datatable.split(".")[10]

            if query == "NormalQuery":

                if button == "AddVendorProductPushButton":

                    MyQuery = "SELECT " + code + ", " + name + ", " + \
                        Category + ", " + measurement + " FROM Products"

                elif button == "AddVendorProductToPurchasePushButton":

                    MyQuery = "SELECT Products." + code + ", " + name + ", " + Category + ", " + measurement + ", " + price + \
                        " FROM Products INNER JOIN VendorProduct ON Products." + code + \
                        " = VendorProduct." + code + " WHERE " + vendor + " = " + "'" + data + "'"

            elif query == "SearchQuery":

                if button == "AddVendorProductPushButton":

                    MyQuery = "SELECT " + code + ", " + name + ", " + Category + ", " + measurement + " FROM Products WHERE " + \
                        "LOWER(" + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + name + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                        "LOWER(" + Category + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                        "LOWER(" + measurement + ")" + \
                        " LIKE " + "'%" + string + "%'"

                elif button == "AddVendorProductToPurchasePushButton":

                    MyQuery = "SELECT Products." + code + ", " + name + ", " + Category + ", " + measurement + ", " + price + " FROM Products INNER JOIN VendorProduct ON Products." + code + " = VendorProduct." + code + " WHERE " + vendor + " = " + "'" + data + "'" + \
                        " AND (" + "LOWER(" + "Products." + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + name + ")" + " LIKE " + "'%" + string + "%'" + \
                        " OR " + "LOWER(" + Category + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                        "LOWER(" + measurement + ")" + " LIKE " + \
                        "'%" + string + "%'" + ")"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                itemsintable = list()

                itemcode = ""
                itemname = ""
                itemCategory = ""
                itemmeasurement = ""
                itemprice = ""

                if button == "AddVendorProductPushButton":

                    itemintable = (itemcode, itemname,
                                   itemCategory, itemmeasurement)

                    rowcount = self.AddVendorProductTableWidget.rowCount()

                    for r in range(0, rowcount):

                        itemcode = self.AddVendorProductTableWidget.item(r, 0)
                        itemname = self.AddVendorProductTableWidget.item(r, 1)
                        itemCategory = self.AddVendorProductTableWidget.item(
                            r, 2)
                        itemmeasurement = self.AddVendorProductTableWidget.item(
                            r, 3)

                        if itemcode != None and itemname != None and itemCategory != None and itemmeasurement != None:

                            if itemcode.text() != "" and itemname.text() != "" and itemCategory.text() != "" and itemmeasurement.text() != "":

                                itemintable = (itemcode.text(), itemname.text(
                                ), itemCategory.text(), itemmeasurement.text())
                                itemsintable.append(itemintable)

                elif button == "AddVendorProductToPurchasePushButton":

                    itemintable = (itemcode, itemname, itemCategory, itemprice)

                    rowcount = self.AddPurchaseProductTableWidget.rowCount()

                    for r in range(0, rowcount):

                        itemcode = self.AddPurchaseProductTableWidget.item(
                            r, 0)
                        itemname = self.AddPurchaseProductTableWidget.item(
                            r, 1)
                        itemCategory = self.AddPurchaseProductTableWidget.item(
                            r, 2)
                        itemprice = self.AddPurchaseProductTableWidget.item(
                            r, 4)

                        if itemcode != None and itemname != None and itemCategory != None and itemprice != None:

                            if itemcode.text() != "" and itemname.text() != "" and itemCategory.text() != "" and itemprice.text() != "":

                                itemintable = (itemcode.text(), itemname.text(), itemCategory.text(
                                ), itemprice.text().split(" ")[2], itemprice.text().split(" ")[0])
                                itemsintable.append(itemintable)

                for i in itemsintable:

                    if i in result:

                        if editmode == i[0]:

                            result = list()

                            result.append(i)

                            break

                        elif editmode == "EditNo":

                            result.remove(i)

                self.ProductWidgetListTableWidget.clearContents()
                self.ProductWidgetListTableWidget.setRowCount(0)

                index = 0

                for r in result:

                    productcode = r[0]
                    productname = r[1]
                    productCategory = r[2]
                    productmeasurement = r[3]

                    self.ProductWidgetListTableWidget.insertRow(index)

                    if button == "AddVendorProductPushButton":

                        productprice = ""
                        productquantity = "None"

                        self.ProductDialogBox(index, productcode, productname, productCategory,
                                              productmeasurement, productprice, productquantity, "AddVendorProductPushButton")

                    elif button == "AddVendorProductToPurchasePushButton":

                        productprice = r[4]
                        productquantity = ""

                        self.ProductDialogBox(index, productcode, productname, productCategory, productmeasurement,
                                              productprice, productquantity, "AddVendorProductToPurchasePushButton")

                    index += 1

                if index > 1:

                    if button == "AddVendorProductPushButton":

                        self.ProductResultLabel.setText(
                            str(index) + " Products")

                    elif button == "AddVendorProductToPurchasePushButton":

                        self.ProductResultLabel.setText(
                            str(index) + " Vendor Products")

                else:

                    if button == "AddVendorProductPushButton":

                        self.ProductResultLabel.setText(
                            str(index) + " Product")

                    elif button == "AddVendorProductToPurchasePushButton":

                        self.ProductResultLabel.setText(
                            str(index) + " Vendor Product")

            else:

                self.ProductWidgetListTableWidget.clearContents()
                self.ProductWidgetListTableWidget.setRowCount(0)

                if button == "AddVendorProductPushButton":

                    self.ProductResultLabel.setText(
                        "No Product " + self.SearchProductLineEdit.text())

                elif button == "AddVendorProductToPurchasePushButton":

                    self.ProductResultLabel.setText(
                        "No Vendor Product " + self.SearchProductLineEdit.text())

        elif tablewidget == "AddPurchaseVendorNameComboBox":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            currency = datatable.split(".")[2]
            query = datatable.split(".")[3]
            string = datatable.split(".")[4]

            if query == "NormalQuery":

                cursor.execute("SELECT " + code + ", " +
                               name + " FROM Vendors")

            elif query == "SearchQuery":

                cursor.execute("SELECT " + code + ", " + currency +
                               " FROM Vendors WHERE " + name + " LIKE %s", (string,))

            result = cursor.fetchall()

            if query == "NormalQuery":

                if result:

                    self.AddPurchaseVendorNameComboBox.clear()

                    self.AddPurchaseVendorNameComboBox.addItem("")

                    for r in result:

                        self.AddPurchaseVendorNameComboBox.addItem(r[1])

            elif query == "SearchQuery":

                if result:

                    for r in result:

                        self.AddPurchaseVendorIDLineEdit.setText(r[0])
                        self.AddPurchaseCurrencyLineEdit.setText(r[1])

        elif tablewidget == "PurchaseListTableWidget":

            purcode = datatable.split(".")[0]
            vencode = datatable.split(".")[1]
            purdate = datatable.split(".")[2]
            purstatus = datatable.split(".")[3]
            purduedate = datatable.split(".")[4]
            purshipdate = datatable.split(".")[5]
            purtotal = datatable.split(".")[6]
            purpaid = datatable.split(".")[7]
            purbalance = datatable.split(".")[8]
            query = datatable.split(".")[9]
            string = datatable.split(".")[10]
            string = string.lower()

            if query == "NormalQuery":

                MyQuery = "SELECT " + purcode + ", " + vencode + ", " + "TO_CHAR(" + purdate + " :: DATE, 'dd-Mon-yy')" + ", " + purstatus + ", " + "TO_CHAR(" + purduedate + \
                    " :: DATE, 'dd-Mon-yy')" + ", " + \
                    "TO_CHAR(" + purshipdate + " :: DATE, 'dd-Mon-yy')" + ", " + \
                    purtotal + ", " + purpaid + ", " + purbalance + " FROM Purchases"

            elif query == "SearchQuery":

                MyQuery = "SELECT " + purcode + ", " + vencode + ", " + "TO_CHAR(" + purdate + " :: DATE, 'dd-Mon-yy')" + ", " + purstatus + ", " + "TO_CHAR(" + purduedate + " :: DATE, 'dd-Mon-yy')" + ", " + "TO_CHAR(" + purshipdate + " :: DATE, 'dd-Mon-yy')" + ", " + purtotal + ", " + purpaid + ", " + purbalance + " FROM Purchases WHERE " + "LOWER(" + purcode + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + vencode + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + "TO_CHAR(" + purdate + " :: DATE, 'dd-Mon-yy')" + ")" + " LIKE " + \
                    "'%" + string + "%'" + " OR " + "LOWER(" + purstatus + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + "TO_CHAR(" + purduedate + " :: DATE, 'dd-Mon-yy')" + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + "TO_CHAR(" + purshipdate + " :: DATE, 'dd-Mon-yy')" + \
                    ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + purtotal + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + \
                    purpaid + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + purbalance + ")" + \
                    " LIKE " + "'%" + string + "%'"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.PurchaseListTableWidget.clearContents()
                self.PurchaseListTableWidget.setSortingEnabled(False)
                self.PurchaseListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.PurchaseListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.PurchaseListTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 9):

                    for j in range(self.PurchaseListTableWidget.rowCount()):

                        item = self.PurchaseListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.PurchaseListTableWidget.setSortingEnabled(True)

        elif tablewidget == "SearchReceiveOrderNumberComboBox":

            code = datatable.split(".")[0]
            query = datatable.split(".")[1]
            string = datatable.split(".")[2]

            if query == "NormalQuery":

                cursor.execute(
                    "SELECT " + code + " FROM Purchases WHERE CAST(PurNotReceived AS DECIMAL) > 0")

            elif query == "SearchQuery":

                cursor.execute("SELECT Products.ProCode, Products.ProName, Products.ProCategory, Products.ProMeasurement, Purchases.VenCode, PurchaseProduct.NotReceived FROM Products INNER JOIN PurchaseProduct ON Products.ProCode = PurchaseProduct.ProCode INNER JOIN Purchases ON Purchases.PurCode = PurchaseProduct.PurCode WHERE PurchaseProduct.PurCode LIKE %s AND CAST(PurchaseProduct.NotReceived AS DECIMAL) > 0", (string,))

            result = cursor.fetchall()

            if query == "NormalQuery":

                self.SearchReceiveOrderNumberComboBox.clear()
                self.SearchReceiveOrderNumberComboBox.addItem("")
                self.SearchReceiveOrderNumberTableWidget.setRowCount(0)
                self.SearchReceiveOrderNumberTableWidget.clearContents()

                if result:

                    for r in result:

                        self.SearchReceiveOrderNumberComboBox.addItem(r[0])

            elif query == "SearchQuery":

                listtuple = []

                if result:

                    for r in result:

                        resulttuple = (r[0], r[1], r[2], r[4],
                                       str(r[5]) + " " + str(r[3]))
                        listtuple.append(resulttuple)

                    self.SearchReceiveOrderNumberTableWidget.clearContents()
                    self.SearchReceiveOrderNumberTableWidget.setSortingEnabled(
                        False)
                    self.SearchReceiveOrderNumberTableWidget.setRowCount(0)

                    for rownumber, rowdata in enumerate(listtuple):

                        self.SearchReceiveOrderNumberTableWidget.insertRow(
                            rownumber)

                        for columnnumber, data in enumerate(rowdata):

                            self.SearchReceiveOrderNumberTableWidget.setItem(
                                rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                        self.tableLineEdit = QtWidgets.QLineEdit()
                        font = QtGui.QFont()
                        font.setFamily("Raleway")
                        font.setPointSize(11)
                        font.setBold(False)
                        font.setWeight(50)
                        self.tableLineEdit.setFont(font)
                        self.tableLineEdit.setStyleSheet(
                            "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignCenter;}\n")
                        self.tableLineEdit.setObjectName("tableLineEdit")
                        rx = QtCore.QRegExp("\d+\.?\d*")
                        validator = QtGui.QRegExpValidator(rx)
                        self.tableLineEdit.setValidator(validator)
                        self.SearchReceiveOrderNumberTableWidget.setCellWidget(
                            rownumber, 5, self.tableLineEdit)

                    for i in range(0, 6):

                        for j in range(self.SearchReceiveOrderNumberTableWidget.rowCount()):

                            item = self.SearchReceiveOrderNumberTableWidget.item(
                                j, i)

                            if item != None:

                                item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.SearchReceiveOrderNumberTableWidget.setSortingEnabled(
                    True)

        elif tablewidget == "AddSaleCustomerNameComboBox":

            code = datatable.split(".")[0]
            name = datatable.split(".")[1]
            query = datatable.split(".")[2]

            if query == "NormalQuery":

                cursor.execute("SELECT " + code + ", " +
                               name + " FROM Customers")

                result = cursor.fetchall()

                self.AddSaleCustomerNameComboBox.clear()

                x = 0
                currentcustomer = ""

                if result:

                    self.AddSaleCustomerNameComboBox.addItem("")

                    for r in result:

                        self.AddSaleCustomerNameComboBox.addItem(
                            r[0] + " - " + r[1])

                        if r[1] == "Walk In":

                            x = 1
                            currentcustomer = r[0] + " - " + r[1]

                if x == 0:

                    Database.AddCustomersModule(str(Database.GenerateCode("Customer")), "Walk In", "Default", "Default",
                                                "Default", "Default", "0 %", "Default", "0 %", "Default", "Default", "Walk In Customer")
                    self.LoadData("CusCode.CusName.NormalQuery",
                                  "AddSaleCustomerNameComboBox")
                    self.LoadData(
                        "CusCode.CusName.CusPhone.CusEmail.CusAddress.CusDiscount.NormalQuery.None", "CustomerListTableWidget")

                self.AddSaleCustomerNameComboBox.setCurrentIndex(0)

            elif query == "SearchQuery":

                cursor.execute("SELECT CusCurrency, CusPayMethod, CusDiscount, CusTaxing FROM Customers WHERE CusCode = %s", (
                    self.AddSaleCustomerNameComboBox.currentText().split(" - ")[0],))

                result = cursor.fetchall()

                if result:

                    for r in result:

                        return r[0] + "&" + r[1] + "&" + r[2] + "&" + r[3]

                else:

                    return "---" + "&" + "---" + "&" + "0 %" + "&" + "0 %"

        elif tablewidget == "AddSaleProductCodeComboBox":

            code = datatable.split(".")[0]
            query = datatable.split(".")[1]

            if query == "NormalQuery":

                cursor.execute("SELECT " + code +
                               ", ProQuantity FROM Products")

                result = cursor.fetchall()

                self.AddSaleProductCodeComboBox.clear()
                self.AddSaleProductCodeComboBox.addItem("")
                self.AddSaleProductCodeComboBox.setCurrentText("")

                if result:

                    for r in result:

                        if float(r[1]) > 0.0:

                            self.AddSaleProductCodeComboBox.addItem(r[0])

            elif query == "SearchQuery":

                cursor.execute("SELECT ProName, ProCategory, ProPrice FROM Products WHERE ProCode = %s", (
                    self.AddSaleProductCodeComboBox.currentText(),))

                result = cursor.fetchall()

                if result:

                    for r in result:

                        return r[0] + "&" + r[1] + "&" + str(r[2])

                else:

                    return "---" + "&" + "---" + "&" + "0.0"

        elif tablewidget == "SaleListTableWidget":

            code = datatable.split(".")[0]
            cuscode = datatable.split(".")[1]
            date = datatable.split(".")[2]
            total = datatable.split(".")[3]
            paid = datatable.split(".")[4]
            balance = datatable.split(".")[5]
            paymethod = datatable.split(".")[6]
            query = datatable.split(".")[7]
            string = datatable.split(".")[8]
            string = string.lower()

            if query == "NormalQuery":

                MyQuery = "SELECT " + code + ", " + cuscode + ", " + \
                    "TO_CHAR(" + date + " :: DATE, 'dd-Mon-yy')" + ", " + total + \
                    ", " + paid + ", " + balance + ", " + paymethod + " FROM Sales"

            elif query == "SearchQuery":

                MyQuery = "SELECT " + code + ", " + cuscode + ", " + "TO_CHAR(" + date + " :: DATE, 'dd-Mon-yy')" + ", " + total + ", " + paid + ", " + balance + ", " + paymethod + " FROM Sales WHERE " + "LOWER(" + code + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + cuscode + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + "TO_CHAR(" + \
                    date + " :: DATE, 'dd-Mon-yy')" + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + total + ")" + " LIKE " + "'%" + string + "%'" + " OR " + "LOWER(" + paid + ")" + \
                    " LIKE " + "'%" + string + "%'" + " OR " + \
                    "LOWER(" + balance + ")" + " LIKE " + "'%" + string + "%'" + " OR " + \
                           "LOWER(" + paymethod + ")" + \
                    " LIKE " + "'%" + string + "%'"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.SaleListTableWidget.clearContents()
                self.SaleListTableWidget.setSortingEnabled(False)
                self.SaleListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.SaleListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.SaleListTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 7):

                    for j in range(self.SaleListTableWidget.rowCount()):

                        item = self.SaleListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.SaleListTableWidget.setSortingEnabled(True)

        elif tablewidget == "NotificationsTableWidget":

            text = datatable.split(".")[0]
            date = datatable.split(".")[1]

            MyQuery = "SELECT " + text + ", " + date + " FROM Notifications"

            cursor.execute(MyQuery)

            result = cursor.fetchall()
            resultlist = []

            if result:

                for r in result:

                    text = r[0]
                    date = r[1]

                    resulttuple = (date + "|" + text,)
                    resultlist.append(resulttuple)

                self.NotificationsTableWidget.clearContents()
                self.NotificationsTableWidget.setSortingEnabled(False)
                self.NotificationsTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(resultlist):

                    self.NotificationsTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.NotificationsTableWidget.setItem(rownumber, columnnumber, QtWidgets.QTableWidgetItem(
                            str(data.split("|")[0] + ";\n\n" + data.split("|")[1])))

                for i in range(0, 1):

                    for j in range(self.NotificationsTableWidget.rowCount()):

                        item = self.NotificationsTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(
                                QtCore.Qt.AlignVCenter | QtCore.Qt.AlignLeft)

                self.NotificationsTableWidget.setSortingEnabled(True)

        elif tablewidget == "CustomerSaleListTableWidget":

            code = datatable.split(".")[0]

            cursor.execute(
                "SELECT SaleCode, SaleDate, SaleTotal, SalePaid, SaleBal, PayMethod FROM Sales WHERE CusCode = %s", (code,))

            result = cursor.fetchall()

            if result:

                self.CustomerSaleListTableWidget.clearContents()
                self.CustomerSaleListTableWidget.setSortingEnabled(False)
                self.CustomerSaleListTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(result):

                    self.CustomerSaleListTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.CustomerSaleListTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 7):

                    for j in range(self.CustomerSaleListTableWidget.rowCount()):

                        item = self.CustomerSaleListTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.CustomerSaleListTableWidget.setSortingEnabled(True)

        elif tablewidget == "ReportsComboBox":

            data = datatable.split(".")[0]
            table = datatable.split(".")[1]

            MyQuery = "SELECT DISTINCT " + data + " FROM " + \
                table + " WHERE " + data + " IS NOT NULL"

            cursor.execute(MyQuery)

            result = cursor.fetchall()

            if result:

                self.SelectItemsComboBox.clear()
                self.SelectItemsComboBox.addItem("")

                for r in result:

                    self.SelectItemsComboBox.addItem(r[0])

                self.SelectItemsComboBox.setCurrentIndex(0)

                return result

        conn.close()

    # Request reports.
    def RequestReport(self):

        WhatReport = self.sender()

        self.ReportWebViewBrowser.setHtml("")
        self.ReportWebViewBrowser.history().clear()
        self.ReportNameLabel.setText("")

        query = ""

        global ReportDataList
        ReportDataList = []

        if WhatReport.objectName() == "ReportsInventorySummaryFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "CATEGORY",
                       "QTY ON ORDER", "QTY AVAILABLE", "TOTAL COST VALUE")
            name = "Inventory Summary Report"

            if self.ReportsInventorySummaryFilterByProductsComboBox.currentText() != "":

                query = "SELECT Products.ProCode, Products.ProName, Products.ProCategory, CAST(SUM(CAST(PurchaseProduct.NotReceived AS DECIMAL)) AS DECIMAL) AS Total, Products.ProQuantity, CAST((SUM(CAST(PurchaseProduct.NotReceived AS DECIMAL)) + CAST(Products.ProQuantity AS DECIMAL)) * CAST(Products.ProPrice AS DECIMAL) AS DECIMAL) AS Cost FROM Products LEFT OUTER JOIN PurchaseProduct ON Products.ProCode = PurchaseProduct.ProCode WHERE Products.ProCode = %s GROUP BY Products.ProCode, Products.ProName, Products.ProQuantity"
                data = self.ReportsInventorySummaryFilterByProductsComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.SingleReportData(query, data, columns, name)

        elif WhatReport.objectName() == "ReportsInventoryDetailsFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "CATEGORY",
                       "LOCATION", "QUANTITY", "TOTAL COST VALUE")
            name = "Inventory Details Report"

            if self.ReportsInventoryDetailsFilterByProductsComboBox.currentText() != "" and self.ReportsInventoryDetailsFilterByLocationComboBox.currentText() != "":

                query = "SELECT ProCode, ProName, ProCategory, ProLocation, ProQuantity, CAST(CAST(ProQuantity AS DECIMAL) * CAST(ProPrice AS DECIMAL) AS DECIMAL) AS Cost FROM Products WHERE ProCode = %s AND ProLocation = %s"
                data1 = self.ReportsInventoryDetailsFilterByProductsComboBox.currentText()
                data2 = self.ReportsInventoryDetailsFilterByLocationComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsInventoryByLocationFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME",
                       "CATEGORY", "LOCATION", "QUANTITY")
            name = "Inventory By Location Report"

            if self.ReportsInventoryByLocationFilterByProductsComboBox.currentText() != "" and self.ReportsInventoryByLocationFilterByLocationComboBox.currentText() != "":

                query = "SELECT ProCode, ProName, ProCategory, ProLocation, ProQuantity FROM Products WHERE ProCode = %s AND ProLocation = %s"
                data1 = self.ReportsInventoryByLocationFilterByProductsComboBox.currentText()
                data2 = self.ReportsInventoryByLocationFilterByLocationComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsProductPriceListFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "PRICE", "MEASUREMENT")
            name = "Product Price List Report"

            if self.ReportsProductPriceListFilterByProductsComboBox.currentText() != "":

                query = "SELECT ProCode, ProName, ProPrice, ProMeasurement FROM Products WHERE ProCode = %s"
                data = self.ReportsProductPriceListFilterByProductsComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.SingleReportData(query, data, columns, name)

        elif WhatReport.objectName() == "ReportsProductOrderedByCustomerFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "SALES ORDER", "CUSTOMER CODE", "CUSTOMER NAME",
                       "DATE", "PAYMENT", "PAY STATUS", "QTY. SOLD", "SALES AMOUNT")
            name = "Ordered By Customer Report"

            if self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentText() != "" and self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentText() != "":

                fromdate = self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.date()
                todate = self.ReportsProductOrderedByCustomerFilterByDateToComboBox.date()

                query = "SELECT SaleProduct.ProCode, Sales.SaleCode, Sales.CusCode, Customers.CusName, TO_CHAR(Sales.SaleDate :: DATE, 'dd-Mon-yy'), Sales.PayMethod, Sales.PayStatus, SaleProduct.ProQnty, CAST(SaleProduct.SaleTotal AS DECIMAL)  FROM Sales JOIN Customers ON Sales.CusCode = Customers.CusCode LEFT OUTER JOIN SaleProduct ON Sales.SaleCode = SaleProduct.SaleCode WHERE SaleProduct.ProCode = %s AND Sales.PayStatus = %s AND Sales.SaleDate >= " + "\'" + str(
                    fromdate.toPyDate()) + "\'" + " AND Sales.SaleDate <= " + "\'" + str(todate.toPyDate()) + "\'"
                data1 = self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentText()
                data2 = self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsVendorPaymentDetailsFilterGeneratePushButton":

            columns = ("VENDOR CODE", "VENDOR NAME", "DUE DATE",
                       "PURCHASE ORDER", "PAYMENT", "TOTAL", "PAID", "BALANCE")
            name = "Vendor Payment Details Report"

            if self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentText() != "" and self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentText() != "":

                fromdate = self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.date()
                todate = self.ReportsVendorPaymentDetailsFilterByDateToComboBox.date()

                query = "SELECT Purchases.VenCode, Vendors.VenName, TO_CHAR(Purchases.PurDueDate :: DATE, 'dd-Mon-yy'), Purchases.PurCode, Vendors.VenPayMethod, Purchases.PurTotal, Purchases.PurPaid, Purchases.PurBalance FROM Purchases INNER JOIN Vendors ON Purchases.VenCode = Vendors.VenCode WHERE Purchases.VenCode = %s AND Vendors.VenPayMethod = %s AND Purchases.PurDueDate >= " + "\'" + str(
                    fromdate.toPyDate()) + "\'" + " AND Purchases.PurDueDate <= " + "\'" + str(todate.toPyDate()) + "\'"
                data1 = self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentText()
                data2 = self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsVendorProductListFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "CATEGORY",
                       "VENDOR CODE", "VENDOR NAME", "VENDOR'S PRICE")
            name = "Vendor Product List Report"

            if self.ReportsVendorProductListFilterByVendorComboBox.currentText() != "" and self.ReportsVendorProductListFilterByProductsComboBox.currentText() != "":

                query = "SELECT Products.ProCode, Products.ProName, Products.ProCategory, Vendors.VenCode, Vendors.VenName, VendorProduct.VenPrice FROM Products INNER JOIN VendorProduct ON VendorProduct.ProCode = Products.ProCode INNER JOIN Vendors ON Vendors.VenCode = VendorProduct.VenCode WHERE Vendors.VenCode = %s AND Products.ProCode = %s"
                data1 = self.ReportsVendorProductListFilterByVendorComboBox.currentText()
                data2 = self.ReportsVendorProductListFilterByProductsComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsVendorListFilterGeneratePushButton":

            columns = ("VENDOR CODE", "VENDOR NAME", "EMAIL", "PHONE",
                       "PAY TERM", "DISCOUNT", "TAXING", "CURRENCY")
            name = "Vendor List Report"

            if self.ReportsVendorListFilterByVendorComboBox.currentText() != "":

                query = "SELECT VenCode, VenName, VenEmail, VenPhone, VenPayTerm, VenDiscount, VenTaxing, VenCurrency FROM Vendors WHERE VenCode = %s"
                data = self.ReportsVendorListFilterByVendorComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.SingleReportData(query, data, columns, name)

        elif WhatReport.objectName() == "ReportsCustomerListFilterGeneratePushButton":

            columns = ("CUSTOMER CODE", "CUSTOMER NAME", "EMAIL",
                       "PHONE", "PAY TERM", "DISCOUNT", "TAXING", "CURRENCY")
            name = "Customer List Report"

            if self.ReportsCustomerListFilterByCustomerComboBox.currentText() != "":

                query = "SELECT CusCode, CusName, CusEmail, CusPhone, CusPayTerm, CusDiscount, CusTaxing, CusCurrency FROM Customers WHERE CusCode = %s"
                data = self.ReportsCustomerListFilterByCustomerComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.SingleReportData(query, data, columns, name)

        elif WhatReport.objectName() == "ReportsSalesOrderSummaryFilterGeneratePushButton":

            columns = ("SALES ORDER", "CUSTOMER CODE", "CUSTOMER NAME",
                       "PAY STATUS", "DATE", "SUB TOTAL", "DISCOUNT", "TAX", "TOTAL")
            name = "Sales Order Summary Report"

            if self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentText() != "" and self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentText() != "":

                fromdate = self.ReportsSalesOrderSummaryFilterByDateFromComboBox.date()
                todate = self.ReportsSalesOrderSummaryFilterByDateToComboBox.date()

                query = "SELECT Sales.SaleCode, Sales.CusCode, Customers.CusName, Sales.PayStatus, TO_CHAR(Sales.SaleDate :: DATE, 'dd-Mon-yy'), Sales.SaleSubTotal, Sales.SaleDiscount, Sales.SaleTax, Sales.SaleTotal FROM Sales INNER JOIN Customers ON Customers.CusCode = Sales.CusCode WHERE Sales.CusCode = %s AND Sales.PayStatus = %s AND Sales.SaleDate >= " + "\'" + str(
                    fromdate.toPyDate()) + "\'" + " AND Sales.SaleDate <= " + "\'" + str(todate.toPyDate()) + "\'"
                data1 = self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentText()
                data2 = self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsSalesOrderProfitFilterGeneratePushButton":

            columns = ("SALES ORDER", "PAY STATUS", "CUSTOMER CODE",
                       "CUSTOMER NAME", "DATE", "TOTAL", "GROSS PROFIT")
            name = "Sales Order Profit Report"

            if self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentText() != "" and self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentText() != "":

                fromdate = self.ReportsSalesOrderProfitFilterByDateFromComboBox.date()
                todate = self.ReportsSalesOrderProfitFilterByDateToComboBox.date()

                query = "SELECT Sales.SaleCode, Sales.PayStatus, Sales.CusCode, Customers.CusName, TO_CHAR(Sales.SaleDate :: DATE, 'dd-Mon-yy'), Sales.SaleTotal, Sales.SaleProfit FROM Sales INNER JOIN Customers ON Customers.CusCode = Sales.CusCode WHERE Sales.CusCode = %s AND Sales.PayStatus = %s AND Sales.SaleDate >= " + "\'" + str(
                    fromdate.toPyDate()) + "\'" + " AND Sales.SaleDate <= " + "\'" + str(todate.toPyDate()) + "\'"
                data1 = self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentText()
                data2 = self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsCustomerPaymentSummaryFilterGeneratePushButton":

            columns = ("CUSTOMER CODE", "CUSTOMER NAME", "PHONE",
                       "DATE", "SALES TOTAL", "PAID TOTAL", "BALANCE")
            name = "Customer Payment Summary Report"

            if self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentText() != "" and self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentText() != "":

                fromdate = self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.date()
                todate = self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.date()

                query = "SELECT Sales.CusCode, Customers.CusName, Customers.CusPhone, Sales.SaleDate, Sales.SaleTotal, Sales.SalePaid, Sales.SaleBal FROM Sales INNER JOIN Customers ON Customers.CusCode = Sales.CusCode WHERE Sales.CusCode = %s AND Sales.PayStatus = %s AND Sales.SaleDate >= " + \
                    "\'" + str(fromdate.toPyDate()) + "\'" + \
                    " AND Sales.SaleDate <= " + "\'" + \
                        str(todate.toPyDate()) + "\'"
                data1 = self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentText()
                data2 = self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsCustomerPaymentDetailsFilterGeneratePushButton":

            columns = ("CUSTOMER CODE", "CUSTOMER NAME", "DATE",
                       "SALES ORDER", "PAYMENT", "PAID TOTAL")
            name = "Customer Payment Details Report"

            if self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentText() != "" and self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentText() != "":

                fromdate = self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.date()
                todate = self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.date()

                query = "SELECT Sales.CusCode, Customers.CusName, Sales.SaleDate, Sales.SaleCode, Sales.PayMethod, Sales.SalePaid FROM Sales INNER JOIN Customers ON Customers.CusCode = Sales.CusCode WHERE Sales.CusCode = %s AND Sales.PayMethod = %s AND Sales.SaleDate >= " + \
                    "\'" + str(fromdate.toPyDate()) + "\'" + \
                    " AND Sales.SaleDate <= " + "\'" + \
                        str(todate.toPyDate()) + "\'"
                data1 = self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentText()
                data2 = self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsPurchaseOrderSummaryFilterGeneratePushButton":

            columns = ("PURCHASE ORDER", "STATUS", "VENDOR CODE", "VENDOR NAME", "DATE",
                       "REQ. SHIP DATE", "DUE DATE", "ORDER TOTAL", "PAID TOTAL", "BALANCE")
            name = "Purchase Order Summary Report"

            if self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentText() != "" and self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentText() != "":

                fromdate = self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.date()
                todate = self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.date()

                query = "SELECT Purchases.PurCode, Purchases.PurStatus, Purchases.VenCode, Vendors.VenName, Purchases.PurDate, Purchases.PurShipDate, Purchases.PurDueDate, Purchases.PurTotal, Purchases.PurPaid, Purchases.PurBalance FROM Purchases INNER JOIN Vendors ON Vendors.VenCode = Purchases.VenCode WHERE Purchases.VenCode = %s AND Purchases.PurStatus = %s AND Purchases.PurDate >= " + \
                    "\'" + str(fromdate.toPyDate()) + "\'" + \
                    " AND Purchases.PurDate <= " + "\'" + \
                        str(todate.toPyDate()) + "\'"
                data1 = self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentText()
                data2 = self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsPurchaseOrderDetailsFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "PURCHASE ORDER",
                       "DATE", "VENDOR CODE", "VENDOR NAME", "QUANTITY", "TOTAL")
            name = "Purchase Order Details Report"

            if self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentText() != "" and self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentText() != "":

                fromdate = self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.date()
                todate = self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.date()

                query = "SELECT PurchaseProduct.ProCode, Products.ProName, PurchaseProduct.PurCode, Purchases.PurDate, Purchases.VenCode, Vendors.VenName, PurchaseProduct.ProQnty, PurchaseProduct.PurSubTotal FROM PurchaseProduct INNER JOIN Products ON Products.ProCode = PurchaseProduct.ProCode INNER JOIN Purchases ON Purchases.PurCode = PurchaseProduct.PurCode INNER JOIN Vendors ON Vendors.VenCode = Purchases.VenCode WHERE PurchaseProduct.ProCode = %s AND Vendors.VenCode = %s AND Purchases.PurStatus <> 'Canceled' AND Purchases.PurDate >= " + \
                    "\'" + str(fromdate.toPyDate()) + "\'" + \
                    " AND Purchases.PurDate <= " + "\'" + \
                        str(todate.toPyDate()) + "\'"
                data1 = self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentText()
                data2 = self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

        elif WhatReport.objectName() == "ReportsPurchaseOrderStatusFilterGeneratePushButton":

            columns = ("PRODUCT CODE", "PRODUCT NAME", "DATE", "PURCHASE ORDER", "VENDOR CODE",
                       "VENDOR NAME", "EXPECTED QTY.", "RECEIVED QTY.", "REMAINING QTY.")
            name = "Purchase Order Status Report"

            if self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentText() != "" and self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentText() != "":

                query = "SELECT PurchaseProduct.ProCode, Products.ProName, Purchases.PurDate, Purchases.PurCode, Vendors.VenCode, Vendors.VenName, PurchaseProduct.ProQnty, CAST(CAST(PurchaseProduct.ProQnty AS DECIMAL) - CAST(PurchaseProduct.NotReceived AS DECIMAL) AS DECIMAL) As Received, PurchaseProduct.NotReceived FROM PurchaseProduct INNER JOIN PRODUCTS ON Products.ProCode = PurchaseProduct.ProCode INNER JOIN Purchases ON Purchases.PurCode = PurchaseProduct.PurCode INNER JOIN Vendors ON Vendors.VenCode = Purchases.VenCode WHERE PurchaseProduct.ProCode = %s AND Vendors.VenCode = %s AND Purchases.PurStatus <> 'Canceled'"
                data1 = self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentText()
                data2 = self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentText()

            else:

                self.MessageBox("Please select items.", "OkType", "AlertStyle")
                self.ReportWebViewFrame.lower()

            if query != "":

                self.DoubleReportData(query, data1, data2, columns, name)

    # Process report data.
    def SingleReportData(self, query, data, columns, name):

        for d in data.split(","):

            datum = (d,)

            conn = Database.ConnectDatabase()

            cursor = conn.cursor()

            cursor.execute(query, datum)

            results = cursor.fetchall()

            if results:

                for r in results:

                    ReportDataList.append(r)

            conn.close()

        self.GenerateReport(ReportDataList, columns, name)
        self.ReportWebViewFrame.raise_()

    # Process report data.
    def DoubleReportData(self, query, data1, data2, columns, name):

        for d2 in data2.split(","):

            for d1 in data1.split(","):

                datum = (d1, d2)

                conn = Database.ConnectDatabase()

                cursor = conn.cursor()

                cursor.execute(query, datum)

                results = cursor.fetchall()

                if results:

                    for r in results:

                        ReportDataList.append(r)

                conn.close()

        self.GenerateReport(ReportDataList, columns, name)
        self.ReportWebViewFrame.raise_()

    # Generate reports.
    def GenerateReport(self, results, columns, name):

        x = 0
        data = ""
        datalist = []
        results[0:0] = [columns]

        for result in results:

            for r in result:

                if x == 0:

                    data += str(r)

                else:

                    data += "<~>" + str(r)

                x = 1

            datalist.append(data)
            data = ""
            x = 0

        datum = "<!DOCTYPE html>\n<html>\n<head>\n<style>\n"
        datum += "#design {\n"
        datum += "  font-family: Raleway;\n"
        datum += "  font-size: 10pt;\n"
        datum += "  text-align: center;\n"
        datum += "  border-collapse: collapse;\n"
        datum += "  border: 1px solid rgb(135,206,250);"
        datum += "  width: 100%;\n}\n\n"
        datum += "#design td, #design th {\n"
        datum += "  color: rgb(0,0,0);\n"
        datum += "  border: 0px solid #ddd;\n"
        datum += "  padding: 8px;\n}\n\n"
        datum += "#design tr:nth-child(even) {\n  background-color: rgb(245,245,245);\n}\n\n"
        datum += "#design tr:hover {\n  background-color: rgb(126,255,245);\n}\n\n"
        datum += "#design th {\n"
        datum += "  padding-top: 12px;\n"
        datum += "  padding-bottom: 12px;\n"
        datum += "  background-color: rgb(135,206,250);\n"
        datum += "  color: rgb(255,255,255);\n}\n"
        datum += "</style>\n</head>\n<body>\n<table id=\"design\">\n"
        header = datalist[0].split("<~>")
        datum += "  <tr>\n"

        for column in columns:

            datum += "    <th>{0}</th>\n".format(column.strip())

        datum += "  </tr>\n"

        for line in datalist[1:]:

            row = line.split("<~>")
            datum += "  <tr>\n"

            for column in row:

                datum += "    <td>{0}</td>\n".format(column.strip())

            datum += "  </tr>\n"

        datum += "</table>\n</body>\n</html>"

        self.ReportWebViewBrowser.setHtml(datum)
        self.ReportNameLabel.setText(name)

        f = open("Temp.html", "w", encoding="utf-8")
        f.write(datum)
        f.close()

    # Print report to PDF.
    def PrintReportToPDF(self):

        datum = ""

        try:

            f = open("Temp.html", "r", encoding="utf-8")

            for line in f.readlines():

                if "<body>" in line:

                    line += "<h5 style=\"text-align: center;font-family: Raleway;\">" + \
                        self.ReportNameLabel.text() + "</h5>\n"

                datum += line

            f.close()

            self.loader = QWebView()
            self.loader.setHtml(datum)

            self.DirectoryName = QFileDialog.getExistingDirectory(
                self, 'Select Directory')
            self.ReportDirectory = ""

            if self.DirectoryName:

                self.ReportDirectory = self.DirectoryName + \
                    "/" + self.ReportNameLabel.text() + ".pdf"
                self.loader.page().printToPdf(self.ReportDirectory)

                self.MessageBox("File saved successfully.",
                                "OkType", "InfoStyle")

        except Exception as e:

            self.MessageBox("Error converting to PDF file.",
                            "OkType", "AlertStyle")

    # Print report to Excel.
    def PrintReportToExcel(self):

        datum = ""

        try:

            f = open("Temp.html", "r", encoding="utf-8")

            for line in f.readlines():

                if "<body>" in line:

                    line += "<h5 style=\"text-align: center;font-family: Raleway;\">" + \
                        self.ReportNameLabel.text() + "</h5>\n"

                datum += line

            f.close()

            self.DirectoryName = QFileDialog.getExistingDirectory(
                self, 'Select Directory')
            self.ReportDirectory = ""

            if self.DirectoryName:

                self.ReportDirectory = self.DirectoryName + \
                    "/" + self.ReportNameLabel.text() + ".xlsx"

                table = pd.read_html(datum)[0]
                table.to_excel(self.ReportDirectory)

                self.MessageBox("File saved successfully.",
                                "OkType", "InfoStyle")

        except Exception as e:

            self.MessageBox("Error converting to Excel file.",
                            "OkType", "AlertStyle")

    # Save selected custom items.
    def AddCustomSelectedItems(self):

        WhatButton = self.sender()

        self.DialogBoxCoverFrame.hide()
        self.DialogBoxCoverFrame.lower()
        self.SelectItemsFrame.hide()
        self.SelectItemsFrame.lower()

        global SelectedComboBox
        SelectedItems = ""

        if WhatButton.objectName() == "SelectItemsSavePushButton":

            if self.SelectItemsTableWidget.rowCount() > 0:

                for row in range(self.SelectItemsTableWidget.rowCount()):

                    SelectedItems += self.SelectItemsTableWidget.item(
                        row, 0).text() + ","

            else:

                SelectedItems = ""

            if SelectedComboBox == "ReportsInventorySummaryFilterByProductsComboBox":

                self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsInventorySummaryFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryDetailsFilterByProductsComboBox":

                self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsInventoryDetailsFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryDetailsFilterByLocationComboBox":

                self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
                    SelectedItems)
                self.ReportsInventoryDetailsFilterByLocationComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryByLocationFilterByProductsComboBox":

                self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsInventoryByLocationFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryByLocationFilterByLocationComboBox":

                self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
                    SelectedItems)
                self.ReportsInventoryByLocationFilterByLocationComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductPriceListFilterByProductsComboBox":

                self.ReportsProductPriceListFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsProductPriceListFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductOrderedByCustomerFilterByProductsComboBox":

                self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductOrderedByCustomerFilterByPayStatusComboBox":

                self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
                    SelectedItems)
                self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorPaymentDetailsFilterByVendorComboBox":

                self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
                    SelectedItems)
                self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorPaymentDetailsFilterByPayMethodComboBox":

                self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
                    SelectedItems)
                self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorProductListFilterByVendorComboBox":

                self.ReportsVendorProductListFilterByVendorComboBox.addItem(
                    SelectedItems)
                self.ReportsVendorProductListFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorProductListFilterByProductsComboBox":

                self.ReportsVendorProductListFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsVendorProductListFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorListFilterByVendorComboBox":

                self.ReportsVendorListFilterByVendorComboBox.addItem(
                    SelectedItems)
                self.ReportsVendorListFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerListFilterByCustomerComboBox":

                self.ReportsCustomerListFilterByCustomerComboBox.addItem(
                    SelectedItems)
                self.ReportsCustomerListFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderSummaryFilterByCustomerComboBox":

                self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
                    SelectedItems)
                self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderSummaryFilterByPayStatusComboBox":

                self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
                    SelectedItems)
                self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderProfitFilterByCustomerComboBox":

                self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
                    SelectedItems)
                self.ReportsSalesOrderProfitFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderProfitFilterByPayStatusComboBox":

                self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
                    SelectedItems)
                self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentSummaryFilterByCustomerComboBox":

                self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
                    SelectedItems)
                self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox":

                self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
                    SelectedItems)
                self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentDetailsFilterByCustomerComboBox":

                self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
                    SelectedItems)
                self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox":

                self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
                    SelectedItems)
                self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderSummaryFilterByVendorComboBox":

                self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderSummaryFilterByStatusComboBox":

                self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderDetailsFilterByProductsComboBox":

                self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox":

                self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderStatusFilterByProductsComboBox":

                self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderStatusFilterByVendorComboBox":

                self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
                    SelectedItems)
                self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

        elif WhatButton.objectName() == "SelectItemsCancelPushButton":

            if SelectedComboBox == "ReportsInventorySummaryFilterByProductsComboBox":

                self.ReportsInventorySummaryFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryDetailsFilterByProductsComboBox":

                self.ReportsInventoryDetailsFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryDetailsFilterByLocationComboBox":

                self.ReportsInventoryDetailsFilterByLocationComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryByLocationFilterByProductsComboBox":

                self.ReportsInventoryByLocationFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsInventoryByLocationFilterByLocationComboBox":

                self.ReportsInventoryByLocationFilterByLocationComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductPriceListFilterByProductsComboBox":

                self.ReportsProductPriceListFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductOrderedByCustomerFilterByProductsComboBox":

                self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsProductOrderedByCustomerFilterByPayStatusComboBox":

                self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorPaymentDetailsFilterByVendorComboBox":

                self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorPaymentDetailsFilterByPayMethodComboBox":

                self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorProductListFilterByVendorComboBox":

                self.ReportsVendorProductListFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorProductListFilterByProductsComboBox":

                self.ReportsVendorProductListFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsVendorListFilterByVendorComboBox":

                self.ReportsVendorListFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerListFilterByCustomerComboBox":

                self.ReportsCustomerListFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderSummaryFilterByCustomerComboBox":

                self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderSummaryFilterByPayStatusComboBox":

                self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderProfitFilterByCustomerComboBox":

                self.ReportsSalesOrderProfitFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsSalesOrderProfitFilterByPayStatusComboBox":

                self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentSummaryFilterByCustomerComboBox":

                self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox":

                self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentDetailsFilterByCustomerComboBox":

                self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox":

                self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderSummaryFilterByVendorComboBox":

                self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderSummaryFilterByStatusComboBox":

                self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderDetailsFilterByProductsComboBox":

                self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox":

                self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderStatusFilterByProductsComboBox":

                self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setCurrentText(
                    SelectedItems)

            elif SelectedComboBox == "ReportsPurchaseOrderStatusFilterByVendorComboBox":

                self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setCurrentText(
                    SelectedItems)

    # Auto fill login fields when remember me checked.
    def AutoFillLogin(self):

        self.LoginUsernameLineEditLoginUI.setText(
            Database.RememberMe().split(",")[0])
        self.LoginPasswordLineEditLoginUI.setText(
            Database.RememberMe().split(",")[1])

        if self.LoginUsernameLineEditLoginUI.text() != "" and self.LoginPasswordLineEditLoginUI.text() != "":

            self.LoginRemembermeCheckBoxLoginUI.setChecked(True)

        else:

            self.LoginRemembermeCheckBoxLoginUI.setChecked(False)

    # Disable adding new account in login page.
    def DisableRegisteringNewAccount(self):

        CheckIfDisableRegisteringNewAccount = Database.CheckRegisteringNewAccount()

        if CheckIfDisableRegisteringNewAccount == "Yes":

            self.RegisterPushButtonLoginUI.hide()
            self.DisableRegisteringNewAccountCheckBox.setChecked(True)

        elif CheckIfDisableRegisteringNewAccount == "No":

            self.RegisterPushButtonLoginUI.show()
            self.DisableRegisteringNewAccountCheckBox.setChecked(False)

    # Event when slecting item in user combobox.
    def UserComboboxSelectItem(self, i):

        ComboName = self.sender()

        global ControlRegister
        global Module
        global PreviousModule
        global ScreenSize

        if ComboName.objectName() == "UserComboBox":

            if i == 0:

                self.MyTimer.stop()
                self.FooterFrame.hide()
                self.HomeFrame.raise_()

            elif i == 1:

                Module = "LogIn"
                PreviousModule = Module

                self.Logout()
                self.AutoFillLogin()

            elif i == 2:

                self.MinMax()

            elif i == 3:

                self.showMinimized()

            elif i == 4:

                self.close()

        elif ComboName.objectName() == "HomeUserComboBox":

            if i == 0:

                self.DashboardFrame.raise_()
                self.FooterFrame.show()
                self.HomeFrame.lower()

                self.HighlightingFrameTitle.raise_()
                self.HighlightingFrameTitle.setStyleSheet(
                    "background-image: url(:/DashboardImg/Res/dash.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

                if ScreenSize == 980:

                    self.HighlightingFrameTitle.setGeometry(
                        QtCore.QRect(0, 0, 81, 73))

                else:

                    self.HighlightingFrameTitle.setGeometry(
                        QtCore.QRect(0, 0, 105, 73))

                ControlRegister = "DashboardLogoPushButton"
                Module = "DashboardLogoPushButton"
                PreviousModule = Module

                self.ChangeButtonColor(ControlRegister)

                self.LoadDashboardData("PurchaseOrderData")
                self.LoadDashboardData("ProductDetailsData")
                self.LoadDashboardData("QntyToReceived")
                self.LoadDashboardData("QntyInHand")
                self.ShowSalesOrderChartData()

                if ScreenSize == 980:

                    self.ShowActiveProductsChartLegends("hide")

                else:

                    self.ShowActiveProductsChartLegends("show")

            elif i == 1:

                Module = "LogIn"
                PreviousModule = Module

                self.Logout()
                self.AutoFillLogin()

            elif i == 2:

                self.MinMax()

            elif i == 3:

                self.showMinimized()

            elif i == 4:

                self.close()

    # Change button style.
    def ChangeButtonColor(self, BName):

        global ScreenSize
        global ControlRegister
        global Module
        global PreviousModule

        x = 1

        ButtonName = self.sender()

        if ButtonName.objectName() == "VendorLogoPushButton" or ButtonName.objectName() == "HomeVendorsPushButton" or BName == "VendorLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/VendorImg/Res/vendor.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 73, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 73, 105, 85))

            ControlRegister = "VendorLogoPushButton"
            Module = "VendorLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "PurchaseLogoPushButton" or ButtonName.objectName() == "HomePurchasesPushButton" or BName == "PurchaseLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/PurchaseImg/Res/purchase.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 136, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 158, 105, 85))

            ControlRegister = "PurchaseLogoPushButton"
            Module = "PurchaseLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "InventoryLogoPushButton" or ButtonName.objectName() == "HomeInventoryPushButton" or BName == "InventoryLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/InventoryImg/Res/inventory.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 199, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 243, 105, 85))

            ControlRegister = "InventoryLogoPushButton"
            Module = "InventoryLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "SaleLogoPushButton" or ButtonName.objectName() == "HomeSalesPushButton" or BName == "SaleLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/SaleImg/Res/sale.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 262, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 328, 105, 85))

            ControlRegister = "SaleLogoPushButton"
            Module = "SaleLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "CustomerLogoPushButton" or ButtonName.objectName() == "HomeCustomersPushButton" or BName == "CustomerLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/CustomerImg/Res/customer.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 325, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 413, 105, 85))

            ControlRegister = "CustomerLogoPushButton"
            Module = "CustomerLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "NotificationLogoPushButton" or ButtonName.objectName() == "HomeMessagesPushButton" or BName == "NotificationLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/NotificationImg/Res/notification.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 388, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 498, 105, 85))

            ControlRegister = "NotificationLogoPushButton"
            Module = "NotificationLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "SettingLogoPushButton" or ButtonName.objectName() == "HomeSettingsPushButton" or BName == "SettingLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/SettingImg/Res/setting.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 451, 81, 63))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 583, 105, 85))

            ControlRegister = "SettingLogoPushButton"
            Module = "SettingLogoPushButton"
            PreviousModule = Module
            x = 0

        elif ButtonName.objectName() == "ReportsLogoPushButton" or ButtonName.objectName() == "HomeReportsPushButton" or BName == "ReportsLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/ReportsImg/Res/report.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 514, 81, 66))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 668, 105, 85))

            ControlRegister = "ReportsLogoPushButton"
            Module = "ReportsLogoPushButton"
            PreviousModule = Module
            x = 1

        elif ButtonName.objectName() == "DashboardLogoPushButton" or BName == "DashboardLogoPushButton":

            self.HighlightingFrameTitle.raise_()
            self.HighlightingFrameTitle.setStyleSheet(
                "background-image: url(:/DashboardImg/Res/dash.png);background-color: rgb(142,68,173);border: none;background-repeat:no-repeat;background-position:center center;")

            if ScreenSize == 980:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 0, 81, 73))

            else:

                self.HighlightingFrameTitle.setGeometry(
                    QtCore.QRect(0, 0, 105, 73))

            ControlRegister = "DashboardLogoPushButton"
            Module = "DashboardLogoPushButton"
            PreviousModule = Module
            x = 1

            self.LoadDashboardData("PurchaseOrderData")
            self.LoadDashboardData("ProductDetailsData")
            self.LoadDashboardData("QntyToReceived")
            self.LoadDashboardData("QntyInHand")
            self.ShowSalesOrderChartData()

            if ScreenSize == 980:

                self.ShowActiveProductsChartLegends("hide")

            else:

                self.ShowActiveProductsChartLegends("show")

        if self.HomeUserNameLabel.text().split(":")[0] != "Administrator" and x == 0:

            Module = "AdminLogin"
            PreviousModule = Module

            self.AdminLoginAccountSettingsFrame.show()
            self.AdminLoginAccountSettingsFrame.raise_()
            self.AdminLoginUsernameLineEditLoginUI.setText("")
            self.AdminLoginPasswordLineEditLoginUI.setText("")
            self.AdminLoginErrorLabel.setText("")
            self.SettingsTabWidget.setCurrentIndex(1)
            self.SettingsPreferencesAToolBox.setCurrentIndex(0)
            self.SettingsPreferencesBToolBox.setCurrentIndex(0)
            self.DisableRegisteringNewAccount()

        self.MyTimer.start(1000)

    # Check events by ticking timer.
    def TimeEventChecker(self):

        if CheckLoadDialogBox == "No":

            self.DialogBoxCoverFrame.hide()
            self.DialogCoverTimer.stop()

    # Load dialog box.
    def MessageBox(self, dialogmessage, dialogtype, dialogstyle):

        global CheckLoadDialogBox
        CheckLoadDialogBox = "Yes"

        self.DialogBoxCoverFrame.show()
        self.DialogBoxCoverFrame.raise_()

        MessageBox = MyDialogBox(self)
        MessageBox.show()

        MyDialogBox.MessageType(
            MessageBox, dialogmessage, dialogtype, dialogstyle)

        self.DialogCoverTimer.timeout.connect(self.TimeEventChecker)
        self.DialogCoverTimer.start(1)

    # Events triggered when button clicked.
    def ButtonEvents(self, requester):

        WhatButton = self.sender()

        if WhatButton == None:

            WhatButton = requester

        else:

            WhatButton = WhatButton.objectName()

        if WhatButton == "LoginForgotPasswordPushButtonLoginUI":

            self.MessageBox(
                "Please contact System Administrator.", "OkType", "InfoStyle")

        elif WhatButton == "HomeVendorsPushButton" or WhatButton == "HomePurchasesPushButton" or WhatButton == "HomeInventoryPushButton" or WhatButton == "HomeSalesPushButton" or WhatButton == "HomeCustomersPushButton" or WhatButton == "HomeMessagesPushButton" or WhatButton == "HomeSettingsPushButton" or WhatButton == "HomeReportsPushButton":

            self.FooterFrame.show()

        elif WhatButton == "AddSaleProductAddToCart":

            if self.AddSaleProductCurrencyComboBox.currentText() == "---" or self.AddSaleProductPayMethodComboBox.currentText() == "---":

                self.MessageBox("Please select a Customer.",
                                "OkType", "AlertStyle")

            else:

                if self.AddSaleProductNameLineEdit.text() == "---":

                    self.MessageBox(
                        "Please select a Product to add.", "OkType", "AlertStyle")

                else:

                    if self.AddSaleProductQuantityLineEdit.text() == "" or float(self.AddSaleProductQuantityLineEdit.text()) < 1.0:

                        self.MessageBox(
                            "Quantity must not be zero.", "OkType", "AlertStyle")

                    elif self.AddSaleProductQuantityLineEdit.text() == "" or float(self.AddSaleProductQuantityLineEdit.text()) > 1000.0:

                        self.MessageBox("Maximum quantity reach.",
                                        "OkType", "AlertStyle")

                    else:

                        subtotal = 0.0
                        discount = 0.0
                        tax = 0.0
                        total = 0.0

                        conn = Database.ConnectDatabase()

                        cursor = conn.cursor()

                        numRow = self.AddSaleProductTableWidget.rowCount()
                        self.AddSaleProductTableWidget.insertRow(numRow)

                        for row in range(0, self.AddSaleProductTableWidget.rowCount()):

                            if self.AddSaleProductTableWidget.item(row, 0) != None:

                                if self.AddSaleProductTableWidget.item(row, 0).text() == self.AddSaleProductCodeComboBox.currentText() + " - " + self.AddSaleProductNameLineEdit.text():

                                    self.AddSaleProductTableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(str(float(
                                        self.AddSaleProductTableWidget.item(row, 1).text()) + float(self.AddSaleProductQuantityLineEdit.text()))))

                                    cursor.execute("SELECT ProQuantity FROM Products WHERE ProCode = %s", (
                                        self.AddSaleProductTableWidget.item(row, 0).text().split(" - ")[0],))

                                    result = cursor.fetchone()

                                    if result:

                                        if float(result[0]) < float(self.AddSaleProductTableWidget.item(row, 1).text()):

                                            self.AddSaleProductTableWidget.setItem(
                                                row, 1, QtWidgets.QTableWidgetItem(str(result[0])))
                                            self.MessageBox(
                                                "Product stock is less than the order quantity.", "OkType", "AlertStyle")

                                    self.AddSaleProductTableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(float(
                                        self.AddSaleProductTableWidget.item(row, 1).text()) * float(self.AddSaleProductPriceLineEdit.text()))))

                                    self.AddSaleProductTableWidget.removeRow(
                                        numRow)
                                    break

                            else:

                                self.AddSaleProductTableWidget.setItem(row, 0, QtWidgets.QTableWidgetItem(str(
                                    self.AddSaleProductCodeComboBox.currentText() + " - " + self.AddSaleProductNameLineEdit.text())))
                                self.AddSaleProductTableWidget.setItem(row, 1, QtWidgets.QTableWidgetItem(
                                    str(self.AddSaleProductQuantityLineEdit.text())))

                                cursor.execute("SELECT ProQuantity FROM Products WHERE ProCode = %s", (
                                    self.AddSaleProductTableWidget.item(row, 0).text().split(" - ")[0],))

                                result = cursor.fetchone()

                                if result:

                                    if float(result[0]) < float(self.AddSaleProductTableWidget.item(row, 1).text()):

                                        self.AddSaleProductTableWidget.setItem(
                                            row, 1, QtWidgets.QTableWidgetItem(str(result[0])))
                                        self.MessageBox(
                                            "Product stock is less than the order quantity.", "OkType", "AlertStyle")

                                self.AddSaleProductTableWidget.setItem(row, 2, QtWidgets.QTableWidgetItem(str(float(
                                    self.AddSaleProductTableWidget.item(row, 1).text()) * float(self.AddSaleProductPriceLineEdit.text()))))

                        for i in range(0, 3):

                            for j in range(self.AddSaleProductTableWidget.rowCount()):

                                item = self.AddSaleProductTableWidget.item(
                                    j, i)

                                if item != None:

                                    if i == 1:

                                        item.setTextAlignment(
                                            QtCore.Qt.AlignVCenter | QtCore.Qt.AlignCenter)

                                    else:

                                        item.setTextAlignment(
                                            QtCore.Qt.AlignVCenter | QtCore.Qt.AlignLeft)

                        for row in range(0, self.AddSaleProductTableWidget.rowCount()):

                            if self.AddSaleProductTableWidget.item(row, 2) != None:

                                subtotal += float(
                                    self.AddSaleProductTableWidget.item(row, 2).text())

                        discount = float(self.AddSaleDiscountLineEdit.text().split(" %")[
                                         0]) / 100 * subtotal
                        tax = float(self.AddSaleTaxLineEdit.text().split(
                            " %")[0]) / 100 * subtotal

                        total = subtotal + tax - discount

                        self.AddSaleSubTotalLineEdit.setText(str(subtotal))
                        self.AddSaleTotalLineEdit.setText(str(total))
                        self.AddSaleCalcPaidLineEdit.setText(str(total))

                        self.AddSalePaidLineEdit.setText(
                            self.AddSaleCalcPaidLineEdit.text())

                        self.AddSaleBalanceLineEdit.setText(str(float(
                            self.AddSaleTotalLineEdit.text()) - float(self.AddSalePaidLineEdit.text())))
                        if float(self.AddSaleBalanceLineEdit.text()) < 0:
                            self.AddSaleBalanceLineEdit.setText("0.0")

                        self.AddSaleChangeLineEdit.setText(str(float(
                            self.AddSalePaidLineEdit.text()) - float(self.AddSaleTotalLineEdit.text())))
                        if float(self.AddSaleChangeLineEdit.text()) < 0:
                            self.AddSaleChangeLineEdit.setText("0.0")

                        conn.close()

    # Events when save button clicked.
    def SaveButton(self, requester):

        global Module
        Module = "Nothing"

        WhatSave = self.sender()

        if WhatSave == None:

            WhatSave = requester

        else:

            WhatSave = WhatSave.objectName()

        if WhatSave == "SettingsReferenceSavePushButton":

            AllRows = max(self.SettingsCarrierTableWidget.rowCount(), self.SettingsPayMethodTableWidget.rowCount(), self.SettingsLocationTableWidget.rowCount(), self.SettingsPayTermTableWidget.rowCount(
            ), self.SettingsDiscountTableWidget.rowCount(), self.SettingsCategoryTableWidget.rowCount(), self.SettingsMeasurementTableWidget.rowCount(), self.SettingsTaxingTableWidget.rowCount())

            row = 0

            while (row < self.SettingsCarrierTableWidget.rowCount()):

                Carrier = self.SettingsCarrierTableWidget.cellWidget(row, 0)

                if Carrier:

                    if Carrier.text() != "":

                        row += 1

                    else:

                        self.SettingsCarrierTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsCarrierTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsPayMethodTableWidget.rowCount()):

                PayMethod = self.SettingsPayMethodTableWidget.cellWidget(
                    row, 0)

                if PayMethod:

                    if PayMethod.text() != "":

                        row += 1

                    else:

                        self.SettingsPayMethodTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsPayMethodTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsLocationTableWidget.rowCount()):

                Location = self.SettingsLocationTableWidget.cellWidget(row, 0)

                if Location:

                    if Location.text() != "":

                        row += 1

                    else:

                        self.SettingsLocationTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsLocationTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsPayTermTableWidget.rowCount()):

                PayTerm = self.SettingsPayTermTableWidget.cellWidget(row, 0)

                if PayTerm:

                    if PayTerm.text() != "":

                        row += 1

                    else:

                        self.SettingsPayTermTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsPayTermTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsDiscountTableWidget.rowCount()):

                Discount = self.SettingsDiscountTableWidget.cellWidget(row, 0)

                if Discount:

                    if Discount.text() != "":

                        row += 1

                    else:

                        self.SettingsDiscountTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsDiscountTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsCategoryTableWidget.rowCount()):

                Category = self.SettingsCategoryTableWidget.cellWidget(row, 0)

                if Category:

                    if Category.text() != "":

                        row += 1

                    else:

                        self.SettingsCategoryTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsCategoryTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsMeasurementTableWidget.rowCount()):

                Measurement = self.SettingsMeasurementTableWidget.cellWidget(
                    row, 0)

                if Measurement:

                    if Measurement.text() != "":

                        row += 1

                    else:

                        self.SettingsMeasurementTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsMeasurementTableWidget.removeRow(row)
                    row = 0

            row = 0

            while (row < self.SettingsTaxingTableWidget.rowCount()):

                Taxing = self.SettingsTaxingTableWidget.cellWidget(row, 0)

                if Taxing:

                    if Taxing.text() != "":

                        row += 1

                    else:

                        self.SettingsTaxingTableWidget.removeRow(row)
                        row = 0

                else:

                    self.SettingsTaxingTableWidget.removeRow(row)
                    row = 0

            if AllRows == 0:

                CarrierData = None
                PayMethodData = None
                LocationData = None
                PayTermData = None
                DiscountData = None
                CategoryData = None
                MeasurementData = None
                TaxingData = None

                Database.AddSettingsModule(1, CarrierData, PayMethodData, LocationData,
                                           PayTermData, DiscountData, CategoryData, MeasurementData, TaxingData)

            else:

                rowcount = 0
                count = 1

                for row in range(0, AllRows):

                    rowcount += 1

                    if self.SettingsCarrierTableWidget.rowCount() >= rowcount:

                        Carrier = self.SettingsCarrierTableWidget.cellWidget(
                            row, 0)
                        CarrierData = Carrier.text()

                    else:

                        CarrierData = None

                    if self.SettingsPayMethodTableWidget.rowCount() >= rowcount:

                        PayMethod = self.SettingsPayMethodTableWidget.cellWidget(
                            row, 0)
                        PayMethodData = PayMethod.text()

                    else:

                        PayMethodData = None

                    if self.SettingsLocationTableWidget.rowCount() >= rowcount:

                        Location = self.SettingsLocationTableWidget.cellWidget(
                            row, 0)
                        LocationData = Location.text()

                    else:

                        LocationData = None

                    if self.SettingsPayTermTableWidget.rowCount() >= rowcount:

                        PayTerm = self.SettingsPayTermTableWidget.cellWidget(
                            row, 0)
                        PayTermData = PayTerm.text()

                    else:

                        PayTermData = None

                    if self.SettingsDiscountTableWidget.rowCount() >= rowcount:

                        Discount = self.SettingsDiscountTableWidget.cellWidget(
                            row, 0)
                        DiscountData = Discount.text()

                    else:

                        DiscountData = None

                    if self.SettingsCategoryTableWidget.rowCount() >= rowcount:

                        Category = self.SettingsCategoryTableWidget.cellWidget(
                            row, 0)
                        CategoryData = Category.text()

                    else:

                        CategoryData = None

                    if self.SettingsMeasurementTableWidget.rowCount() >= rowcount:

                        Measurement = self.SettingsMeasurementTableWidget.cellWidget(
                            row, 0)
                        MeasurementData = Measurement.text()

                    else:

                        MeasurementData = None

                    if self.SettingsTaxingTableWidget.rowCount() >= rowcount:

                        Taxing = self.SettingsTaxingTableWidget.cellWidget(
                            row, 0)
                        TaxingData = Taxing.text()

                    else:

                        TaxingData = None

                    Database.AddSettingsModule(count, CarrierData, PayMethodData, LocationData,
                                               PayTermData, DiscountData, CategoryData, MeasurementData, TaxingData)

                    count += 1

            DataToLoad = ("Carrier,SettingsCarrierTableWidget", "PayMethod,SettingsPayMethodTableWidget", "Location,SettingsLocationTableWidget", "PayTerm,SettingsPayTermTableWidget", "Discount,SettingsDiscountTableWidget", "Category,SettingsCategoryTableWidget",
                          "Measurement,SettingsMeasurementTableWidget", "Taxing,SettingsTaxingTableWidget", "PayTerm.Discount.Taxing.PayMethod.Carrier,AddVendor", "PayTerm.Discount.Taxing.PayMethod.Carrier,AddCustomer", "Measurement,AddProduct", "Category,AddProduct", "Location,AddProduct")

            for x in range(len(DataToLoad)):

                self.LoadData(DataToLoad[x].split(
                    ",")[0], DataToLoad[x].split(",")[1])

            self.MessageBox("Preferences successfully saved.",
                            "OkType", "InfoStyle")

        elif WhatSave == "SettingsUserSavePushButton":

            admin = 0
            blank = 0
            error = 0

            for i in range(0, self.SettingsUserTableWidget.rowCount()):

                if self.SettingsUserTableWidget.item(i, 3) != None:

                    if self.SettingsUserTableWidget.item(i, 3).text() != "":

                        if self.SettingsUserTableWidget.item(i, 3).text() == "Administrator":

                            admin = 1

            if admin == 1:

                for row in range(0, self.SettingsUserTableWidget.rowCount()):

                    for col in range(0, self.SettingsUserTableWidget.columnCount()):

                        if self.SettingsUserTableWidget.item(row, col) != None:

                            if self.SettingsUserTableWidget.item(row, col).text() != "":

                                blank += 0

                            else:

                                blank += 1

                        elif self.SettingsUserTableWidget.item(row, col) == None:

                            blank += 1

                    if blank > 0 and blank < 4:

                        self.MessageBox(
                            "Please fill all blank fields.", "OkType", "AlertStyle")
                        self.SettingsUserTableWidget.selectRow(row)
                        error = 1
                        break

                    else:

                        error = 0

                    blank = 0

                if error == 0:

                    Duplicate = 0

                    for row in range(0, self.SettingsUserTableWidget.rowCount()):

                        SearchDuplicate = self.SettingsUserTableWidget.item(
                            row, 0)

                        for row in range(0, self.SettingsUserTableWidget.rowCount()):

                            PossibleDuplicate = self.SettingsUserTableWidget.item(
                                row, 0)

                            if SearchDuplicate and PossibleDuplicate:

                                if SearchDuplicate.text() != "" and PossibleDuplicate.text() != "":

                                    if SearchDuplicate.text() == PossibleDuplicate.text():

                                        Duplicate += 1

                        if Duplicate > 1:

                            self.MessageBox(
                                "Username already exists.", "OkType", "AlertStyle")

                            for duprow in range(0, self.SettingsUserTableWidget.rowCount()):

                                DuplicateRow = self.SettingsUserTableWidget.item(
                                    duprow, 0)

                                if DuplicateRow:

                                    if DuplicateRow.text() == SearchDuplicate.text():

                                        self.SettingsUserTableWidget.selectRow(
                                            duprow)

                            break

                        elif Duplicate == 1:

                            Duplicate = 0

                    if Duplicate == 0:

                        row = 0

                        while (row < self.SettingsUserTableWidget.rowCount()):

                            UserData = self.SettingsUserTableWidget.item(
                                row, 0)

                            if UserData:

                                if UserData.text() != "":

                                    row += 1

                                else:

                                    self.SettingsUserTableWidget.removeRow(row)
                                    row = 0

                            else:

                                self.SettingsUserTableWidget.removeRow(row)
                                row = 0

                        Count = 0

                        for row in range(0, self.SettingsUserTableWidget.rowCount()):

                            for col in range(0, self.SettingsUserTableWidget.columnCount()):

                                if col == 0:

                                    UsernameData = self.SettingsUserTableWidget.item(
                                        row, col).text()

                                elif col == 1:

                                    EmailData = self.SettingsUserTableWidget.item(
                                        row, col).text()

                                elif col == 2:

                                    PasswordData = self.SettingsUserTableWidget.item(
                                        row, col).text()

                                elif col == 3:

                                    CategoryData = self.SettingsUserTableWidget.item(
                                        row, col).text()

                            Count += 1

                            Result = Database.AddUser(
                                Count, UsernameData, EmailData, PasswordData, PasswordData, CategoryData, "SettingsModule")

                            if self.SettingsUserTableWidget.rowCount() < 10:

                                for rowadd in range(0, 10 - self.SettingsUserTableWidget.rowCount()):

                                    self.SettingsUserTableWidget.insertRow(
                                        self.SettingsUserTableWidget.rowCount())

                            breaks = 0

                            if Result == "Username must not contain special characters ,./;:}{][\/-+=!#$%^&*!":

                                self.MessageBox(
                                    "Username must not contain special characters.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Username must not be less than 8 characters!":

                                self.MessageBox(
                                    "Username must not be less than 8 characters long.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Username must not be more than 15 characters!":

                                self.MessageBox(
                                    "Username must not be more than 15 characters long.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Invalid email!":

                                self.MessageBox(
                                    "Invalid email address.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Password must not contain special characters ,./;:}{][\/-+=!#$%^&*!":

                                self.MessageBox(
                                    "Password must not contain special characters.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Password must not be less than 8 characters!":

                                self.MessageBox(
                                    "Password must not be less than 8 characters long.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Password must not be more than 30 characters!":

                                self.MessageBox(
                                    "Password must not be more than 30 characters long.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Password must be alphanumeric characters!":

                                self.MessageBox(
                                    "Password must be alphanumeric characters.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                            elif Result == "Password must have lower and uppercase letter!":

                                self.MessageBox(
                                    "Password must have lower and uppercase letter.", "OkType", "AlertStyle")
                                self.SettingsUserTableWidget.selectRow(row)
                                breaks = 1
                                break

                        if breaks == 0:

                            if self.DisableRegisteringNewAccountCheckBox.isChecked():

                                yesno = "Yes"

                            else:

                                yesno = "No"

                            Database.EnableDisableRegisteringNewAccount(yesno)

                            self.MessageBox(
                                "User Accounts successfully saved.", "OkType", "InfoStyle")
                            self.LoadData("*", "SettingsUserTableWidget")
                            self.DisableRegisteringNewAccount()
                            Count = 0

            elif admin == 0:

                self.MessageBox(
                    "Please assign 1 Administrator account.", "OkType", "AlertStyle")

        elif WhatSave == "AddVendorSavePushButton":

            specialchars = set(",./;:}{][\/-+=!#$%^&*")
            specialname = "Select Vendor"

            if self.AddVendorNameLineEdit.text() != "" and self.AddVendorAddressLineEdit.text() != "" and self.AddVendorPhoneLineEdit.text() != "" and self.AddVendorEmailLineEdit.text() != "" and self.AddVendorPaymentTermComboBox.currentText() != "" and self.AddVendorDiscountComboBox.currentText() != "" and self.AddVendorCurrencyComboBox.currentText() != "" and self.AddVendorTaxingComboBox.currentText() != "" and self.AddVendorPaymentTermComboBox.currentText() != "" and self.AddVendorCarrierComboBox.currentText() != "":

                if any((c in specialchars) for c in self.AddVendorNameLineEdit.text()):

                    self.MessageBox(
                        "Vendor name must not contain special characters.", "OkType", "AlertStyle")

                elif self.AddVendorNameLineEdit.text().lower() == specialname.lower():

                    self.MessageBox("Vendor name invalid.",
                                    "OkType", "AlertStyle")

                else:

                    pvlist = list()

                    for row in range(0, self.AddVendorProductTableWidget.rowCount()):

                        if self.AddVendorProductTableWidget.item(row, 0) != None and self.AddVendorProductTableWidget.item(row, 4) != None:

                            pvlist.append(self.AddVendorProductTableWidget.item(row, 0).text(
                            ) + "&" + str(float(self.AddVendorProductTableWidget.item(row, 4).text())))

                    Result = Database.AddVendorsModule(self.AddVendorIDLineEdit.text(), self.AddVendorNameLineEdit.text(), self.AddVendorAddressLineEdit.text(), self.AddVendorPhoneLineEdit.text(), self.AddVendorEmailLineEdit.text(), self.AddVendorPaymentTermComboBox.currentText(
                    ), self.AddVendorDiscountComboBox.currentText(), self.AddVendorCurrencyComboBox.currentText(), self.AddVendorTaxingComboBox.currentText(), self.AddVendorPaymentMethodComboBox.currentText(), self.AddVendorCarrierComboBox.currentText(), self.AddVendorRemarksLineEdit.text(), pvlist)

                    if Result == "Vendor name already exists.":

                        self.MessageBox(Result, "OkType", "AlertStyle")

                    elif Result == "Vendor should have atleast 1 product.":

                        self.MessageBox(Result, "OkType", "AlertStyle")

                    else:

                        if Result == "Vendor successfully updated.":

                            self.MessageBox(
                                "Vendor successfully updated.", "OkType", "InfoStyle")

                        else:

                            self.MessageBox(
                                "Vendor successfully saved.", "OkType", "InfoStyle")

                        self.VendorTabWidgetTabBarEvent(0)
                        self.LoadData(
                            "VenCode.VenName.VenPhone.VenEmail.VenAddress.VenDiscount.NormalQuery.None", "VendorListTableWidget")
                        self.LoadData(
                            "ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None", "CurrentInventoryListTableWidget")
                        self.LoadData(
                            "VenCode.VenName.VenCurrency.NormalQuery.None", "AddPurchaseVendorNameComboBox")
                        self.AddVendorCurrencyComboBox.setCurrentIndex(0)

            else:

                self.MessageBox("Please fill all blank fields.",
                                "OkType", "AlertStyle")

        elif WhatSave == "AddItemStockSavePushButton":

            if self.AddStockItemNameLineEdit.text() != "" and self.AddStockItemCategoryComboBox.currentText() != "" and self.AddStockItemPriceLineEdit.text() != "" and self.AddStockItemLocationComboBox.currentText() != "" and self.AddStockItemReorderPointLineEdit.text() != "" and self.AddStockItemMeasurementComboBox.currentText() != "":

                if self.AddStockItemNameLineEdit.text() == "---":

                    self.MessageBox("Product name invalid.",
                                    "OkType", "AlertStyle")

                else:

                    Result = Database.AddProductsModule(self.AddStockItemCodeLineEdit.text(), self.AddStockItemNameLineEdit.text(), self.AddStockItemCategoryComboBox.currentText(), float(self.AddStockItemPriceLineEdit.text(
                    )), self.AddStockItemLocationComboBox.currentText(), float(self.AddStockItemReorderPointLineEdit.text()), self.AddStockItemMeasurementComboBox.currentText(), self.AddStockRemarksLineEdit.toPlainText(), "None", "0", "0")

                    if Result == "Product name already exists.":

                        self.MessageBox(Result, "OkType", "AlertStyle")

                    else:

                        if Result == "Product successfully updated.":

                            self.MessageBox(
                                "Product successfully updated.", "OkType", "InfoStyle")

                        else:

                            self.MessageBox(
                                "Product successfully saved.", "OkType", "InfoStyle")

                        self.AddStockItemCodeLineEdit.setText(
                            str(Database.GenerateCode("Product")))
                        self.AddStockItemNameLineEdit.setText("")
                        self.AddStockItemPriceLineEdit.setText("0.00")
                        self.AddStockItemLocationComboBox.setCurrentText("")
                        self.AddStockItemReorderPointLineEdit.setText("")
                        self.LoadData("Measurement", "AddProduct")
                        self.LoadData("Category", "AddProduct")
                        self.LoadData("Location", "AddProduct")
                        self.AddStockRemarksLineEdit.setText("")

                        self.InventoryTabWidgetTabBarEvent(0)
                        self.LoadData(
                            "ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None", "CurrentInventoryListTableWidget")
                        self.LoadData("ProCode.NormalQuery",
                                      "AddSaleProductCodeComboBox")

            else:

                self.MessageBox("Please fill all blank fields.",
                                "OkType", "AlertStyle")

        elif WhatSave == "AddPurchaseSavePushButton":

            x = 0

            AddPurchaseStatusComboBox = self.AddPurchaseStatusComboBox.currentText()

            if self.AddPurchaseStatusComboBox.currentText() == "Cancel":

                AddPurchaseStatusComboBox = "Canceled"

            elif self.AddPurchaseStatusComboBox.currentText() == "Close":

                AddPurchaseStatusComboBox = "Closed"

            if self.AddPurchaseVendorIDLineEdit.text() == "---":

                self.MessageBox("Please select a Vendor.",
                                "OkType", "AlertStyle")

            else:

                if AddPurchaseStatusComboBox == "Closed":

                    if float(self.AddPurchaseBalanceLineEdit.text()) > 0:

                        self.MessageBox(
                            "Balance must be 0 to close the Purchase Order.", "OkType", "AlertStyle")
                        x = 1

                    conn = Database.ConnectDatabase()

                    cursor = conn.cursor()

                    cursor.execute("SELECT PurNotReceived FROM Purchases WHERE PurCode = %s", (
                        self.AddPurchaseOrderNumberLineEdit.text(),))

                    result = cursor.fetchone()

                    if result:

                        if float(result[0]) > 0:

                            self.MessageBox(
                                "Please received all items to close Purchase Order.", "OkType", "AlertStyle")
                            x = 1

                    conn.close()

                if x == 0:

                    pvlist = list()
                    orderqty = 0
                    purnotreceived = 0

                    if self.AddPurchasePaidLineEdit.text() == "":

                        self.AddPurchasePaidLineEdit.setText("0.0")

                    for row in range(0, self.AddPurchaseProductTableWidget.rowCount()):

                        if self.AddPurchaseProductTableWidget.item(row, 0) != None and self.AddPurchaseProductTableWidget.item(row, 3) != None and self.AddPurchaseProductTableWidget.item(row, 4) != None and self.AddPurchaseProductTableWidget.item(row, 5) != None and self.AddPurchaseProductTableWidget.item(row, 6) != None:

                            if AddPurchaseStatusComboBox == "Canceled":

                                self.AddPurchaseProductTableWidget.item(
                                    row, 3).setText("0.0")
                                self.AddPurchaseProductTableWidget.item(
                                    row, 4).setText("0.0")
                                self.AddPurchaseProductTableWidget.item(
                                    row, 5).setText("0.0")
                                self.AddPurchaseProductTableWidget.item(
                                    row, 6).setText("0.0")
                                self.AddPurchaseProductTableWidget.item(
                                    row, 7).setText("0.0")

                            pvlist.append(self.AddPurchaseProductTableWidget.item(row, 0).text() + "&" + self.AddPurchaseProductTableWidget.item(row, 3).text() + "&" + self.AddPurchaseProductTableWidget.item(row, 4).text(
                            ) + "&" + self.AddPurchaseProductTableWidget.item(row, 5).text() + "&" + self.AddPurchaseProductTableWidget.item(row, 6).text() + "&" + self.AddPurchaseProductTableWidget.item(row, 7).text())

                            orderqty += float(
                                self.AddPurchaseProductTableWidget.item(row, 3).text())
                            purnotreceived += float(
                                self.AddPurchaseProductTableWidget.item(row, 3).text())

                    if AddPurchaseStatusComboBox == "Canceled":

                        self.AddPurchaseTotalLineEdit.setText("0.0")
                        self.AddPurchasePaidLineEdit.setText("0.0")
                        self.AddPurchaseBalanceLineEdit.setText("0.0")
                        orderqty = 0
                        purnotreceived = 0

                    Result = Database.AddPurchasesModule(self.AddPurchaseOrderNumberLineEdit.text(), self.AddPurchaseVendorIDLineEdit.text(), self.AddPurchaseDateLineEdit.text(), AddPurchaseStatusComboBox, self.AddPurchaseDueDateDateEdit.text(
                    ), self.AddPurchaseRequestShipDateDateEdit.text(), self.AddPurchaseRemarksLineEdit.toPlainText(), self.AddPurchaseTotalLineEdit.text(), str(float(self.AddPurchasePaidLineEdit.text())), self.AddPurchaseBalanceLineEdit.text(), orderqty, purnotreceived, pvlist)

                    if Result == "Should have atleast 1 product.":

                        self.MessageBox(Result, "OkType", "AlertStyle")

                    else:

                        if Result == "Purchase successfully updated.":

                            self.MessageBox(
                                "Purchase successfully updated.", "OkType", "InfoStyle")

                        elif Result == "Purchase successfully saved.":

                            self.MessageBox(
                                "Purchase successfully saved.", "OkType", "InfoStyle")

                        self.PurchaseTabWidgetTabBarEvent(0)
                        self.LoadData(
                            "PurCode.VenCode.PurDate.PurStatus.PurDueDate.PurShipDate.PurTotal.PurPaid.PurBalance.NormalQuery.None", "PurchaseListTableWidget")
                        self.LoadData("PurCode.NormalQuery.None",
                                      "SearchReceiveOrderNumberComboBox")

        elif WhatSave == "SearchReceiveOrderNumberSavePushButton":

            if self.SearchReceiveOrderNumberTableWidget.rowCount() == 0:

                self.MessageBox("Please select Purchase Order.",
                                "OkType", "AlertStyle")

            else:

                empty = 0
                datattuple = ()
                datalist = []

                for row in range(self.SearchReceiveOrderNumberTableWidget.rowCount()):

                    code = self.SearchReceiveOrderNumberTableWidget.item(
                        row, 0)
                    vendor = self.SearchReceiveOrderNumberTableWidget.item(
                        row, 3)
                    order = self.SearchReceiveOrderNumberTableWidget.item(
                        row, 4)
                    receive = self.SearchReceiveOrderNumberTableWidget.cellWidget(
                        row, 5)

                    if receive.text() != "" and float(receive.text()) > 0.0:

                        if float(order.text().split(" ")[0]) < float(receive.text()):

                            datattuple = ()
                            datalist = []
                            empty = 1
                            self.MessageBox(
                                "Receive quantity must not exceed Order quantity.", "OkType", "AlertStyle")
                            break

                        else:

                            datattuple = (vendor.text(), code.text(),
                                          order.text(), receive.text())
                            datalist.append(datattuple)

                    else:

                        datattuple = ()
                        datalist = []
                        empty = 1
                        self.MessageBox(
                            "Receive quantity must be greater than 0.", "OkType", "AlertStyle")
                        break

                if empty == 0:

                    received = 0

                    for d in datalist:

                        Database.AddReceiveOrderModule(self.TimeTextLabel.text(), self.SearchReceiveOrderNumberComboBox.currentText(
                        ), d[0], d[1], d[2].split(" ")[0], d[3], self.UserNameLabel.text())
                        received += float(d[3])

                    conn = Database.ConnectDatabase()

                    cursor = conn.cursor()

                    cursor.execute("SELECT PurNotReceived FROM Purchases WHERE PurCode = %s", (
                        self.SearchReceiveOrderNumberComboBox.currentText(),))

                    result = cursor.fetchone()
                    addreceived = 0

                    if result:

                        addreceived = float(result[0]) - float(received)

                        cursor.execute("UPDATE Purchases SET PurStatus = %s, PurNotReceived = %s WHERE PurCode = %s", (
                            "Received", addreceived, self.SearchReceiveOrderNumberComboBox.currentText()))
                        conn.commit()

                    conn.close()

                    self.LoadData("PurCode.NormalQuery.None",
                                  "SearchReceiveOrderNumberComboBox")
                    self.LoadData(
                        "ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None", "CurrentInventoryListTableWidget")
                    self.LoadData(
                        "PurCode.VenCode.PurDate.PurStatus.PurDueDate.PurShipDate.PurTotal.PurPaid.PurBalance.NormalQuery.None", "PurchaseListTableWidget")
                    self.LoadData("ProCode.NormalQuery",
                                  "AddSaleProductCodeComboBox")
                    self.PurchaseTabWidget.setCurrentWidget(
                        self.ListPurchaseTab)

                    self.MessageBox(
                        "Items successfully received.", "OkType", "InfoStyle")

        elif WhatSave == "AddCustomerSavePushButton":

            specialchars = set(",./;:}{][\/-+=!#$%^&*")

            if self.AddCustomerNameLineEdit.text() != "" and self.AddCustomerAddressLineEdit.text() != "" and self.AddCustomerPhoneLineEdit.text() != "" and self.AddCustomerEmailLineEdit.text() != "" and self.AddCustomerPaymentTermComboBox.currentText() != "" and self.AddCustomerDiscountComboBox.currentText() != "" and self.AddCustomerCurrencyComboBox.currentText() != "" and self.AddCustomerTaxingComboBox.currentText() != "" and self.AddCustomerPaymentMethodComboBox.currentText() != "" and self.AddCustomerCarrierComboBox.currentText() != "":

                if any((c in specialchars) for c in self.AddCustomerNameLineEdit.text()):

                    self.MessageBox(
                        "Customer name must not contain special characters.", "OkType", "AlertStyle")

                else:

                    Result = Database.AddCustomersModule(self.AddCustomerIDLineEdit.text(), self.AddCustomerNameLineEdit.text(), self.AddCustomerAddressLineEdit.text(), self.AddCustomerPhoneLineEdit.text(), self.AddCustomerEmailLineEdit.text(), self.AddCustomerPaymentTermComboBox.currentText(
                    ), self.AddCustomerDiscountComboBox.currentText(), self.AddCustomerCurrencyComboBox.currentText(), self.AddCustomerTaxingComboBox.currentText(), self.AddCustomerPaymentMethodComboBox.currentText(), self.AddCustomerCarrierComboBox.currentText(), self.AddCustomerRemarksLineEdit.toPlainText())

                    if Result == "Customer name already exists.":

                        self.MessageBox(Result, "OkType", "AlertStyle")

                    else:

                        if Result == "Customer successfully updated.":

                            self.MessageBox(
                                "Customer successfully updated.", "OkType", "InfoStyle")

                        else:

                            self.MessageBox(
                                "Customer successfully saved.", "OkType", "InfoStyle")

                        self.CustomerTabWidgetTabBarEvent(0)
                        self.LoadData(
                            "CusCode.CusName.CusPhone.CusEmail.CusAddress.CusDiscount.NormalQuery.None", "CustomerListTableWidget")
                        self.LoadData("CusCode.CusName.NormalQuery",
                                      "AddSaleCustomerNameComboBox")
                        self.ComboBoxEvents(
                            "AddSaleCustomerNameComboBox", "None")
                        self.AddCustomerCurrencyComboBox.setCurrentIndex(0)

            else:

                self.MessageBox("Please fill all blank fields.",
                                "OkType", "AlertStyle")

        elif WhatSave == "AddSaleChargePushButton":

            if float(self.AddSaleTotalLineEdit.text()) <= 0.0:

                self.MessageBox("Total amount is zero.",
                                "OkType", "AlertStyle")

            else:

                ProductProfit = 0.0

                SaleCode = str(Database.GenerateCode("Sale"))

                pvlist = list()

                for row in range(0, self.AddSaleProductTableWidget.rowCount()):

                    if self.AddSaleProductTableWidget.item(row, 0) != None:

                        conn = Database.ConnectDatabase()

                        cursor = conn.cursor()

                        cursor.execute("SELECT UnitCost FROM Products WHERE ProCode = %s", (
                            self.AddSaleProductTableWidget.item(row, 0).text().split(" - ")[0],))

                        exists = cursor.fetchall()

                        if exists:

                            for exist in exists:

                                unitcost = exist[0]

                        pvlist.append(SaleCode + "&" + self.AddSaleProductTableWidget.item(row, 0).text().split(" - ")[0] + "&" + str(float(self.AddSaleProductTableWidget.item(row, 1).text(
                        ))) + "&" + str(float(self.AddSaleProductTableWidget.item(row, 2).text())) + "&" + str(float(self.AddSaleProductTableWidget.item(row, 1).text()) * float(unitcost)))

                        conn.close()

                if float(self.AddSaleBalanceLineEdit.text()) == 0.0:

                    paystatus = "Fully Paid"

                elif float(self.AddSaleBalanceLineEdit.text()) > 0.0 and float(self.AddSaleBalanceLineEdit.text()) < float(self.AddSaleTotalLineEdit.text()):

                    paystatus = "Partially Paid"

                elif float(self.AddSaleBalanceLineEdit.text()) == float(self.AddSaleTotalLineEdit.text()):

                    paystatus = "Unpaid"

                Result = Database.AddSalesModule(SaleCode, self.AddSaleCustomerNameComboBox.currentText().split(" - ")[0], self.TimeTextLabel.text(), self.AddSaleSubTotalLineEdit.text(), self.AddSaleDiscountLineEdit.text(
                ), self.AddSaleTaxLineEdit.text(), "0.0", "0.0", self.AddSalePaidLineEdit.text(), self.AddSaleBalanceLineEdit.text(), self.AddSaleProductPayMethodComboBox.currentText(), paystatus, pvlist)

                self.LoadData("CusCode.CusName.NormalQuery",
                              "AddSaleCustomerNameComboBox")
                self.ComboBoxEvents("AddSaleCustomerNameComboBox", "None")
                self.LoadData("ProCode.NormalQuery",
                              "AddSaleProductCodeComboBox")
                self.AddSaleProductQuantityLineEdit.setText("")
                self.AddSaleCalcPaidLineEdit.setText("0")
                self.LoadData(
                    "SaleCode.CusCode.SaleDate.SaleTotal.SalePaid.SaleBal.PayMethod.NormalQuery.None", "SaleListTableWidget")
                self.LoadData("ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None",
                              "CurrentInventoryListTableWidget")
                self.LoadData("NotifText.NotifDate",
                              "NotificationsTableWidget")
                self.MessageBox(Result, "OkType", "InfoStyle")

    # Settings module event.
    def SettingsModule(self):

        WhatSetting = self.sender()

        if WhatSetting.objectName() == "SettingsAddCarrierPushButton":

            rowPosition = self.SettingsCarrierTableWidget.rowCount()

            self.SettingsCarrierTableWidget.insertRow(rowPosition)
            self.SettingsCarrierTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsCarrierTableWidget.setCellWidget(
                self.SettingsCarrierTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusCarrierPushButton":

            if self.SettingsCarrierTableWidget.rowCount() > 0:

                selectedRow = self.SettingsCarrierTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsCarrierTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddPayMethodPushButton":

            rowPosition = self.SettingsPayMethodTableWidget.rowCount()

            self.SettingsPayMethodTableWidget.insertRow(rowPosition)
            self.SettingsPayMethodTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsPayMethodTableWidget.setCellWidget(
                self.SettingsPayMethodTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusPayMethodPushButton":

            if self.SettingsPayMethodTableWidget.rowCount() > 0:

                selectedRow = self.SettingsPayMethodTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsPayMethodTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddLocationPushButton":

            rowPosition = self.SettingsLocationTableWidget.rowCount()

            self.SettingsLocationTableWidget.insertRow(rowPosition)
            self.SettingsLocationTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsLocationTableWidget.setCellWidget(
                self.SettingsLocationTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusLocationPushButton":

            if self.SettingsLocationTableWidget.rowCount() > 0:

                selectedRow = self.SettingsLocationTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsLocationTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddPayTermPushButton":

            rowPosition = self.SettingsPayTermTableWidget.rowCount()

            self.SettingsPayTermTableWidget.insertRow(rowPosition)
            self.SettingsPayTermTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsPayTermTableWidget.setCellWidget(
                self.SettingsPayTermTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusPayTermPushButton":

            if self.SettingsPayTermTableWidget.rowCount() > 0:

                selectedRow = self.SettingsPayTermTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsPayTermTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddDiscountPushButton":

            rowPosition = self.SettingsDiscountTableWidget.rowCount()

            self.SettingsDiscountTableWidget.insertRow(rowPosition)
            self.SettingsDiscountTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp("\d+\.?\d*")
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsDiscountTableWidget.setCellWidget(
                self.SettingsDiscountTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusDiscountPushButton":

            if self.SettingsDiscountTableWidget.rowCount() > 0:

                selectedRow = self.SettingsDiscountTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsDiscountTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddCategoryPushButton":

            rowPosition = self.SettingsCategoryTableWidget.rowCount()

            self.SettingsCategoryTableWidget.insertRow(rowPosition)
            self.SettingsCategoryTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsCategoryTableWidget.setCellWidget(
                self.SettingsCategoryTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusCategoryPushButton":

            if self.SettingsCategoryTableWidget.rowCount() > 0:

                selectedRow = self.SettingsCategoryTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsCategoryTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddMeasurementPushButton":

            rowPosition = self.SettingsMeasurementTableWidget.rowCount()

            self.SettingsMeasurementTableWidget.insertRow(rowPosition)
            self.SettingsMeasurementTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp(r'[\w\d\ ]+')
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsMeasurementTableWidget.setCellWidget(
                self.SettingsMeasurementTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusMeasurementPushButton":

            if self.SettingsMeasurementTableWidget.rowCount() > 0:

                selectedRow = self.SettingsMeasurementTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsMeasurementTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsAddTaxingPushButton":

            rowPosition = self.SettingsTaxingTableWidget.rowCount()

            self.SettingsTaxingTableWidget.insertRow(rowPosition)
            self.SettingsTaxingTableWidget.selectRow(rowPosition)

            self.tableLineEdit = QtWidgets.QLineEdit()
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(11)
            font.setBold(False)
            font.setWeight(50)
            self.tableLineEdit.setFont(font)
            self.tableLineEdit.setStyleSheet(
                "QLineEdit#tableLineEdit{color: rgb(0,0,0);border: none;background-color: rgba(255,255,255,0);qproperty-alignment: AlignLeft;}\n")
            self.tableLineEdit.setObjectName("tableLineEdit")
            rx = QtCore.QRegExp("\d+\.?\d*")
            validator = QtGui.QRegExpValidator(rx)
            self.tableLineEdit.setValidator(validator)
            self.SettingsTaxingTableWidget.setCellWidget(
                self.SettingsTaxingTableWidget.currentRow(), 0, self.tableLineEdit)

        elif WhatSetting.objectName() == "SettingsMinusTaxingPushButton":

            if self.SettingsTaxingTableWidget.rowCount() > 0:

                selectedRow = self.SettingsTaxingTableWidget.currentRow()

                if selectedRow > -1:

                    self.SettingsTaxingTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SettingsUsersAddPushButton":

            rowPosition = self.SettingsUserTableWidget.rowCount()

            self.SettingsUserTableWidget.insertRow(rowPosition)
            self.SettingsUserTableWidget.selectRow(rowPosition)

        elif WhatSetting.objectName() == "SettingsUsersMinusPushButton":

            if self.SettingsUserTableWidget.rowCount() > 0:

                selectedRow = self.SettingsUserTableWidget.currentRow()
                AdminRow = self.SettingsUserTableWidget.item(selectedRow, 3)

                if selectedRow > -1:

                    if AdminRow:

                        if AdminRow.text() == "Administrator":

                            self.MessageBox(
                                "Cannot delete Administrator account.", "OkType", "AlertStyle")

                        else:

                            self.SettingsUserTableWidget.removeRow(selectedRow)

                    else:

                        self.SettingsUserTableWidget.removeRow(selectedRow)

        elif WhatSetting.objectName() == "SelectItemsMinusPushButton":

            if self.SelectItemsTableWidget.rowCount() > 0:

                selectedRow = self.SelectItemsTableWidget.currentRow()

                if selectedRow > -1:

                    self.SelectItemsTableWidget.removeRow(selectedRow)

    # Get data selected in user account combobox menu.
    def FetchUserAccountCategoryComboBoxMenu(self):

        DataFetch = str(self.UserAccountCategoryComboBox.currentText())

        self.SettingsUserTableWidget.setItem(
            RowData, ColumnData, QtWidgets.QTableWidgetItem(DataFetch))
        self.SettingsUserTableWidget.removeCellWidget(RowData, ColumnData)

    # Call user account category combobox menu.
    def CallUserAccountCategoryComboBoxMenu(self, event):

        if event.column() == 3:

            for x in range(0, self.SettingsUserTableWidget.rowCount()):

                self.SettingsUserTableWidget.removeCellWidget(x, 3)

            self.UserAccountCategoryComboBox = QtWidgets.QComboBox(self)
            self.UserAccountCategoryComboBox.setGeometry(
                QtCore.QRect(700, 100, 195, 30))
            font = QtGui.QFont()
            font.setFamily("Raleway")
            font.setPointSize(10)
            font.setBold(False)
            font.setWeight(50)
            self.UserAccountCategoryComboBox.setFont(font)
            self.UserAccountCategoryComboBox.setCursor(
                QtGui.QCursor(QtCore.Qt.PointingHandCursor))
            self.UserAccountCategoryComboBox.setFocusPolicy(
                QtCore.Qt.ClickFocus)
            self.UserAccountCategoryComboBox.setLayoutDirection(
                QtCore.Qt.LeftToRight)
            self.UserAccountCategoryComboBox.setStyleSheet(
                "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
            self.UserAccountCategoryComboBox.hide()
            self.UserAccountCategoryComboBox.setEditable(False)
            self.UserAccountCategoryComboBox.setObjectName(
                "UserAccountCategoryComboBox")

            self.UserAccountCategoryComboBox.clear()

            SearchAdmin = 0

            for y in range(0, self.SettingsUserTableWidget.rowCount()):

                AdminText = self.SettingsUserTableWidget.item(y, 3)

                if AdminText != None:

                    if AdminText.text() == "Administrator":

                        SearchAdmin += 1

            if SearchAdmin > 0:

                Menu = ['Normal']

            else:

                Menu = ['Normal', 'Administrator']

            for j in Menu:

                self.UserAccountCategoryComboBox.addItem(j)

            self.UserAccountCategoryComboBox.show()
            self.SettingsUserTableWidget.setCellWidget(
                event.row(), event.column(), self.UserAccountCategoryComboBox)

            global RowData
            global ColumnData

            RowData = event.row()
            ColumnData = event.column()

            self.UserAccountCategoryComboBox.activated.connect(
                self.FetchUserAccountCategoryComboBoxMenu)

    # Center the window in the screen.
    def CenterScreen(self, x, y):

        Desktop = QtWidgets.QApplication.desktop()
        ScreenRes = Desktop.screenGeometry()
        w = ScreenRes.width()
        h = ScreenRes.height()
        self.setGeometry(QtCore.QRect(int((w/2)-(x/2)),
                         int((h/2)-(y/2)), int(x), int(y)))

    # Minimize and maximize window.
    def MinMax(self):

        global ScreenSize

        if ScreenSize == 980:

            self.setMinimumSize(QtCore.QSize(1274, 793))
            self.setMaximumSize(QtCore.QSize(1274, 793))
            self.CenterScreen(self.width(), self.height())
            ScreenSize = self.width()
            self.CentralWidget.setMinimumSize(QtCore.QSize(1274, 793))
            self.CentralWidget.setMaximumSize(QtCore.QSize(1274, 793))
            self.MainFrame.setGeometry(QtCore.QRect(0, 0, 1274, 793))
            self.MainFrame.setMinimumSize(QtCore.QSize(1274, 793))
            self.MainFrame.setMaximumSize(QtCore.QSize(1274, 793))
            self.HeaderFrame.setGeometry(QtCore.QRect(105, 0, 1169, 73))
            self.HeaderFrame.setMinimumSize(QtCore.QSize(1169, 73))
            self.HeaderFrame.setMaximumSize(QtCore.QSize(1169, 73))
            self.HeaderTextLabel.setGeometry(QtCore.QRect(120, 20, 41, 21))
            self.UserComboBox.setGeometry(QtCore.QRect(920, 25, 180, 30))
            self.HeaderLogoLabel.setGeometry(QtCore.QRect(0, 10, 131, 41))
            self.UserInfoFrame.setGeometry(QtCore.QRect(678, 15, 401, 41))
            self.UserPictureLabel.setGeometry(QtCore.QRect(1110, 20, 32, 32))
            self.UserNameLabel.setGeometry(QtCore.QRect(93, 17, 301, 21))
            self.VendorFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.VendorFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.VendorFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.VendorTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.AddTabFame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.AddVendorProductTableWidget.setGeometry(
                QtCore.QRect(10, 220, 1128, 344))
            self.AddVendorPhoneLabel.setGeometry(
                QtCore.QRect(10, 100, 105, 30))
            self.AddVendorPhoneLineEdit.setGeometry(
                QtCore.QRect(115, 100, 275, 30))
            self.AddVendorEmailLabel.setGeometry(
                QtCore.QRect(10, 140, 105, 30))
            self.AddVendorEmailLineEdit.setGeometry(
                QtCore.QRect(115, 140, 275, 30))
            self.AddVendorPaymentTermComboBox.setGeometry(
                QtCore.QRect(115, 180, 275, 30))
            self.AddVendorPaymentTermLabel.setGeometry(
                QtCore.QRect(10, 180, 105, 30))
            self.AddVendorDiscountLabel.setGeometry(
                QtCore.QRect(400, 100, 105, 30))
            self.AddVendorCurrencyLabel.setGeometry(
                QtCore.QRect(400, 140, 105, 30))
            self.AddVendorCurrencyComboBox.setGeometry(
                QtCore.QRect(505, 140, 260, 30))
            self.AddVendorTaxingLabel.setGeometry(
                QtCore.QRect(400, 180, 105, 30))
            self.AddVendorTaxingComboBox.setGeometry(
                QtCore.QRect(505, 180, 260, 30))
            self.AddVendorDiscountComboBox.setGeometry(
                QtCore.QRect(505, 100, 260, 30))
            self.AddVendorCarrierComboBox.setGeometry(
                QtCore.QRect(880, 140, 257, 30))
            self.AddVendorCarrierLabel.setGeometry(
                QtCore.QRect(775, 140, 105, 30))
            self.AddVendorPaymentMethodComboBox.setGeometry(
                QtCore.QRect(880, 100, 257, 30))
            self.AddVendorPaymentMethodLabel.setGeometry(
                QtCore.QRect(775, 100, 105, 30))
            self.AddVendorAddressLineEdit.setGeometry(
                QtCore.QRect(505, 53, 621, 30))
            self.AddVendorIDLineEdit.setGeometry(QtCore.QRect(70, 20, 250, 31))
            self.AddVendorNameLineEdit.setGeometry(
                QtCore.QRect(505, 17, 621, 30))
            self.AddVendorRemarksLineEdit.setGeometry(
                QtCore.QRect(880, 180, 257, 30))
            self.AddVendorRemarksLabel.setGeometry(
                QtCore.QRect(775, 180, 105, 30))
            self.AddVendorIDLabel.setGeometry(QtCore.QRect(70, 50, 250, 16))
            self.AddVendorNameLabel.setGeometry(QtCore.QRect(400, 17, 105, 30))
            self.AddVendorAddressLabel.setGeometry(
                QtCore.QRect(400, 53, 105, 30))
            self.AddVendorIDAndPictureLabel.setGeometry(
                QtCore.QRect(10, 10, 1128, 81))
            self.AddVendorNameAndIDSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 381, 81))
            self.AddVendorSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.VendorListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 564))
            self.SearchVendorFrame.setGeometry(QtCore.QRect(10, 10, 1127, 35))
            self.SearchVendorLineEdit.setGeometry(
                QtCore.QRect(46, 3, 1071, 31))
            self.VendorSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.VendorListFrame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.VendorFrameTitle.setGeometry(QtCore.QRect(10, 9, 966, 35))
            self.VendorLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.PurchasesFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.PurchasesFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.PurchasesFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.PurchaseTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.AddPurchaseTabFrame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.AddPurchaseVendorNameComboBox.setGeometry(
                QtCore.QRect(20, 53, 510, 30))
            self.AddPurchaseVendorIDLineEdit.setGeometry(
                QtCore.QRect(20, 15, 510, 31))
            self.AddPurchaseStatusTextLabel.setGeometry(
                QtCore.QRect(937, 10, 200, 31))
            self.AddPurchaseSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.AddPurchaseProductTableWidget.setGeometry(
                QtCore.QRect(10, 100, 1128, 341))
            self.AddPurchaseDateTextLabel.setGeometry(
                QtCore.QRect(738, 10, 200, 31))
            self.AddPurchaseOrderNumberTextLabel.setGeometry(
                QtCore.QRect(539, 10, 200, 31))
            self.AddPurchaseInfoLabel.setGeometry(
                QtCore.QRect(10, 10, 1127, 81))
            self.AddPurchaseInfoSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 530, 81))
            self.AddPurchaseOrderNumberInfoSplitterLabel.setGeometry(
                QtCore.QRect(539, 10, 200, 81))
            self.AddPurchaseDateInfoSplitterLabel.setGeometry(
                QtCore.QRect(738, 10, 200, 81))
            self.AddPurchaseStatusInfoSplitterLabel.setGeometry(
                QtCore.QRect(937, 10, 200, 81))
            self.AddPurchaseOrderNumberLineEdit.setGeometry(
                QtCore.QRect(570, 50, 135, 31))
            self.AddPurchaseDateLineEdit.setGeometry(
                QtCore.QRect(770, 50, 135, 31))
            self.AddPurchaseStatusComboBox.setGeometry(
                QtCore.QRect(970, 50, 135, 31))
            self.AddPurchaseDueDateTextLabel.setGeometry(
                QtCore.QRect(10, 490, 147, 30))
            self.AddPurchaseDueDateDateEdit.setGeometry(
                QtCore.QRect(157, 490, 261, 30))
            self.AddPurchaseRequestShipDateTextLabel.setGeometry(
                QtCore.QRect(10, 530, 147, 30))
            self.AddPurchaseRequestShipDateDateEdit.setGeometry(
                QtCore.QRect(157, 530, 261, 30))
            self.AddPurchaseRemarksTextLabel.setGeometry(
                QtCore.QRect(430, 450, 445, 30))
            self.AddPurchaseTotalLineEdit.setGeometry(
                QtCore.QRect(995, 455, 135, 31))
            self.AddPurchaseTotalTextLabel.setGeometry(
                QtCore.QRect(890, 455, 105, 31))
            self.AddPurchasePaidTextLabel.setGeometry(
                QtCore.QRect(890, 490, 105, 31))
            self.AddPurchasePaidLineEdit.setGeometry(
                QtCore.QRect(995, 490, 135, 31))
            self.AddPurchaseRemarksLineEdit.setGeometry(
                QtCore.QRect(430, 480, 445, 81))
            self.AddPurchaseCurrencyTextLabel.setGeometry(
                QtCore.QRect(10, 450, 147, 30))
            self.AddPurchaseCurrencyLineEdit.setGeometry(
                QtCore.QRect(157, 450, 261, 30))
            self.AddPurchaseBalanceLineEdit.setGeometry(
                QtCore.QRect(995, 525, 135, 31))
            self.AddPurchaseBalanceTextLabel.setGeometry(
                QtCore.QRect(890, 525, 105, 31))
            self.AddPurchasePaymentInfoLabel.setGeometry(
                QtCore.QRect(885, 450, 251, 111))
            self.PurchaseListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 564))
            self.SearchPurchaseFrame.setGeometry(
                QtCore.QRect(10, 10, 1127, 35))
            self.SearchPurchaseLineEdit.setGeometry(
                QtCore.QRect(46, 3, 1071, 31))
            self.PurchaseSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.PurchaseListFrame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.PurchaseFrameTitle.setGeometry(QtCore.QRect(10, 9, 965, 35))
            self.PurchaseLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.SalesFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.SalesFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.SalesFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.SaleTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.AddSaleTabFrame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.AddSaleChargePushButton.setGeometry(
                QtCore.QRect(460, 565, 671, 41))
            self.AddSaleProductTableWidget.setGeometry(
                QtCore.QRect(10, 60, 431, 461))
            self.AddSaleCustomerNameFrame.setGeometry(
                QtCore.QRect(10, 10, 431, 51))
            self.AddSaleCustomerNameComboBox.setGeometry(
                QtCore.QRect(50, 10, 371, 30))
            self.AddSaleCustomerImageLabel.setGeometry(
                QtCore.QRect(10, 8, 35, 35))
            self.AddSaleTotalFrame.setGeometry(QtCore.QRect(10, 525, 431, 91))
            self.AddSaleProductPayMethodComboBox.setGeometry(
                QtCore.QRect(120, 50, 311, 31))
            self.AddSaleProductCurrencyComboBox.setGeometry(
                QtCore.QRect(120, 10, 311, 31))
            self.AddSaleProductPayMethodLabelLineEdit.setGeometry(
                QtCore.QRect(0, 50, 120, 31))
            self.AddSaleProductCurrencyLabelLineEdit.setGeometry(
                QtCore.QRect(0, 10, 120, 31))
            self.AddSale1CalPushButton.setGeometry(
                QtCore.QRect(820, 300, 100, 60))
            self.AddSale2CalPushButton.setGeometry(
                QtCore.QRect(925, 300, 100, 60))
            self.AddSale3CalPushButton.setGeometry(
                QtCore.QRect(1030, 300, 100, 60))
            self.AddSale4CalPushButton.setGeometry(
                QtCore.QRect(820, 365, 100, 60))
            self.AddSale5CalPushButton.setGeometry(
                QtCore.QRect(925, 365, 100, 60))
            self.AddSale6CalPushButton.setGeometry(
                QtCore.QRect(1030, 365, 100, 60))
            self.AddSale8CalPushButton.setGeometry(
                QtCore.QRect(925, 430, 100, 60))
            self.AddSale7CalPushButton.setGeometry(
                QtCore.QRect(820, 430, 100, 60))
            self.AddSale9CalPushButton.setGeometry(
                QtCore.QRect(1030, 430, 100, 60))
            self.AddSale00CalPushButton.setGeometry(
                QtCore.QRect(925, 495, 100, 60))
            self.AddSale0CalPushButton.setGeometry(
                QtCore.QRect(820, 495, 100, 60))
            self.AddSaleDeleteCalPushButton.setGeometry(
                QtCore.QRect(1030, 495, 100, 60))
            self.AddSaleProductInfoFrameLabel.setGeometry(
                QtCore.QRect(450, 10, 691, 206))
            self.AddSaleProductImageLabel.setGeometry(
                QtCore.QRect(460, 40, 131, 91))
            self.AddSaleProductCodeComboBox.setGeometry(
                QtCore.QRect(580, 160, 291, 31))
            self.AddSaleProductNameLineEdit.setGeometry(
                QtCore.QRect(620, 30, 370, 70))
            self.AddSaleProductCodeLabelLineEdit.setGeometry(
                QtCore.QRect(460, 160, 121, 31))
            self.AddSaleProductPriceLineEdit.setGeometry(
                QtCore.QRect(620, 100, 370, 31))
            self.AddSaleProductQuantityLabelLineEdit.setGeometry(
                QtCore.QRect(880, 160, 101, 31))
            self.AddSaleProductQuantityLineEdit.setGeometry(
                QtCore.QRect(980, 160, 151, 31))
            self.AddSaleTaxLineEdit.setGeometry(
                QtCore.QRect(600, 330, 171, 25))
            self.AddSaleSubTotalLineEdit.setGeometry(
                QtCore.QRect(600, 250, 171, 25))
            self.AddSaleTotalTextLabel.setGeometry(
                QtCore.QRect(490, 370, 111, 25))
            self.AddSaleSubTotalTextLabel.setGeometry(
                QtCore.QRect(490, 250, 111, 25))
            self.AddSaleDiscountLineEdit.setGeometry(
                QtCore.QRect(600, 290, 171, 25))
            self.AddSaleDiscountTextLabel.setGeometry(
                QtCore.QRect(490, 290, 111, 25))
            self.AddSaleTotalLineEdit.setGeometry(
                QtCore.QRect(600, 370, 171, 25))
            self.AddSaleTaxTextLabel.setGeometry(
                QtCore.QRect(490, 330, 111, 25))
            self.AddSaleBalanceTextLabel.setGeometry(
                QtCore.QRect(490, 450, 111, 25))
            self.AddSaleBalanceLineEdit.setGeometry(
                QtCore.QRect(600, 450, 171, 25))
            self.AddSaleChangeLineEdit.setGeometry(
                QtCore.QRect(600, 490, 171, 25))
            self.AddSaleChangeTextLabel.setGeometry(
                QtCore.QRect(490, 490, 111, 25))
            self.AddSaleTotalInfoFrameLabel.setGeometry(
                QtCore.QRect(450, 215, 691, 401))
            self.AddSaleCalcPaidLineEdit.setGeometry(
                QtCore.QRect(820, 225, 311, 61))
            self.AddSalePaidLineEdit.setGeometry(
                QtCore.QRect(600, 410, 171, 25))
            self.AddSalePaidTextLabel.setGeometry(
                QtCore.QRect(490, 410, 111, 25))
            self.AddSaleInvoiceInfoFrameLabel.setGeometry(
                QtCore.QRect(460, 225, 351, 330))
            self.SaleListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 564))
            self.CustomerSaleListTableWidget.setGeometry(
                QtCore.QRect(10, 220, 1128, 344))
            self.SaleListFrame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.SearchSaleFrame.setGeometry(QtCore.QRect(10, 10, 1128, 35))
            self.SearchSaleLineEdit.setGeometry(QtCore.QRect(46, 3, 1071, 31))
            self.SaleSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
            self.SaleFrameTitle.setGeometry(QtCore.QRect(10, 9, 966, 35))
            self.SaleLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.CustomerFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.CustomerFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.CustomerFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.DashboardFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.DashboardFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.DashboardFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.CustomerTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.AddCustomerTabFame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.AddCustomerPhoneLabel.setGeometry(
                QtCore.QRect(10, 100, 105, 30))
            self.AddCustomerPhoneLineEdit.setGeometry(
                QtCore.QRect(115, 100, 275, 30))
            self.AddCustomerEmailLabel.setGeometry(
                QtCore.QRect(10, 140, 105, 30))
            self.AddCustomerEmailLineEdit.setGeometry(
                QtCore.QRect(115, 140, 275, 30))
            self.AddCustomerPaymentTermComboBox.setGeometry(
                QtCore.QRect(115, 180, 275, 30))
            self.AddCustomerPaymentTermLabel.setGeometry(
                QtCore.QRect(10, 180, 105, 30))
            self.AddCustomerDiscountLabel.setGeometry(
                QtCore.QRect(400, 100, 105, 30))
            self.AddCustomerCurrencyLabel.setGeometry(
                QtCore.QRect(400, 140, 105, 30))
            self.AddCustomerCurrencyComboBox.setGeometry(
                QtCore.QRect(505, 140, 260, 30))
            self.AddCustomerTaxingLabel.setGeometry(
                QtCore.QRect(400, 180, 105, 30))
            self.AddCustomerTaxingComboBox.setGeometry(
                QtCore.QRect(505, 180, 260, 30))
            self.AddCustomerDiscountComboBox.setGeometry(
                QtCore.QRect(505, 100, 260, 30))
            self.AddCustomerCarrierComboBox.setGeometry(
                QtCore.QRect(880, 140, 257, 30))
            self.AddCustomerCarrierLabel.setGeometry(
                QtCore.QRect(775, 140, 105, 30))
            self.AddCustomerPaymentMethodComboBox.setGeometry(
                QtCore.QRect(880, 100, 257, 30))
            self.AddCustomerPaymentMethodLabel.setGeometry(
                QtCore.QRect(775, 100, 105, 30))
            self.AddCustomerAddressLineEdit.setGeometry(
                QtCore.QRect(505, 53, 621, 30))
            self.AddCustomerIDLineEdit.setGeometry(
                QtCore.QRect(70, 20, 250, 31))
            self.AddCustomerNameLineEdit.setGeometry(
                QtCore.QRect(505, 17, 621, 30))
            self.AddCustomerRemarksLabel.setGeometry(
                QtCore.QRect(775, 180, 105, 30))
            self.AddCustomerIDLabel.setGeometry(QtCore.QRect(70, 50, 250, 16))
            self.AddCustomerNameLabel.setGeometry(
                QtCore.QRect(400, 17, 105, 30))
            self.AddCustomerAddressLabel.setGeometry(
                QtCore.QRect(400, 53, 105, 30))
            self.AddCustomerIDAndPictureLabel.setGeometry(
                QtCore.QRect(10, 10, 1128, 81))
            self.AddCustomerNameAndIDSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 381, 81))
            self.AddCustomerSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.AddCustomerRemarksLineEdit.setGeometry(
                QtCore.QRect(880, 180, 257, 30))
            self.CustomerListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 564))
            self.SearchCustomerFrame.setGeometry(
                QtCore.QRect(10, 10, 1128, 35))
            self.SearchCustomerLineEdit.setGeometry(
                QtCore.QRect(46, 3, 1071, 31))
            self.CustomerSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.CustomerListFame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.CustomerFrameTitle.setGeometry(QtCore.QRect(10, 9, 966, 35))
            self.CustomerLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.InventoryFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.InventoryFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.InventoryFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.InventoryTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.InventoryNewProductFrame.setGeometry(
                QtCore.QRect(0, 0, 1148, 624))
            self.AddStockItemNameLineEdit.setGeometry(
                QtCore.QRect(241, 80, 887, 31))
            self.AddStockItemNameTextLabel.setGeometry(
                QtCore.QRect(160, 80, 81, 31))
            self.AddStockItemCodeLineEdit.setGeometry(
                QtCore.QRect(241, 40, 887, 31))
            self.AddStockItemCodeTextLabel.setGeometry(
                QtCore.QRect(160, 40, 81, 31))
            self.AddStockItemCategoryTextLabel.setGeometry(
                QtCore.QRect(10, 140, 1128, 31))
            self.AddStockItemCategoryComboBox.setGeometry(
                QtCore.QRect(10, 170, 1128, 41))
            self.AddStockItemPriceTextLabel.setGeometry(
                QtCore.QRect(10, 220, 111, 31))
            self.AddStockItemPriceLineEdit.setGeometry(
                QtCore.QRect(121, 220, 471, 31))
            self.AddStockItemPictureFrameTextLabel.setGeometry(
                QtCore.QRect(10, 10, 1128, 121))
            self.AddStockItemLocationTextLabel.setGeometry(
                QtCore.QRect(10, 260, 111, 31))
            self.AddStockItemLocationComboBox.setGeometry(
                QtCore.QRect(121, 260, 471, 31))
            self.AddStockItemReorderPointTextLabel.setGeometry(
                QtCore.QRect(599, 220, 171, 31))
            self.AddStockItemReorderPointLineEdit.setGeometry(
                QtCore.QRect(770, 220, 368, 31))
            self.AddStockItemMeasurementTextLabel.setGeometry(
                QtCore.QRect(599, 260, 171, 31))
            self.AddStockItemMeasurementComboBox.setGeometry(
                QtCore.QRect(770, 260, 368, 31))
            self.AddStockItemRemarksTextLabel.setGeometry(
                QtCore.QRect(10, 301, 1128, 31))
            self.AddStockRemarksLineEdit.setGeometry(
                QtCore.QRect(10, 332, 1128, 231))
            self.AddItemStockSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.AddStockItemPictureFrameImage.setGeometry(
                QtCore.QRect(30, 20, 100, 100))
            self.ReceiveStockFrame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.SearchReceiveOrderNumberFrame.setGeometry(
                QtCore.QRect(10, 10, 1128, 35))
            self.SearchReceiveOrderNumberComboBox.setGeometry(
                QtCore.QRect(10, 2, 1105, 31))
            self.SearchReceiveOrderNumberTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 515))
            self.SearchReceiveOrderNumberSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.CurrentInventoryListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 1128, 564))
            self.CurrentStockFrame.setGeometry(QtCore.QRect(0, 0, 1148, 624))
            self.SearchInventoryFrame.setGeometry(
                QtCore.QRect(10, 10, 1128, 35))
            self.SearchInventoryLineEdit.setGeometry(
                QtCore.QRect(46, 3, 1071, 31))
            self.InventorySearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.InventoryFrameTitle.setGeometry(QtCore.QRect(10, 9, 630, 35))
            self.InventoryLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.MessagesFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.MessagesFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.MessagesFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.MessagesFrameTitle.setGeometry(QtCore.QRect(10, 9, 1148, 38))
            self.MessagesLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.MessagesShowFrame.setGeometry(QtCore.QRect(10, 47, 1148, 623))
            self.NotificationsTableWidget.setGeometry(
                QtCore.QRect(10, 10, 1128, 604))
            self.SettingsFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.SettingsFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.SettingsFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.SettingsTabWidget.setGeometry(QtCore.QRect(10, 7, 1148, 663))
            self.UserTabFame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.SettingsUsersAddMinusFrame.setGeometry(
                QtCore.QRect(10, 530, 1131, 31))
            self.SettingsUsersMinusPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsUsersAddPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.DisableRegisteringNewAccountCheckBox.setGeometry(
                QtCore.QRect(790, 10, 340, 20))
            self.SettingsUserSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.SettingsUserTableWidget.setGeometry(
                QtCore.QRect(10, 10, 1128, 521))
            self.PreferencesFrame.setGeometry(QtCore.QRect(0, 0, 1148, 663))
            self.SettingsPreferencesAToolBox.setGeometry(
                QtCore.QRect(10, 10, 557, 541))
            self.CarrierPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsCarrierFrame.setGeometry(
                QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusCarrierPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddCarrierPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsCarrierTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.DiscountPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsDiscountFrame.setGeometry(
                QtCore.QRect(0, 363, 557, 58))
            self.SettingsMinusDiscountPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddDiscountPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsDiscountTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 363))
            self.MeasurementPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsMeasurementFrame.setGeometry(
                QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusMeasurementPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddMeasurementPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsMeasurementTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.SettingsPreferencesBToolBox.setGeometry(
                QtCore.QRect(580, 10, 557, 541))
            self.PaymentMethodPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsPayMethodFrame.setGeometry(
                QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusPayMethodPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddPayMethodPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsPayMethodTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.PaymentTermPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsPayTermFrame.setGeometry(
                QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusPayTermPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddPayTermPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsPayTermTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.CategoryPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsCategoryFrame.setGeometry(
                QtCore.QRect(0, 363, 557, 58))
            self.SettingsMinusCategoryPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddCategoryPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsCategoryTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 363))
            self.TaxingPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsTaxingFrame.setGeometry(QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusTaxingPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddTaxingPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsTaxingTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.SettingsFrameTitle.setGeometry(QtCore.QRect(10, 9, 797, 35))
            self.SettingsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.AdminLoginAccountSettingsFrame.setGeometry(
                QtCore.QRect(10, 9, 1148, 663))
            self.AdminLoginPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(411, 302, 350, 50))
            self.AdminLoginPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(105, 7, 231, 35))
            self.AdminLoginPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 90, 29))
            self.AdminLoginUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(411, 241, 350, 50))
            self.AdminLoginUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(105, 7, 231, 35))
            self.AdminLoginUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 90, 31))
            self.AdminLoginUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(760, 241, 50, 50))
            self.AdminLoginPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(760, 302, 50, 50))
            self.AdminValidateLoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(410, 380, 400, 41))
            self.AdminLoginLabel.setGeometry(QtCore.QRect(410, 192, 391, 21))
            self.AdminLoginErrorLabel.setGeometry(
                QtCore.QRect(410, 440, 401, 21))
            self.ReportsFrame.setGeometry(QtCore.QRect(105, 73, 1169, 680))
            self.ReportsFrame.setMinimumSize(QtCore.QSize(1169, 680))
            self.ReportsFrame.setMaximumSize(QtCore.QSize(1169, 680))
            self.ReportsFrameTitle.setGeometry(QtCore.QRect(10, 9, 1148, 38))
            self.ReportsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.ReportsShowFrame.setGeometry(QtCore.QRect(10, 46, 1148, 624))
            self.ReportsMenuFrame.setGeometry(QtCore.QRect(10, 10, 1128, 601))
            self.ReportsSalesOrderSummaryPushButton.setGeometry(
                QtCore.QRect(0, 296, 215, 32))
            self.ReportsSalesOrderProfitPushButton.setGeometry(
                QtCore.QRect(0, 333, 215, 32))
            self.ReportsCustomerPaymentSummaryPushButton.setGeometry(
                QtCore.QRect(0, 370, 215, 32))
            self.ReportsCustomerPaymentDetailsPushButton.setGeometry(
                QtCore.QRect(0, 408, 215, 32))
            self.ReportsProductOrderedByCustomerPushButton.setGeometry(
                QtCore.QRect(0, 149, 215, 32))
            self.ReportsCustomerListPushButton.setGeometry(
                QtCore.QRect(0, 447, 215, 32))
            self.ReportsPurchaseOrderSummaryPushButton.setGeometry(
                QtCore.QRect(0, 486, 215, 32))
            self.ReportsPurchaseOrderDetailsPushButton.setGeometry(
                QtCore.QRect(0, 525, 215, 32))
            self.ReportsPurchaseOrderStatusPushButton.setGeometry(
                QtCore.QRect(0, 565, 215, 32))
            self.ReportsVendorPaymentDetailsPushButton.setGeometry(
                QtCore.QRect(0, 186, 215, 32))
            self.ReportsVendorProductListPushButton.setGeometry(
                QtCore.QRect(0, 223, 215, 32))
            self.ReportsVendorListPushButton.setGeometry(
                QtCore.QRect(0, 259, 215, 32))
            self.ReportsInventorySummaryPushButton.setGeometry(
                QtCore.QRect(0, 0, 215, 32))
            self.ReportsInventoryDetailsPushButton.setGeometry(
                QtCore.QRect(0, 38, 215, 32))
            self.ReportsInventoryByLocationPushButton.setGeometry(
                QtCore.QRect(0, 75, 215, 32))
            self.ReportsProductPriceListPushButton.setGeometry(
                QtCore.QRect(0, 112, 215, 32))
            self.ReportsInventorySummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsInventorySummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 5, 24, 24))
            self.ReportsInventorySummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsInventorySummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsInventorySummaryFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsInventorySummaryFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsInventorySummaryFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 61, 21))
            self.ReportsInventorySummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 270, 345, 41))
            self.ReportsInventorySummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsInventoryDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsInventoryDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 40, 24, 24))
            self.ReportsInventoryDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsInventoryDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsInventoryDetailsFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsInventoryDetailsFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsInventoryDetailsFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsInventoryDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 310, 345, 41))
            self.ReportsInventoryDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsInventoryDetailsFilterByLocationComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsInventoryDetailsFilterByLocationLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsInventoryByLocationFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsInventoryByLocationFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 80, 24, 24))
            self.ReportsInventoryByLocationFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsInventoryByLocationFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsInventoryByLocationFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsInventoryByLocationFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsInventoryByLocationFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsInventoryByLocationFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 310, 345, 41))
            self.ReportsInventoryByLocationFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsInventoryByLocationFilterByLocationComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsInventoryByLocationFilterByLocationLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsProductPriceListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsProductPriceListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 115, 24, 24))
            self.ReportsProductPriceListFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsProductPriceListFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsProductPriceListFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsProductPriceListFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsProductPriceListFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsProductPriceListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 270, 345, 41))
            self.ReportsProductOrderedByCustomerFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsProductOrderedByCustomerFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 155, 24, 24))
            self.ReportsProductOrderedByCustomerFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsProductOrderedByCustomerFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsProductOrderedByCustomerFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsProductOrderedByCustomerFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsVendorPaymentDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsVendorPaymentDetailsArrowPushButton.setGeometry(
                QtCore.QRect(0, 190, 24, 24))
            self.ReportsVendorPaymentDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsVendorPaymentDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsVendorPaymentDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByVendorLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsVendorProductListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsVendorProductListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 225, 24, 24))
            self.ReportsVendorProductListFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsVendorProductListFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsVendorProductListFilterByVendorLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsVendorProductListFilterByVendorComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsVendorProductListFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsVendorProductListFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsVendorProductListFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsVendorProductListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 310, 345, 41))
            self.ReportsVendorProductListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsVendorListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsVendorListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 265, 24, 24))
            self.ReportsVendorListFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsVendorListFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsVendorListFilterByVendorCodeLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsVendorListFilterByVendorComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsVendorListFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsVendorListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 270, 345, 41))
            self.ReportsVendorListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsSalesOrderSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsSalesOrderSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 300, 24, 24))
            self.ReportsSalesOrderSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsSalesOrderSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 430, 21))
            self.ReportsSalesOrderSummaryFilterByCustomerLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsSalesOrderSummaryFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsSalesOrderSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsSalesOrderSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsSalesOrderSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsSalesOrderSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsSalesOrderSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsSalesOrderProfitFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsSalesOrderProfitFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 335, 24, 24))
            self.ReportsSalesOrderProfitFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsSalesOrderProfitFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsSalesOrderProfitFilterByCustomerLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsSalesOrderProfitFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsSalesOrderProfitFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsSalesOrderProfitFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsSalesOrderProfitFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsSalesOrderProfitFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsSalesOrderProfitFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsSalesOrderProfitFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsSalesOrderProfitFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsSalesOrderProfitFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsCustomerPaymentSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 375, 24, 24))
            self.ReportsCustomerPaymentSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setGeometry(
                QtCore.QRect(290, 165, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsCustomerPaymentDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 410, 24, 24))
            self.ReportsCustomerPaymentDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsCustomerListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsCustomerListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 450, 24, 24))
            self.ReportsCustomerListFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsCustomerListFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsCustomerListFilterByCustomerLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsCustomerListFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsCustomerListFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsCustomerListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 270, 345, 41))
            self.ReportsCustomerListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsPurchaseOrderSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsPurchaseOrderSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 490, 24, 24))
            self.ReportsPurchaseOrderSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsPurchaseOrderDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 530, 24, 24))
            self.ReportsPurchaseOrderDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsPurchaseOrderDetailsFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 390, 345, 41))
            self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setGeometry(
                QtCore.QRect(290, 310, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(440, 310, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setGeometry(
                QtCore.QRect(290, 350, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setGeometry(
                QtCore.QRect(440, 350, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsPurchaseOrderStatusFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 909, 601))
            self.ReportsPurchaseOrderStatusFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 570, 24, 24))
            self.ReportsPurchaseOrderStatusFilterTitleLabel.setGeometry(
                QtCore.QRect(290, 110, 420, 21))
            self.ReportsPurchaseOrderStatusFilterCategoryLabel.setGeometry(
                QtCore.QRect(290, 140, 420, 21))
            self.ReportsPurchaseOrderStatusFilterByVendorLabel.setGeometry(
                QtCore.QRect(290, 270, 150, 30))
            self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsPurchaseOrderStatusFilterByLabel.setGeometry(
                QtCore.QRect(290, 200, 100, 21))
            self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setGeometry(
                QtCore.QRect(290, 310, 345, 41))
            self.ReportsPurchaseOrderStatusFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.ReportsPurchaseOrderStatusFilterByProductsLabel.setGeometry(
                QtCore.QRect(290, 230, 150, 30))
            self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setGeometry(
                QtCore.QRect(440, 230, 195, 30))
            self.ReportWebViewFrame.setGeometry(
                QtCore.QRect(10, 10, 1128, 601))
            self.ReportWebViewBrowser.setGeometry(
                QtCore.QRect(0, 50, 1128, 551))
            self.ReportNameLabel.setGeometry(QtCore.QRect(40, 12, 361, 21))
            self.BackToReportsMenuPushButton.setGeometry(
                QtCore.QRect(0, 10, 24, 24))
            self.ReportToExcelFrame.setGeometry(QtCore.QRect(1040, 11, 24, 24))
            self.ReportToPDFFrame.setGeometry(QtCore.QRect(930, 11, 24, 24))
            self.ReportToExcelPushButton.setGeometry(
                QtCore.QRect(1030, 6, 101, 35))
            self.ReportToPDFPushButton.setGeometry(
                QtCore.QRect(920, 6, 101, 35))
            self.LeftFrame.setGeometry(QtCore.QRect(0, 0, 105, 793))
            self.VendorLogoPushButton.setGeometry(QtCore.QRect(0, 73, 105, 85))
            self.PurchaseLogoPushButton.setGeometry(
                QtCore.QRect(0, 158, 105, 85))
            self.InventoryLogoPushButton.setGeometry(
                QtCore.QRect(0, 243, 105, 85))
            self.SaleLogoPushButton.setGeometry(QtCore.QRect(0, 328, 105, 85))
            self.CustomerLogoPushButton.setGeometry(
                QtCore.QRect(0, 413, 105, 85))
            self.NotificationLogoPushButton.setGeometry(
                QtCore.QRect(0, 498, 105, 85))
            self.SettingLogoPushButton.setGeometry(
                QtCore.QRect(0, 583, 105, 85))
            self.ReportsLogoPushButton.setGeometry(
                QtCore.QRect(0, 668, 105, 85))
            self.DashboardLogoPushButton.setGeometry(
                QtCore.QRect(0, 0, 105, 73))
            self.UserValidationFrame.setGeometry(QtCore.QRect(0, 0, 1274, 793))
            self.UserValidationFrame.setMinimumSize(QtCore.QSize(1274, 793))
            self.UserValidationFrame.setMaximumSize(QtCore.QSize(1274, 793))
            self.ValidationLogoLabelLoginUI.setGeometry(
                QtCore.QRect(218, 320, 300, 111))
            self.ValidateClosePushButtonLoginUI.setGeometry(
                QtCore.QRect(1240, 10, 24, 24))
            self.ValidateMinimizePushButtonLoginUI.setGeometry(
                QtCore.QRect(1214, 10, 24, 24))
            self.ValidationSplitterLabelLoginUI.setGeometry(
                QtCore.QRect(568, 140, 2, 500))
            self.RegisterFrameLoginUI.setGeometry(
                QtCore.QRect(608, 200, 461, 421))
            self.SetupDatabaseFrame.setGeometry(
                QtCore.QRect(608, 160, 491, 421))
            self.BigRegisterFrameLabelLoginUI.setGeometry(
                QtCore.QRect(20, 0, 425, 360))
            self.ValidateRegisterPushButtonLoginUI.setGeometry(
                QtCore.QRect(31, 294, 400, 50))
            self.SignupEmailIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 85, 50, 48))
            self.SignupConfirmPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 225, 50, 48))
            self.SignupUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 15, 50, 48))
            self.SetupDatabaseHostIcon.setGeometry(
                QtCore.QRect(380, 71, 50, 48))
            self.SetupDatabaseUserIcon.setGeometry(
                QtCore.QRect(380, 211, 50, 48))
            self.SetupDatabasePasswordIcon.setGeometry(
                QtCore.QRect(380, 281, 50, 48))
            self.SetupDatabaseNameIcon.setGeometry(
                QtCore.QRect(380, 141, 50, 48))
            self.SignupPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 154, 350, 50))
            self.SignupPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 73, 29))
            self.SignupEmailFrameLoginUI.setGeometry(
                QtCore.QRect(31, 84, 350, 50))
            self.SignupEmailLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupEmailLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 41, 29))
            self.SignupUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(31, 14, 350, 50))
            self.SetupDatabaseHostFrame.setGeometry(
                QtCore.QRect(31, 70, 350, 50))
            self.SetupDatabaseUserFrame.setGeometry(
                QtCore.QRect(31, 210, 350, 50))
            self.SetupDatabasePasswordFrame.setGeometry(
                QtCore.QRect(31, 280, 350, 50))
            self.SetupDatabasePushButton.setGeometry(
                QtCore.QRect(31, 350, 400, 50))
            self.SetupDatabaseNameFrame.setGeometry(
                QtCore.QRect(31, 140, 350, 50))
            self.SignupUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabaseHostLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabaseUserLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabasePasswordLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 70, 29))
            self.SetupDatabaseHostLabel.setGeometry(
                QtCore.QRect(15, 10, 70, 29))
            self.SignupConfirmPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 224, 350, 50))
            self.SignupConfirmPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupConfirmPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 73, 29))
            self.SignupPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 155, 50, 48))
            self.RegisterErrorLabelLoginUI.setGeometry(
                QtCore.QRect(20, 364, 421, 20))
            self.RegisterFrameCoverLoginUI.setGeometry(
                QtCore.QRect(100, -1, 90, 10))
            self.LoginFrameLoginUI.setGeometry(
                QtCore.QRect(608, 200, 461, 421))
            self.BigLoginFrameLabelLoginUI.setGeometry(
                QtCore.QRect(20, 0, 425, 271))
            self.LoginPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 84, 350, 50))
            self.LoginPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.LoginPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 80, 29))
            self.LoginUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(31, 14, 350, 50))
            self.LoginUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.LoginUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(15, 10, 70, 29))
            self.LoginPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 85, 50, 48))
            self.ValidateLoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(30, 202, 400, 50))
            self.LoginUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 15, 50, 48))
            self.LoginForgotPasswordPushButtonLoginUI.setGeometry(
                QtCore.QRect(310, 152, 120, 21))
            self.LoginRemembermeCheckBoxLoginUI.setGeometry(
                QtCore.QRect(31, 154, 131, 17))
            self.LoginErrorLabelLoginUI.setGeometry(
                QtCore.QRect(20, 274, 421, 20))
            self.LoginFrameCoverLoginUI.setGeometry(
                QtCore.QRect(21, -1, 79, 10))
            self.LoginButtonFrameLabelLoginUI.setGeometry(
                QtCore.QRect(628, 160, 81, 41))
            self.LoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(629, 170, 79, 21))
            self.SetupDatabaseLabel.setGeometry(QtCore.QRect(50, 20, 100, 21))
            self.RegisterPushButtonLoginUI.setGeometry(
                QtCore.QRect(709, 170, 89, 21))
            self.RegisterButtonFrameLabelLoginUI.setGeometry(
                QtCore.QRect(708, 160, 91, 41))
            self.LoginFrameUpCoverLoginUI.setGeometry(
                QtCore.QRect(629, 153, 79, 10))
            self.LoginFrameLeftCoverLoginUI.setGeometry(
                QtCore.QRect(620, 160, 10, 40))
            self.RegisterFrameUpCoverLoginUI.setGeometry(
                QtCore.QRect(709, 153, 90, 10))
            self.RegisterFrameRightCoverLoginUI.setGeometry(
                QtCore.QRect(796, 160, 10, 40))
            self.HomeFrame.setGeometry(QtCore.QRect(0, 0, 1274, 793))
            self.HomeFrame.setMinimumSize(QtCore.QSize(1274, 793))
            self.HomeFrame.setMaximumSize(QtCore.QSize(1274, 793))
            self.HomeVendorsPushButton.setGeometry(
                QtCore.QRect(90, 190, 220, 220))
            self.HomePurchasesPushButton.setGeometry(
                QtCore.QRect(380, 190, 220, 220))
            self.HomeInventoryPushButton.setGeometry(
                QtCore.QRect(670, 190, 220, 220))
            self.HomeSalesPushButton.setGeometry(
                QtCore.QRect(960, 190, 220, 220))
            self.HomeCustomersPushButton.setGeometry(
                QtCore.QRect(90, 480, 220, 220))
            self.HomeMessagesPushButton.setGeometry(
                QtCore.QRect(380, 480, 220, 220))
            self.HomeSettingsPushButton.setGeometry(
                QtCore.QRect(670, 480, 220, 220))
            self.HomeReportsPushButton.setGeometry(
                QtCore.QRect(960, 480, 220, 220))
            self.HomeUserPictureLabel.setGeometry(
                QtCore.QRect(1215, 20, 32, 32))
            self.HomeUserComboBox.setGeometry(QtCore.QRect(1025, 25, 180, 30))
            self.HomeUserInfoFrame.setGeometry(QtCore.QRect(780, 15, 401, 41))
            self.HomeHeaderLogoLabel.setGeometry(QtCore.QRect(68, 30, 251, 91))
            self.HomeHeaderTextLabel.setGeometry(QtCore.QRect(310, 62, 61, 31))
            self.HomeUserNameLabel.setGeometry(QtCore.QRect(96, 17, 301, 21))
            self.FooterFrame.setGeometry(QtCore.QRect(0, 753, 1274, 40))
            self.FooterFrame.setMinimumSize(QtCore.QSize(1274, 40))
            self.FooterFrame.setMaximumSize(QtCore.QSize(1274, 40))
            self.TimeTextLabel.setGeometry(QtCore.QRect(940, 13, 300, 20))
            self.SettingsReferenceSavePushButton.setGeometry(
                QtCore.QRect(10, 573, 1128, 41))
            self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(440, 270, 195, 30))
            self.ReportsProductPriceListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 601))
            self.LocationPage.setGeometry(QtCore.QRect(0, 0, 557, 413))
            self.SettingsLocationFrame.setGeometry(
                QtCore.QRect(0, 369, 557, 52))
            self.SettingsMinusLocationPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddLocationPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsLocationTableWidget.setGeometry(
                QtCore.QRect(0, 0, 557, 369))
            self.ProductFrame.setGeometry(
                QtCore.QRect(int(358.5), int(136.5), 573, 520))
            self.SelectItemsFrame.setGeometry(
                QtCore.QRect(480, int(251.5), 330, 300))
            self.AddSaleProductAddToCart.setGeometry(
                QtCore.QRect(1025, 25, 91, 100))

            self.SalesOrderDashboardLabel.setGeometry(
                QtCore.QRect(28, 288, 120, 20))
            self.SalesOrderDateDashboardComboBox.setGeometry(
                QtCore.QRect(495, 284, 160, 30))
            self.SalesOrderGraphwidget.setGeometry(
                QtCore.QRect(20, 328, 600, 325))
            self.SalesOrderMarginDashboardLabel.setGeometry(
                QtCore.QRect(15, 275, 612, 50))
            self.SalesOrderMarginDownDashboardLabel.setGeometry(
                QtCore.QRect(15, 320, 612, 343))
            self.ActiveProductsDashboardLabel.setGeometry(
                QtCore.QRect(662, 30, 180, 20))
            self.ActiveProductsGraphwidget.setGeometry(
                QtCore.QRect(648, 69, 498, 589))
            self.ActiveProductsMarginDashboardLabel.setGeometry(
                QtCore.QRect(645, 15, 505, 50))
            self.ActiveProductsMarginDownDashboardLabel.setGeometry(
                QtCore.QRect(645, 58, 505, 604))

            self.AddVendorProductTableWidget.horizontalHeader().setDefaultSectionSize(226)
            self.AddVendorProductTableWidget.horizontalHeader().setMinimumSectionSize(226)
            self.AddVendorProductTableWidget.verticalHeader().setVisible(False)
            self.AddVendorProductTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.VendorListTableWidget.horizontalHeader().setDefaultSectionSize(188)
            self.VendorListTableWidget.horizontalHeader().setMinimumSectionSize(188)
            self.VendorListTableWidget.verticalHeader().setVisible(False)
            self.VendorListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CustomerSaleListTableWidget.horizontalHeader().setDefaultSectionSize(188)
            self.CustomerSaleListTableWidget.horizontalHeader().setMinimumSectionSize(188)
            self.CustomerSaleListTableWidget.verticalHeader().setVisible(False)
            self.CustomerSaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.AddPurchaseProductTableWidget.horizontalHeader().setDefaultSectionSize(215)
            self.AddPurchaseProductTableWidget.horizontalHeader().setMinimumSectionSize(215)
            self.AddPurchaseProductTableWidget.verticalHeader().setVisible(False)
            self.AddPurchaseProductTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.PurchaseListTableWidget.horizontalHeader().setDefaultSectionSize(150)
            self.PurchaseListTableWidget.horizontalHeader().setMinimumSectionSize(150)
            self.PurchaseListTableWidget.verticalHeader().setVisible(False)
            self.PurchaseListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.AddSaleProductTableWidget.horizontalHeader().setVisible(False)
            self.AddSaleProductTableWidget.horizontalHeader().setDefaultSectionSize(150)
            self.AddSaleProductTableWidget.horizontalHeader().setHighlightSections(False)
            self.AddSaleProductTableWidget.horizontalHeader().setMinimumSectionSize(150)
            self.AddSaleProductTableWidget.horizontalHeader().setSortIndicatorShown(False)
            self.AddSaleProductTableWidget.verticalHeader().setVisible(False)
            self.AddSaleProductTableWidget.verticalHeader().setMinimumSectionSize(60)
            self.SaleListTableWidget.horizontalHeader().setDefaultSectionSize(161)
            self.SaleListTableWidget.horizontalHeader().setMinimumSectionSize(161)
            self.SaleListTableWidget.verticalHeader().setVisible(False)
            self.SaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CustomerListTableWidget.horizontalHeader().setDefaultSectionSize(188)
            self.CustomerListTableWidget.horizontalHeader().setMinimumSectionSize(188)
            self.CustomerListTableWidget.verticalHeader().setVisible(False)
            self.CustomerListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setDefaultSectionSize(188)
            self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setMinimumSectionSize(188)
            self.SearchReceiveOrderNumberTableWidget.verticalHeader().setVisible(False)
            self.SearchReceiveOrderNumberTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CurrentInventoryListTableWidget.horizontalHeader().setDefaultSectionSize(161)
            self.CurrentInventoryListTableWidget.horizontalHeader().setMinimumSectionSize(161)
            self.CurrentInventoryListTableWidget.verticalHeader().setVisible(False)
            self.CurrentInventoryListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.NotificationsTableWidget.horizontalHeader().setDefaultSectionSize(1126)
            self.NotificationsTableWidget.horizontalHeader().setMinimumSectionSize(860)
            self.NotificationsTableWidget.verticalHeader().setVisible(False)
            self.NotificationsTableWidget.verticalHeader().setDefaultSectionSize(150)
            self.NotificationsTableWidget.verticalHeader().setMinimumSectionSize(150)
            self.SettingsUserTableWidget.horizontalHeader().setDefaultSectionSize(283)
            self.SettingsUserTableWidget.horizontalHeader().setMinimumSectionSize(283)
            self.SettingsUserTableWidget.verticalHeader().setVisible(False)
            self.SettingsUserTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsCarrierTableWidget.horizontalHeader().setVisible(False)
            self.SettingsCarrierTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsCarrierTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsCarrierTableWidget.verticalHeader().setVisible(False)
            self.SettingsCarrierTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsDiscountTableWidget.horizontalHeader().setVisible(False)
            self.SettingsDiscountTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsDiscountTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsDiscountTableWidget.verticalHeader().setVisible(False)
            self.SettingsDiscountTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsMeasurementTableWidget.horizontalHeader().setVisible(False)
            self.SettingsMeasurementTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsMeasurementTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsMeasurementTableWidget.verticalHeader().setVisible(False)
            self.SettingsMeasurementTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsPayMethodTableWidget.horizontalHeader().setVisible(False)
            self.SettingsPayMethodTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsPayMethodTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsPayMethodTableWidget.verticalHeader().setVisible(False)
            self.SettingsPayMethodTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsPayTermTableWidget.horizontalHeader().setVisible(False)
            self.SettingsPayTermTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsPayTermTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsPayTermTableWidget.verticalHeader().setVisible(False)
            self.SettingsPayTermTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsCategoryTableWidget.horizontalHeader().setVisible(False)
            self.SettingsCategoryTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsCategoryTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsCategoryTableWidget.verticalHeader().setVisible(False)
            self.SettingsCategoryTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsTaxingTableWidget.horizontalHeader().setVisible(False)
            self.SettingsTaxingTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsTaxingTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsTaxingTableWidget.verticalHeader().setVisible(False)
            self.SettingsTaxingTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsLocationTableWidget.horizontalHeader().setVisible(False)
            self.SettingsLocationTableWidget.horizontalHeader().setDefaultSectionSize(554)
            self.SettingsLocationTableWidget.horizontalHeader().setMinimumSectionSize(554)
            self.SettingsLocationTableWidget.verticalHeader().setVisible(False)
            self.SettingsLocationTableWidget.verticalHeader().setMinimumSectionSize(30)

            _translate = QtCore.QCoreApplication.translate
            self.ValidateMinimizePushButtonLoginUI.setToolTip(
                _translate("MyMainWindow", "Small View"))
            self.HomeUserComboBox.setItemText(
                2, _translate("MyMainWindow", "SMALL VIEW"))
            self.UserComboBox.setItemText(
                2, _translate("MyMainWindow", "SMALL VIEW"))

        else:

            self.setMinimumSize(QtCore.QSize(980, 610))
            self.setMaximumSize(QtCore.QSize(980, 610))
            self.CenterScreen(self.width(), self.height())
            ScreenSize = self.width()
            self.CentralWidget.setMinimumSize(QtCore.QSize(980, 610))
            self.CentralWidget.setMaximumSize(QtCore.QSize(980, 610))
            self.MainFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
            self.HeaderFrame.setGeometry(QtCore.QRect(80, 0, 900, 73))
            self.HeaderTextLabel.setGeometry(QtCore.QRect(120, 22, 41, 21))
            self.UserComboBox.setGeometry(QtCore.QRect(660, 20, 180, 30))
            self.HeaderLogoLabel.setGeometry(QtCore.QRect(0, 10, 131, 41))
            self.UserInfoFrame.setGeometry(QtCore.QRect(410, 15, 408, 41))
            self.UserNameLabel.setGeometry(QtCore.QRect(100, 12, 301, 21))
            self.UserPictureLabel.setGeometry(QtCore.QRect(850, 15, 32, 32))
            self.FooterFrame.setGeometry(QtCore.QRect(0, 579, 980, 31))
            self.FooterFrame.setMinimumSize(QtCore.QSize(980, 31))
            self.FooterFrame.setMaximumSize(QtCore.QSize(980, 31))
            self.TimeTextLabel.setGeometry(QtCore.QRect(660, 7, 300, 20))
            self.VendorFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.VendorTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.AddTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.AddVendorProductTableWidget.setGeometry(
                QtCore.QRect(10, 220, 861, 171))
            self.AddVendorPhoneLabel.setGeometry(
                QtCore.QRect(10, 100, 105, 30))
            self.AddVendorPhoneLineEdit.setGeometry(
                QtCore.QRect(115, 100, 175, 30))
            self.AddVendorEmailLabel.setGeometry(
                QtCore.QRect(10, 140, 105, 30))
            self.AddVendorEmailLineEdit.setGeometry(
                QtCore.QRect(115, 140, 175, 30))
            self.AddVendorPaymentTermComboBox.setGeometry(
                QtCore.QRect(115, 180, 175, 30))
            self.AddVendorPaymentTermLabel.setGeometry(
                QtCore.QRect(10, 180, 105, 30))
            self.AddVendorDiscountLabel.setGeometry(
                QtCore.QRect(300, 100, 105, 30))
            self.AddVendorCurrencyLabel.setGeometry(
                QtCore.QRect(300, 140, 105, 30))
            self.AddVendorCurrencyComboBox.setGeometry(
                QtCore.QRect(405, 140, 175, 30))
            self.AddVendorTaxingLabel.setGeometry(
                QtCore.QRect(300, 180, 105, 30))
            self.AddVendorTaxingComboBox.setGeometry(
                QtCore.QRect(405, 180, 175, 30))
            self.AddVendorDiscountComboBox.setGeometry(
                QtCore.QRect(405, 100, 175, 30))
            self.AddVendorCarrierComboBox.setGeometry(
                QtCore.QRect(696, 140, 175, 30))
            self.AddVendorCarrierLabel.setGeometry(
                QtCore.QRect(591, 140, 105, 30))
            self.AddVendorPaymentMethodComboBox.setGeometry(
                QtCore.QRect(696, 100, 175, 30))
            self.AddVendorPaymentMethodLabel.setGeometry(
                QtCore.QRect(591, 100, 105, 30))
            self.AddVendorAddressLineEdit.setGeometry(
                QtCore.QRect(405, 53, 461, 30))
            self.AddVendorIDLineEdit.setGeometry(QtCore.QRect(20, 20, 250, 31))
            self.AddVendorNameLineEdit.setGeometry(
                QtCore.QRect(405, 17, 461, 30))
            self.AddVendorRemarksLineEdit.setGeometry(
                QtCore.QRect(696, 180, 175, 30))
            self.AddVendorRemarksLabel.setGeometry(
                QtCore.QRect(591, 180, 105, 30))
            self.AddVendorIDLabel.setGeometry(QtCore.QRect(20, 50, 250, 16))
            self.AddVendorNameLabel.setGeometry(QtCore.QRect(300, 17, 105, 30))
            self.AddVendorAddressLabel.setGeometry(
                QtCore.QRect(300, 53, 105, 30))
            self.AddVendorIDAndPictureLabel.setGeometry(
                QtCore.QRect(10, 10, 861, 81))
            self.AddVendorNameAndIDSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 281, 81))
            self.AddVendorSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.VendorListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 391))
            self.SearchVendorFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
            self.SearchVendorLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
            self.VendorSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.VendorListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.VendorFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
            self.VendorLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.PurchasesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.PurchaseTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.AddPurchaseTabFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.AddPurchaseVendorNameComboBox.setGeometry(
                QtCore.QRect(20, 53, 401, 30))
            self.AddPurchaseVendorIDLineEdit.setGeometry(
                QtCore.QRect(20, 15, 401, 31))
            self.AddPurchaseStatusTextLabel.setGeometry(
                QtCore.QRect(723, 10, 147, 31))
            self.AddPurchaseSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.AddPurchaseProductTableWidget.setGeometry(
                QtCore.QRect(10, 100, 861, 171))
            self.AddPurchaseDateTextLabel.setGeometry(
                QtCore.QRect(577, 10, 145, 31))
            self.AddPurchaseOrderNumberTextLabel.setGeometry(
                QtCore.QRect(430, 10, 147, 31))
            self.AddPurchaseInfoLabel.setGeometry(
                QtCore.QRect(10, 10, 861, 81))
            self.AddPurchaseInfoSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 421, 81))
            self.AddPurchaseOrderNumberInfoSplitterLabel.setGeometry(
                QtCore.QRect(430, 10, 147, 81))
            self.AddPurchaseDateInfoSplitterLabel.setGeometry(
                QtCore.QRect(576, 10, 147, 81))
            self.AddPurchaseStatusInfoSplitterLabel.setGeometry(
                QtCore.QRect(722, 10, 149, 81))
            self.AddPurchaseOrderNumberLineEdit.setGeometry(
                QtCore.QRect(435, 50, 135, 31))
            self.AddPurchaseDateLineEdit.setGeometry(
                QtCore.QRect(582, 50, 135, 31))
            self.AddPurchaseStatusComboBox.setGeometry(
                QtCore.QRect(729, 50, 135, 31))
            self.AddPurchaseDueDateTextLabel.setGeometry(
                QtCore.QRect(10, 320, 147, 30))
            self.AddPurchaseDueDateDateEdit.setGeometry(
                QtCore.QRect(157, 320, 151, 30))
            self.AddPurchaseRequestShipDateTextLabel.setGeometry(
                QtCore.QRect(10, 360, 147, 30))
            self.AddPurchaseRequestShipDateDateEdit.setGeometry(
                QtCore.QRect(157, 360, 151, 30))
            self.AddPurchaseRemarksTextLabel.setGeometry(
                QtCore.QRect(320, 280, 291, 30))
            self.AddPurchaseTotalLineEdit.setGeometry(
                QtCore.QRect(730, 285, 135, 31))
            self.AddPurchaseTotalTextLabel.setGeometry(
                QtCore.QRect(625, 285, 105, 31))
            self.AddPurchasePaidTextLabel.setGeometry(
                QtCore.QRect(625, 320, 105, 31))
            self.AddPurchasePaidLineEdit.setGeometry(
                QtCore.QRect(730, 320, 135, 31))
            self.AddPurchaseRemarksLineEdit.setGeometry(
                QtCore.QRect(320, 310, 291, 81))
            self.AddPurchaseCurrencyTextLabel.setGeometry(
                QtCore.QRect(10, 280, 147, 30))
            self.AddPurchaseCurrencyLineEdit.setGeometry(
                QtCore.QRect(157, 280, 151, 30))
            self.AddPurchaseBalanceLineEdit.setGeometry(
                QtCore.QRect(730, 355, 135, 31))
            self.AddPurchaseBalanceTextLabel.setGeometry(
                QtCore.QRect(625, 355, 105, 31))
            self.AddPurchasePaymentInfoLabel.setGeometry(
                QtCore.QRect(620, 280, 251, 111))
            self.PurchaseListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 391))
            self.SearchPurchaseFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
            self.SearchPurchaseLineEdit.setGeometry(
                QtCore.QRect(46, 3, 811, 31))
            self.PurchaseSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.PurchaseListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.PurchaseFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
            self.PurchaseLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.SalesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.SaleTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.AddSaleTabFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.AddSaleChargePushButton.setGeometry(
                QtCore.QRect(290, 390, 571, 41))
            self.AddSaleProductTableWidget.setGeometry(
                QtCore.QRect(10, 60, 261, 281))
            self.AddSaleCustomerNameFrame.setGeometry(
                QtCore.QRect(10, 10, 261, 51))
            self.AddSaleCustomerNameComboBox.setGeometry(
                QtCore.QRect(50, 10, 201, 30))
            self.AddSaleCustomerImageLabel.setGeometry(
                QtCore.QRect(10, 8, 35, 35))
            self.AddSaleTotalFrame.setGeometry(QtCore.QRect(10, 350, 261, 91))
            self.AddSaleProductPayMethodComboBox.setGeometry(
                QtCore.QRect(120, 50, 141, 31))
            self.AddSaleProductCurrencyComboBox.setGeometry(
                QtCore.QRect(120, 10, 141, 31))
            self.AddSaleProductPayMethodLabelLineEdit.setGeometry(
                QtCore.QRect(0, 50, 120, 31))
            self.AddSaleProductCurrencyLabelLineEdit.setGeometry(
                QtCore.QRect(0, 10, 120, 31))
            self.AddSale1CalPushButton.setGeometry(
                QtCore.QRect(618, 220, 80, 40))
            self.AddSale2CalPushButton.setGeometry(
                QtCore.QRect(699, 220, 80, 40))
            self.AddSale3CalPushButton.setGeometry(
                QtCore.QRect(780, 220, 80, 40))
            self.AddSale4CalPushButton.setGeometry(
                QtCore.QRect(618, 261, 80, 40))
            self.AddSale5CalPushButton.setGeometry(
                QtCore.QRect(699, 261, 80, 40))
            self.AddSale6CalPushButton.setGeometry(
                QtCore.QRect(780, 261, 80, 40))
            self.AddSale8CalPushButton.setGeometry(
                QtCore.QRect(699, 302, 80, 40))
            self.AddSale7CalPushButton.setGeometry(
                QtCore.QRect(618, 302, 80, 40))
            self.AddSale9CalPushButton.setGeometry(
                QtCore.QRect(780, 302, 80, 40))
            self.AddSale00CalPushButton.setGeometry(
                QtCore.QRect(699, 343, 80, 40))
            self.AddSale0CalPushButton.setGeometry(
                QtCore.QRect(618, 343, 80, 40))
            self.AddSaleDeleteCalPushButton.setGeometry(
                QtCore.QRect(780, 343, 80, 40))
            self.AddSaleProductInfoFrameLabel.setGeometry(
                QtCore.QRect(280, 10, 591, 141))
            self.AddSaleProductImageLabel.setGeometry(
                QtCore.QRect(290, 15, 131, 91))
            self.AddSaleProductCodeComboBox.setGeometry(
                QtCore.QRect(410, 110, 200, 31))
            self.AddSaleProductNameLineEdit.setGeometry(
                QtCore.QRect(435, 20, 300, 50))
            self.AddSaleProductCodeLabelLineEdit.setGeometry(
                QtCore.QRect(290, 110, 121, 31))
            self.AddSaleProductPriceLineEdit.setGeometry(
                QtCore.QRect(435, 70, 300, 31))
            self.AddSaleProductQuantityLabelLineEdit.setGeometry(
                QtCore.QRect(620, 110, 101, 31))
            self.AddSaleProductQuantityLineEdit.setGeometry(
                QtCore.QRect(720, 110, 141, 31))
            self.AddSaleTaxLineEdit.setGeometry(
                QtCore.QRect(420, 230, 171, 25))
            self.AddSaleSubTotalLineEdit.setGeometry(
                QtCore.QRect(420, 170, 171, 25))
            self.AddSaleTotalTextLabel.setGeometry(
                QtCore.QRect(310, 260, 111, 25))
            self.AddSaleSubTotalTextLabel.setGeometry(
                QtCore.QRect(310, 170, 111, 25))
            self.AddSaleDiscountLineEdit.setGeometry(
                QtCore.QRect(420, 200, 171, 25))
            self.AddSaleDiscountTextLabel.setGeometry(
                QtCore.QRect(310, 200, 111, 25))
            self.AddSaleTotalLineEdit.setGeometry(
                QtCore.QRect(420, 260, 171, 25))
            self.AddSaleTaxTextLabel.setGeometry(
                QtCore.QRect(310, 230, 111, 25))
            self.AddSaleBalanceTextLabel.setGeometry(
                QtCore.QRect(310, 320, 111, 25))
            self.AddSaleBalanceLineEdit.setGeometry(
                QtCore.QRect(420, 320, 171, 25))
            self.AddSaleChangeLineEdit.setGeometry(
                QtCore.QRect(420, 350, 171, 25))
            self.AddSaleChangeTextLabel.setGeometry(
                QtCore.QRect(310, 350, 111, 25))
            self.AddSaleTotalInfoFrameLabel.setGeometry(
                QtCore.QRect(280, 150, 591, 291))
            self.AddSaleCalcPaidLineEdit.setGeometry(
                QtCore.QRect(618, 160, 242, 51))
            self.AddSalePaidLineEdit.setGeometry(
                QtCore.QRect(420, 290, 171, 25))
            self.AddSalePaidTextLabel.setGeometry(
                QtCore.QRect(310, 290, 111, 25))
            self.AddSaleInvoiceInfoFrameLabel.setGeometry(
                QtCore.QRect(290, 160, 321, 221))
            self.SaleListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 391))
            self.CustomerSaleListTableWidget.setGeometry(
                QtCore.QRect(10, 220, 861, 171))
            self.SaleListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.SearchSaleFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
            self.SearchSaleLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
            self.SaleSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
            self.SaleFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
            self.SaleLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.CustomerFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.DashboardFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.CustomerTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.AddCustomerTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.AddCustomerPhoneLabel.setGeometry(
                QtCore.QRect(10, 100, 105, 30))
            self.AddCustomerPhoneLineEdit.setGeometry(
                QtCore.QRect(115, 100, 175, 30))
            self.AddCustomerEmailLabel.setGeometry(
                QtCore.QRect(10, 140, 105, 30))
            self.AddCustomerEmailLineEdit.setGeometry(
                QtCore.QRect(115, 140, 175, 30))
            self.AddCustomerPaymentTermComboBox.setGeometry(
                QtCore.QRect(115, 180, 175, 30))
            self.AddCustomerPaymentTermLabel.setGeometry(
                QtCore.QRect(10, 180, 105, 30))
            self.AddCustomerDiscountLabel.setGeometry(
                QtCore.QRect(300, 100, 105, 30))
            self.AddCustomerCurrencyLabel.setGeometry(
                QtCore.QRect(300, 140, 105, 30))
            self.AddCustomerCurrencyComboBox.setGeometry(
                QtCore.QRect(405, 140, 175, 30))
            self.AddCustomerTaxingLabel.setGeometry(
                QtCore.QRect(300, 180, 105, 30))
            self.AddCustomerTaxingComboBox.setGeometry(
                QtCore.QRect(405, 180, 175, 30))
            self.AddCustomerDiscountComboBox.setGeometry(
                QtCore.QRect(405, 100, 175, 30))
            self.AddCustomerCarrierComboBox.setGeometry(
                QtCore.QRect(696, 140, 175, 30))
            self.AddCustomerCarrierLabel.setGeometry(
                QtCore.QRect(591, 140, 105, 30))
            self.AddCustomerPaymentMethodComboBox.setGeometry(
                QtCore.QRect(696, 100, 175, 30))
            self.AddCustomerPaymentMethodLabel.setGeometry(
                QtCore.QRect(591, 100, 105, 30))
            self.AddCustomerAddressLineEdit.setGeometry(
                QtCore.QRect(405, 53, 461, 30))
            self.AddCustomerIDLineEdit.setGeometry(
                QtCore.QRect(20, 20, 250, 31))
            self.AddCustomerNameLineEdit.setGeometry(
                QtCore.QRect(405, 17, 461, 30))
            self.AddCustomerRemarksLabel.setGeometry(
                QtCore.QRect(591, 180, 105, 30))
            self.AddCustomerIDLabel.setGeometry(QtCore.QRect(20, 50, 250, 16))
            self.AddCustomerNameLabel.setGeometry(
                QtCore.QRect(300, 17, 105, 30))
            self.AddCustomerAddressLabel.setGeometry(
                QtCore.QRect(300, 53, 105, 30))
            self.AddCustomerIDAndPictureLabel.setGeometry(
                QtCore.QRect(10, 10, 861, 81))
            self.AddCustomerNameAndIDSplitterLabel.setGeometry(
                QtCore.QRect(10, 10, 281, 81))
            self.AddCustomerSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.AddCustomerRemarksLineEdit.setGeometry(
                QtCore.QRect(696, 180, 175, 30))
            self.CustomerListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 391))
            self.SearchCustomerFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
            self.SearchCustomerLineEdit.setGeometry(
                QtCore.QRect(46, 3, 811, 31))
            self.CustomerSearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.CustomerListFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.CustomerFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
            self.CustomerLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.InventoryFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.InventoryTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.InventoryNewProductFrame.setGeometry(
                QtCore.QRect(0, 0, 880, 451))
            self.AddStockItemNameLineEdit.setGeometry(
                QtCore.QRect(241, 80, 621, 31))
            self.AddStockItemNameTextLabel.setGeometry(
                QtCore.QRect(160, 80, 81, 31))
            self.AddStockItemCodeLineEdit.setGeometry(
                QtCore.QRect(241, 40, 621, 31))
            self.AddStockItemCodeTextLabel.setGeometry(
                QtCore.QRect(160, 40, 81, 31))
            self.AddStockItemCategoryTextLabel.setGeometry(
                QtCore.QRect(10, 140, 861, 31))
            self.AddStockItemCategoryComboBox.setGeometry(
                QtCore.QRect(10, 170, 861, 41))
            self.AddStockItemPriceTextLabel.setGeometry(
                QtCore.QRect(10, 220, 111, 31))
            self.AddStockItemPriceLineEdit.setGeometry(
                QtCore.QRect(121, 220, 291, 31))
            self.AddStockItemPictureFrameTextLabel.setGeometry(
                QtCore.QRect(10, 10, 861, 121))
            self.AddStockItemLocationTextLabel.setGeometry(
                QtCore.QRect(10, 260, 111, 31))
            self.AddStockItemLocationComboBox.setGeometry(
                QtCore.QRect(121, 260, 291, 31))
            self.AddStockItemReorderPointTextLabel.setGeometry(
                QtCore.QRect(420, 220, 171, 31))
            self.AddStockItemReorderPointLineEdit.setGeometry(
                QtCore.QRect(591, 220, 281, 31))
            self.AddStockItemMeasurementTextLabel.setGeometry(
                QtCore.QRect(420, 260, 171, 31))
            self.AddStockItemMeasurementComboBox.setGeometry(
                QtCore.QRect(591, 260, 281, 31))
            self.AddStockItemRemarksTextLabel.setGeometry(
                QtCore.QRect(10, 300, 861, 31))
            self.AddStockRemarksLineEdit.setGeometry(
                QtCore.QRect(10, 330, 861, 61))
            self.AddItemStockSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.AddStockItemPictureFrameImage.setGeometry(
                QtCore.QRect(30, 20, 100, 100))
            self.ReceiveStockFrame.setGeometry(QtCore.QRect(0, 0, 880, 451))
            self.SearchReceiveOrderNumberFrame.setGeometry(
                QtCore.QRect(10, 10, 861, 35))
            self.SearchReceiveOrderNumberComboBox.setGeometry(
                QtCore.QRect(10, 2, 841, 31))
            self.SearchReceiveOrderNumberTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 341))
            self.SearchReceiveOrderNumberSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.CurrentInventoryListTableWidget.setGeometry(
                QtCore.QRect(10, 50, 861, 391))
            self.CurrentStockFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.SearchInventoryFrame.setGeometry(
                QtCore.QRect(10, 10, 861, 35))
            self.SearchInventoryLineEdit.setGeometry(
                QtCore.QRect(46, 3, 811, 31))
            self.InventorySearchPushButton.setGeometry(
                QtCore.QRect(10, 5, 24, 24))
            self.InventoryFrameTitle.setGeometry(QtCore.QRect(10, 9, 363, 35))
            self.InventoryLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.MessagesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.MessagesFrameTitle.setGeometry(QtCore.QRect(10, 9, 879, 38))
            self.MessagesLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.MessagesShowFrame.setGeometry(QtCore.QRect(10, 47, 881, 450))
            self.NotificationsTableWidget.setGeometry(
                QtCore.QRect(10, 10, 861, 431))
            self.SettingsFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.SettingsTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
            self.UserTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.SettingsUsersAddMinusFrame.setGeometry(
                QtCore.QRect(10, 360, 861, 31))
            self.SettingsUsersMinusPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsUsersAddPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.DisableRegisteringNewAccountCheckBox.setGeometry(
                QtCore.QRect(445, 10, 410, 20))
            self.SettingsUserSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.SettingsUserTableWidget.setGeometry(
                QtCore.QRect(10, 10, 861, 351))
            self.PreferencesFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
            self.SettingsPreferencesAToolBox.setGeometry(
                QtCore.QRect(10, 10, 420, 381))
            self.CarrierPage.setGeometry(QtCore.QRect(0, 0, 420, 253))
            self.SettingsCarrierFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusCarrierPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddCarrierPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsCarrierTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.LocationPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsLocationFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusLocationPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddLocationPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsLocationTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.DiscountPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsDiscountFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusDiscountPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddDiscountPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsDiscountTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.MeasurementPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsMeasurementFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 65))
            self.SettingsMinusMeasurementPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddMeasurementPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsMeasurementTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.SettingsPreferencesBToolBox.setGeometry(
                QtCore.QRect(450, 10, 420, 381))
            self.PaymentMethodPage.setGeometry(QtCore.QRect(0, 0, 420, 253))
            self.SettingsPayMethodFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusPayMethodPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddPayMethodPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsPayMethodTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.PaymentTermPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsPayTermFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusPayTermPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddPayTermPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsPayTermTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.CategoryPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsCategoryFrame.setGeometry(
                QtCore.QRect(0, 210, 420, 60))
            self.SettingsMinusCategoryPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddCategoryPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsCategoryTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.TaxingPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
            self.SettingsTaxingFrame.setGeometry(QtCore.QRect(0, 210, 420, 65))
            self.SettingsMinusTaxingPushButton.setGeometry(
                QtCore.QRect(40, 5, 20, 20))
            self.SettingsAddTaxingPushButton.setGeometry(
                QtCore.QRect(10, 5, 20, 20))
            self.SettingsTaxingTableWidget.setGeometry(
                QtCore.QRect(0, 0, 420, 211))
            self.SettingsReferenceSavePushButton.setGeometry(
                QtCore.QRect(10, 400, 861, 41))
            self.SettingsFrameTitle.setGeometry(QtCore.QRect(10, 9, 531, 35))
            self.SettingsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.AdminLoginAccountSettingsFrame.setGeometry(
                QtCore.QRect(10, 9, 881, 488))
            self.AdminLoginPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(251, 220, 350, 50))
            self.AdminLoginPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(105, 7, 231, 35))
            self.AdminLoginPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(5, 8, 90, 31))
            self.AdminLoginUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(251, 159, 350, 50))
            self.AdminLoginUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(105, 7, 231, 35))
            self.AdminLoginUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(5, 8, 90, 31))
            self.AdminLoginUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(600, 159, 50, 50))
            self.AdminLoginPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(600, 220, 50, 50))
            self.AdminValidateLoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(250, 298, 400, 41))
            self.AdminLoginLabel.setGeometry(QtCore.QRect(250, 110, 391, 21))
            self.AdminLoginErrorLabel.setGeometry(
                QtCore.QRect(250, 358, 540, 21))
            self.ReportsFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
            self.ReportsFrameTitle.setGeometry(QtCore.QRect(10, 9, 879, 38))
            self.ReportsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
            self.ReportsShowFrame.setGeometry(QtCore.QRect(10, 46, 881, 451))
            self.ReportsMenuFrame.setGeometry(QtCore.QRect(10, 10, 861, 431))
            self.ReportsSalesOrderSummaryPushButton.setGeometry(
                QtCore.QRect(0, 216, 215, 24))
            self.ReportsSalesOrderProfitPushButton.setGeometry(
                QtCore.QRect(0, 243, 215, 24))
            self.ReportsCustomerPaymentSummaryPushButton.setGeometry(
                QtCore.QRect(0, 270, 215, 24))
            self.ReportsCustomerPaymentDetailsPushButton.setGeometry(
                QtCore.QRect(0, 297, 215, 24))
            self.ReportsProductOrderedByCustomerPushButton.setGeometry(
                QtCore.QRect(0, 108, 215, 24))
            self.ReportsCustomerListPushButton.setGeometry(
                QtCore.QRect(0, 324, 215, 24))
            self.ReportsPurchaseOrderSummaryPushButton.setGeometry(
                QtCore.QRect(0, 352, 215, 24))
            self.ReportsPurchaseOrderDetailsPushButton.setGeometry(
                QtCore.QRect(0, 380, 215, 24))
            self.ReportsPurchaseOrderStatusPushButton.setGeometry(
                QtCore.QRect(0, 408, 215, 24))
            self.ReportsVendorPaymentDetailsPushButton.setGeometry(
                QtCore.QRect(0, 135, 215, 24))
            self.ReportsVendorProductListPushButton.setGeometry(
                QtCore.QRect(0, 162, 215, 24))
            self.ReportsVendorListPushButton.setGeometry(
                QtCore.QRect(0, 189, 215, 24))
            self.ReportsInventorySummaryPushButton.setGeometry(
                QtCore.QRect(0, 0, 215, 24))
            self.ReportsInventoryDetailsPushButton.setGeometry(
                QtCore.QRect(0, 27, 215, 24))
            self.ReportsInventoryByLocationPushButton.setGeometry(
                QtCore.QRect(0, 54, 215, 24))
            self.ReportsProductPriceListPushButton.setGeometry(
                QtCore.QRect(0, 81, 215, 24))
            self.ReportsInventorySummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsInventorySummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 0, 24, 24))
            self.ReportsInventorySummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsInventorySummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsInventorySummaryFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsInventorySummaryFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsInventorySummaryFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsInventorySummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 200, 345, 41))
            self.ReportsInventorySummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsInventoryDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsInventoryDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 27, 24, 24))
            self.ReportsInventoryDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsInventoryDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsInventoryDetailsFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsInventoryDetailsFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsInventoryDetailsFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsInventoryDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 240, 345, 41))
            self.ReportsInventoryDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsInventoryDetailsFilterByLocationComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsInventoryDetailsFilterByLocationLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsInventoryByLocationFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsInventoryByLocationFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 54, 24, 24))
            self.ReportsInventoryByLocationFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsInventoryByLocationFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsInventoryByLocationFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsInventoryByLocationFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsInventoryByLocationFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsInventoryByLocationFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 240, 345, 41))
            self.ReportsInventoryByLocationFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsInventoryByLocationFilterByLocationComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsInventoryByLocationFilterByLocationLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsProductPriceListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsProductPriceListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 81, 24, 24))
            self.ReportsProductPriceListFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsProductPriceListFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsProductPriceListFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsProductPriceListFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsProductPriceListFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsProductPriceListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 200, 345, 41))
            self.ReportsProductPriceListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsProductOrderedByCustomerFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsProductOrderedByCustomerFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 108, 24, 24))
            self.ReportsProductOrderedByCustomerFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsProductOrderedByCustomerFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsProductOrderedByCustomerFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsProductOrderedByCustomerFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsProductOrderedByCustomerFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsVendorPaymentDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsVendorPaymentDetailsArrowPushButton.setGeometry(
                QtCore.QRect(0, 135, 24, 24))
            self.ReportsVendorPaymentDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsVendorPaymentDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsVendorPaymentDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByVendorLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsVendorPaymentDetailsFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsVendorProductListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsVendorProductListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 162, 24, 24))
            self.ReportsVendorProductListFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsVendorProductListFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsVendorProductListFilterByVendorLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsVendorProductListFilterByVendorComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsVendorProductListFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsVendorProductListFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsVendorProductListFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsVendorProductListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 240, 345, 41))
            self.ReportsVendorProductListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsVendorListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsVendorListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 190, 24, 24))
            self.ReportsVendorListFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsVendorListFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsVendorListFilterByVendorCodeLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsVendorListFilterByVendorComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsVendorListFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsVendorListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 200, 345, 41))
            self.ReportsVendorListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsSalesOrderSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsSalesOrderSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 216, 24, 24))
            self.ReportsSalesOrderSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsSalesOrderSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 430, 21))
            self.ReportsSalesOrderSummaryFilterByCustomerLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsSalesOrderSummaryFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsSalesOrderSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsSalesOrderSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsSalesOrderSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsSalesOrderSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsSalesOrderSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsSalesOrderProfitFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsSalesOrderProfitFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 243, 24, 24))
            self.ReportsSalesOrderProfitFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsSalesOrderProfitFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsSalesOrderProfitFilterByCustomerLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsSalesOrderProfitFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsSalesOrderProfitFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsSalesOrderProfitFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsSalesOrderProfitFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsSalesOrderProfitFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsSalesOrderProfitFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsSalesOrderProfitFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsSalesOrderProfitFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsSalesOrderProfitFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsCustomerPaymentSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 270, 24, 24))
            self.ReportsCustomerPaymentSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setGeometry(
                QtCore.QRect(190, 95, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsCustomerPaymentDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 297, 24, 24))
            self.ReportsCustomerPaymentDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsCustomerListFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsCustomerListFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 324, 24, 24))
            self.ReportsCustomerListFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsCustomerListFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsCustomerListFilterByCustomerLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsCustomerListFilterByCustomerComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsCustomerListFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsCustomerListFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 200, 345, 41))
            self.ReportsCustomerListFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsPurchaseOrderSummaryFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsPurchaseOrderSummaryFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 352, 24, 24))
            self.ReportsPurchaseOrderSummaryFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsPurchaseOrderDetailsFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 380, 24, 24))
            self.ReportsPurchaseOrderDetailsFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsPurchaseOrderDetailsFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 320, 345, 41))
            self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setGeometry(
                QtCore.QRect(190, 240, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setGeometry(
                QtCore.QRect(340, 240, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setGeometry(
                QtCore.QRect(190, 280, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setGeometry(
                QtCore.QRect(340, 280, 195, 30))
            self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsPurchaseOrderStatusFilterFrame.setGeometry(
                QtCore.QRect(219, 0, 641, 431))
            self.ReportsPurchaseOrderStatusFilterArrowPushButton.setGeometry(
                QtCore.QRect(0, 408, 24, 24))
            self.ReportsPurchaseOrderStatusFilterTitleLabel.setGeometry(
                QtCore.QRect(190, 40, 420, 21))
            self.ReportsPurchaseOrderStatusFilterCategoryLabel.setGeometry(
                QtCore.QRect(190, 70, 420, 21))
            self.ReportsPurchaseOrderStatusFilterByVendorLabel.setGeometry(
                QtCore.QRect(190, 200, 150, 30))
            self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setGeometry(
                QtCore.QRect(340, 200, 195, 30))
            self.ReportsPurchaseOrderStatusFilterByLabel.setGeometry(
                QtCore.QRect(190, 130, 100, 21))
            self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setGeometry(
                QtCore.QRect(190, 240, 345, 41))
            self.ReportsPurchaseOrderStatusFilterSplitterFrame.setGeometry(
                QtCore.QRect(30, 0, 2, 431))
            self.ReportsPurchaseOrderStatusFilterByProductsLabel.setGeometry(
                QtCore.QRect(190, 160, 150, 30))
            self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setGeometry(
                QtCore.QRect(340, 160, 195, 30))
            self.ReportWebViewFrame.setGeometry(QtCore.QRect(10, 10, 861, 431))
            self.ReportWebViewBrowser.setGeometry(
                QtCore.QRect(0, 50, 861, 381))
            self.ReportNameLabel.setGeometry(QtCore.QRect(40, 12, 450, 21))
            self.BackToReportsMenuPushButton.setGeometry(
                QtCore.QRect(0, 10, 24, 24))
            self.ReportToExcelFrame.setGeometry(QtCore.QRect(770, 11, 24, 24))
            self.ReportToPDFFrame.setGeometry(QtCore.QRect(660, 11, 24, 24))
            self.ReportToExcelPushButton.setGeometry(
                QtCore.QRect(760, 6, 101, 35))
            self.ReportToPDFPushButton.setGeometry(
                QtCore.QRect(650, 6, 101, 35))
            self.LeftFrame.setGeometry(QtCore.QRect(0, 0, 81, 610))
            self.HighlightingFrameTitle.setGeometry(
                QtCore.QRect(0, 73, 81, 63))
            self.VendorLogoPushButton.setGeometry(QtCore.QRect(0, 73, 81, 63))
            self.PurchaseLogoPushButton.setGeometry(
                QtCore.QRect(0, 136, 81, 63))
            self.InventoryLogoPushButton.setGeometry(
                QtCore.QRect(0, 199, 81, 63))
            self.SaleLogoPushButton.setGeometry(QtCore.QRect(0, 262, 81, 63))
            self.CustomerLogoPushButton.setGeometry(
                QtCore.QRect(0, 325, 81, 63))
            self.NotificationLogoPushButton.setGeometry(
                QtCore.QRect(0, 388, 81, 63))
            self.SettingLogoPushButton.setGeometry(
                QtCore.QRect(0, 451, 81, 63))
            self.ReportsLogoPushButton.setGeometry(
                QtCore.QRect(0, 514, 81, 66))
            self.DashboardLogoPushButton.setGeometry(
                QtCore.QRect(0, 0, 81, 73))
            self.ContextMenuCoverFrame.setGeometry(
                QtCore.QRect(0, 0, 980, 610))
            self.DialogBoxCoverFrame.setGeometry(QtCore.QRect(0, 0, 1274, 793))
            self.UserValidationFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
            self.ValidationLogoLabelLoginUI.setGeometry(
                QtCore.QRect(40, 230, 300, 111))
            self.ValidateClosePushButtonLoginUI.setGeometry(
                QtCore.QRect(946, 3, 24, 24))
            self.ValidateMinimizePushButtonLoginUI.setGeometry(
                QtCore.QRect(920, 3, 24, 24))
            self.ValidationSplitterLabelLoginUI.setGeometry(
                QtCore.QRect(390, 90, 2, 450))
            self.RegisterFrameLoginUI.setGeometry(
                QtCore.QRect(430, 150, 461, 421))
            self.SetupDatabaseFrame.setGeometry(
                QtCore.QRect(400, 100, 510, 421))
            self.BigRegisterFrameLabelLoginUI.setGeometry(
                QtCore.QRect(20, 0, 425, 360))
            self.ValidateRegisterPushButtonLoginUI.setGeometry(
                QtCore.QRect(31, 294, 400, 50))
            self.SignupEmailIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 85, 50, 48))
            self.SignupConfirmPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 225, 50, 48))
            self.SignupUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 15, 50, 48))
            self.SetupDatabaseHostIcon.setGeometry(
                QtCore.QRect(414, 61, 50, 48))
            self.SetupDatabaseUserIcon.setGeometry(
                QtCore.QRect(414, 201, 50, 48))
            self.SetupDatabasePasswordIcon.setGeometry(
                QtCore.QRect(414, 271, 50, 48))
            self.SetupDatabaseNameIcon.setGeometry(
                QtCore.QRect(414, 131, 50, 48))
            self.SignupPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 154, 350, 50))
            self.SignupPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.SignupEmailFrameLoginUI.setGeometry(
                QtCore.QRect(31, 84, 350, 50))
            self.SignupEmailLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupEmailLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.SignupUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(31, 14, 350, 50))
            self.SetupDatabaseHostFrame.setGeometry(
                QtCore.QRect(65, 60, 350, 50))
            self.SetupDatabaseUserFrame.setGeometry(
                QtCore.QRect(65, 200, 350, 50))
            self.SetupDatabasePasswordFrame.setGeometry(
                QtCore.QRect(65, 270, 350, 50))
            self.SetupDatabasePushButton.setGeometry(
                QtCore.QRect(65, 340, 400, 50))
            self.SetupDatabaseNameFrame.setGeometry(
                QtCore.QRect(65, 130, 350, 50))
            self.SignupUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabaseHostLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabaseUserLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabaseNameLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SetupDatabasePasswordLineEdit.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.SetupDatabaseHostLabel.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.SignupConfirmPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 224, 350, 50))
            self.SignupConfirmPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.SignupConfirmPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.SignupPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 155, 50, 48))
            self.RegisterErrorLabelLoginUI.setGeometry(
                QtCore.QRect(20, 364, 421, 20))
            self.RegisterFrameCoverLoginUI.setGeometry(
                QtCore.QRect(100, -1, 90, 10))
            self.LoginFrameLoginUI.setGeometry(
                QtCore.QRect(430, 150, 461, 421))
            self.BigLoginFrameLabelLoginUI.setGeometry(
                QtCore.QRect(20, 0, 425, 271))
            self.LoginPasswordFrameLoginUI.setGeometry(
                QtCore.QRect(31, 84, 350, 50))
            self.LoginPasswordLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.LoginPasswordLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.LoginUsernameFrameLoginUI.setGeometry(
                QtCore.QRect(31, 14, 350, 50))
            self.LoginUsernameLineEditLoginUI.setGeometry(
                QtCore.QRect(95, 7, 241, 35))
            self.LoginUsernameLabelLoginUI.setGeometry(
                QtCore.QRect(10, 8, 80, 35))
            self.LoginPasswordIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 85, 50, 48))
            self.ValidateLoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(30, 202, 400, 50))
            self.LoginUsernameIconLabelLoginUI.setGeometry(
                QtCore.QRect(380, 15, 50, 48))
            self.LoginForgotPasswordPushButtonLoginUI.setGeometry(
                QtCore.QRect(300, 150, 130, 25))
            self.LoginRemembermeCheckBoxLoginUI.setGeometry(
                QtCore.QRect(30, 150, 145, 25))
            self.LoginErrorLabelLoginUI.setGeometry(
                QtCore.QRect(20, 274, 421, 20))
            self.LoginFrameCoverLoginUI.setGeometry(
                QtCore.QRect(21, -1, 79, 10))
            self.LoginButtonFrameLabelLoginUI.setGeometry(
                QtCore.QRect(450, 110, 81, 41))
            self.LoginPushButtonLoginUI.setGeometry(
                QtCore.QRect(451, 120, 79, 21))
            self.SetupDatabaseLabel.setGeometry(QtCore.QRect(85, 15, 421, 20))
            self.RegisterPushButtonLoginUI.setGeometry(
                QtCore.QRect(531, 120, 89, 21))
            self.RegisterButtonFrameLabelLoginUI.setGeometry(
                QtCore.QRect(530, 110, 91, 41))
            self.LoginFrameUpCoverLoginUI.setGeometry(
                QtCore.QRect(451, 103, 79, 10))
            self.LoginFrameLeftCoverLoginUI.setGeometry(
                QtCore.QRect(442, 110, 10, 40))
            self.RegisterFrameUpCoverLoginUI.setGeometry(
                QtCore.QRect(531, 103, 90, 10))
            self.RegisterFrameRightCoverLoginUI.setGeometry(
                QtCore.QRect(618, 110, 10, 40))
            self.HomeFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
            self.HomeVendorsPushButton.setGeometry(
                QtCore.QRect(70, 160, 180, 180))
            self.HomePurchasesPushButton.setGeometry(
                QtCore.QRect(290, 160, 180, 180))
            self.HomeInventoryPushButton.setGeometry(
                QtCore.QRect(510, 160, 180, 180))
            self.HomeSalesPushButton.setGeometry(
                QtCore.QRect(730, 160, 180, 180))
            self.HomeCustomersPushButton.setGeometry(
                QtCore.QRect(70, 380, 180, 180))
            self.HomeMessagesPushButton.setGeometry(
                QtCore.QRect(290, 380, 180, 180))
            self.HomeSettingsPushButton.setGeometry(
                QtCore.QRect(510, 380, 180, 180))
            self.HomeReportsPushButton.setGeometry(
                QtCore.QRect(730, 380, 180, 180))
            self.HomeUserPictureLabel.setGeometry(
                QtCore.QRect(930, 15, 32, 32))
            self.HomeUserComboBox.setGeometry(QtCore.QRect(740, 20, 180, 30))
            self.HomeUserInfoFrame.setGeometry(QtCore.QRect(490, 15, 408, 41))
            self.HomeUserNameLabel.setGeometry(QtCore.QRect(100, 12, 301, 21))
            self.HomeHeaderLogoLabel.setGeometry(QtCore.QRect(68, 30, 251, 91))
            self.HomeHeaderTextLabel.setGeometry(QtCore.QRect(310, 63, 61, 31))
            self.ProductFrame.setGeometry(
                QtCore.QRect(int(203.5), 45, 573, 520))
            self.SelectItemsFrame.setGeometry(QtCore.QRect(325, 160, 330, 300))
            self.AddSaleProductAddToCart.setGeometry(
                QtCore.QRect(760, 3, 91, 100))

            self.SalesOrderDashboardLabel.setGeometry(
                QtCore.QRect(28, 288, 120, 20))
            self.SalesOrderDateDashboardComboBox.setGeometry(
                QtCore.QRect(748, 284, 160, 30))
            self.SalesOrderGraphwidget.setGeometry(
                QtCore.QRect(20, 328, 855, 155))
            self.SalesOrderMarginDashboardLabel.setGeometry(
                QtCore.QRect(15, 275, 867, 50))
            self.SalesOrderMarginDownDashboardLabel.setGeometry(
                QtCore.QRect(15, 320, 867, 168))
            self.ActiveProductsDashboardLabel.setGeometry(
                QtCore.QRect(646, 30, 235, 20))
            self.ActiveProductsGraphwidget.setGeometry(
                QtCore.QRect(648, 69, 231, 184))
            self.ActiveProductsMarginDashboardLabel.setGeometry(
                QtCore.QRect(645, 15, 237, 50))
            self.ActiveProductsMarginDownDashboardLabel.setGeometry(
                QtCore.QRect(645, 58, 237, 198))

            self.AddVendorProductTableWidget.horizontalHeader().setDefaultSectionSize(226)
            self.AddVendorProductTableWidget.horizontalHeader().setMinimumSectionSize(226)
            self.AddVendorProductTableWidget.verticalHeader().setVisible(False)
            self.AddVendorProductTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.VendorListTableWidget.horizontalHeader().setDefaultSectionSize(147)
            self.VendorListTableWidget.horizontalHeader().setMinimumSectionSize(147)
            self.VendorListTableWidget.verticalHeader().setVisible(False)
            self.VendorListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.AddPurchaseProductTableWidget.horizontalHeader().setDefaultSectionSize(215)
            self.AddPurchaseProductTableWidget.horizontalHeader().setMinimumSectionSize(215)
            self.AddPurchaseProductTableWidget.verticalHeader().setVisible(False)
            self.AddPurchaseProductTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.PurchaseListTableWidget.horizontalHeader().setDefaultSectionSize(150)
            self.PurchaseListTableWidget.horizontalHeader().setMinimumSectionSize(150)
            self.PurchaseListTableWidget.verticalHeader().setVisible(False)
            self.PurchaseListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.AddSaleProductTableWidget.horizontalHeader().setVisible(False)
            self.AddSaleProductTableWidget.horizontalHeader().setDefaultSectionSize(100)
            self.AddSaleProductTableWidget.horizontalHeader().setHighlightSections(False)
            self.AddSaleProductTableWidget.horizontalHeader().setMinimumSectionSize(100)
            self.AddSaleProductTableWidget.horizontalHeader().setSortIndicatorShown(False)
            self.AddSaleProductTableWidget.verticalHeader().setVisible(False)
            self.AddSaleProductTableWidget.verticalHeader().setMinimumSectionSize(60)
            self.SaleListTableWidget.horizontalHeader().setDefaultSectionSize(161)
            self.SaleListTableWidget.horizontalHeader().setMinimumSectionSize(161)
            self.SaleListTableWidget.verticalHeader().setVisible(False)
            self.SaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CustomerSaleListTableWidget.horizontalHeader().setDefaultSectionSize(147)
            self.CustomerSaleListTableWidget.horizontalHeader().setMinimumSectionSize(147)
            self.CustomerSaleListTableWidget.verticalHeader().setVisible(False)
            self.CustomerSaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CustomerListTableWidget.horizontalHeader().setDefaultSectionSize(188)
            self.CustomerListTableWidget.horizontalHeader().setMinimumSectionSize(188)
            self.CustomerListTableWidget.verticalHeader().setVisible(False)
            self.CustomerListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setDefaultSectionSize(144)
            self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setMinimumSectionSize(144)
            self.SearchReceiveOrderNumberTableWidget.verticalHeader().setVisible(False)
            self.SearchReceiveOrderNumberTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.CurrentInventoryListTableWidget.horizontalHeader().setDefaultSectionSize(161)
            self.CurrentInventoryListTableWidget.horizontalHeader().setMinimumSectionSize(161)
            self.CurrentInventoryListTableWidget.verticalHeader().setVisible(False)
            self.CurrentInventoryListTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.NotificationsTableWidget.horizontalHeader().setDefaultSectionSize(860)
            self.NotificationsTableWidget.horizontalHeader().setMinimumSectionSize(860)
            self.NotificationsTableWidget.verticalHeader().setVisible(False)
            self.NotificationsTableWidget.verticalHeader().setDefaultSectionSize(150)
            self.NotificationsTableWidget.verticalHeader().setMinimumSectionSize(150)
            self.SettingsUserTableWidget.horizontalHeader().setDefaultSectionSize(215)
            self.SettingsUserTableWidget.horizontalHeader().setMinimumSectionSize(215)
            self.SettingsUserTableWidget.verticalHeader().setVisible(False)
            self.SettingsUserTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsCarrierTableWidget.horizontalHeader().setVisible(False)
            self.SettingsCarrierTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsCarrierTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsCarrierTableWidget.verticalHeader().setVisible(False)
            self.SettingsCarrierTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsLocationTableWidget.horizontalHeader().setVisible(False)
            self.SettingsLocationTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsLocationTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsLocationTableWidget.verticalHeader().setVisible(False)
            self.SettingsLocationTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsDiscountTableWidget.horizontalHeader().setVisible(False)
            self.SettingsDiscountTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsDiscountTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsDiscountTableWidget.verticalHeader().setVisible(False)
            self.SettingsDiscountTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsMeasurementTableWidget.horizontalHeader().setVisible(False)
            self.SettingsMeasurementTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsMeasurementTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsMeasurementTableWidget.verticalHeader().setVisible(False)
            self.SettingsMeasurementTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsPayMethodTableWidget.horizontalHeader().setVisible(False)
            self.SettingsPayMethodTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsPayMethodTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsPayMethodTableWidget.verticalHeader().setVisible(False)
            self.SettingsPayMethodTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsPayTermTableWidget.horizontalHeader().setVisible(False)
            self.SettingsPayTermTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsPayTermTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsPayTermTableWidget.verticalHeader().setVisible(False)
            self.SettingsPayTermTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsCategoryTableWidget.horizontalHeader().setVisible(False)
            self.SettingsCategoryTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsCategoryTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsCategoryTableWidget.verticalHeader().setVisible(False)
            self.SettingsCategoryTableWidget.verticalHeader().setMinimumSectionSize(30)
            self.SettingsTaxingTableWidget.horizontalHeader().setVisible(False)
            self.SettingsTaxingTableWidget.horizontalHeader().setDefaultSectionSize(420)
            self.SettingsTaxingTableWidget.horizontalHeader().setMinimumSectionSize(420)
            self.SettingsTaxingTableWidget.verticalHeader().setVisible(False)
            self.SettingsTaxingTableWidget.verticalHeader().setMinimumSectionSize(30)

            _translate = QtCore.QCoreApplication.translate
            self.ValidateMinimizePushButtonLoginUI.setToolTip(
                _translate("MyMainWindow", "Large View"))
            self.HomeUserComboBox.setItemText(
                2, _translate("MyMainWindow", "LARGE VIEW"))
            self.UserComboBox.setItemText(
                2, _translate("MyMainWindow", "LARGE VIEW"))

        global ControlRegister
        self.ChangeButtonColor(ControlRegister)

    # Process values using dictionaries.
    def GetValueEvents(self):

        SenderEvent = self.sender()

        global MyDictionary

        SenderID = SenderEvent.toolTip().split(" ")[1]
        SenderValue = SenderEvent.text()

        if SenderID in MyDictionary.keys():

            del MyDictionary[SenderID]

        MyDictionary[SenderID] = SenderValue

    # Search events.
    def SearchEvents(self, requester):

        SearchEvent = self.sender()

        if SearchEvent == None:

            SearchEvent = requester

        else:

            SearchEvent = SearchEvent.objectName()

        if SearchEvent == "VendorSearchPushButton":

            if self.SearchVendorLineEdit.text() != None:

                if self.SearchVendorLineEdit.text() != "":

                    self.LoadData("VenCode.VenName.VenPhone.VenEmail.VenAddress.VenDiscount.SearchQuery." +
                                  self.SearchVendorLineEdit.text(), "VendorListTableWidget")

        elif SearchEvent == "SearchProductDialogBoxPushButton":

            if self.SearchProductLineEdit.text() != None:

                if self.SearchProductLineEdit.text() != "":

                    if "Vendor" not in self.ProductResultLabel.text():

                        self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.None.None.None.EditNo.SearchQuery." +
                                      self.SearchProductLineEdit.text() + ".AddVendorProductPushButton", "ProductWidgetListTableWidget")

                    else:

                        self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text(
                        ) + ".EditNo.SearchQuery." + self.SearchProductLineEdit.text() + ".AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

        elif SearchEvent == "PurchaseSearchPushButton":

            if self.SearchPurchaseLineEdit.text() != None:

                if self.SearchPurchaseLineEdit.text() != "":

                    self.LoadData("PurCode.VenCode.PurDate.PurStatus.PurDueDate.PurShipDate.PurTotal.PurPaid.PurBalance.SearchQuery." +
                                  self.SearchPurchaseLineEdit.text(), "PurchaseListTableWidget")

        elif SearchEvent == "InventorySearchPushButton":

            if self.SearchInventoryLineEdit.text() != None:

                if self.SearchInventoryLineEdit.text() != "":

                    self.LoadData("ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.SearchQuery." +
                                  self.SearchInventoryLineEdit.text(), "CurrentInventoryListTableWidget")

        elif SearchEvent == "CustomerSearchPushButton":

            if self.SearchCustomerLineEdit.text() != None:

                if self.SearchCustomerLineEdit.text() != "":

                    self.LoadData("CusCode.CusName.CusPhone.CusEmail.CusAddress.CusDiscount.SearchQuery." +
                                  self.SearchCustomerLineEdit.text(), "CustomerListTableWidget")

        elif SearchEvent == "SaleSearchPushButton":

            if self.SearchSaleLineEdit.text() != None:

                if self.SearchSaleLineEdit.text() != "":

                    self.LoadData("SaleCode.CusCode.SaleDate.SaleTotal.SalePaid.SaleBal.PayMethod.SearchQuery." +
                                  self.SearchSaleLineEdit.text(), "SaleListTableWidget")

    # Clear searches.
    def ClearSearch(self):

        ClearEvent = self.sender()

        if ClearEvent.objectName() == "SearchVendorLineEdit":

            if self.SearchVendorLineEdit.text() == "":

                self.LoadData(
                    "VenCode.VenName.VenPhone.VenEmail.VenAddress.VenDiscount.NormalQuery.None", "VendorListTableWidget")

        elif ClearEvent.objectName() == "SearchProductLineEdit":

            if self.SearchProductLineEdit.text() == "":

                if "Vendor" not in self.ProductResultLabel.text():

                    self.LoadData(
                        "ProCode.ProName.ProCategory.ProMeasurement.None.None.None.EditNo.NormalQuery.None.AddVendorProductPushButton", "ProductWidgetListTableWidget")

                else:

                    self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text(
                    ) + ".EditNo.NormalQuery.None.AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

        elif ClearEvent.objectName() == "SearchPurchaseLineEdit":

            if self.SearchPurchaseLineEdit.text() == "":

                self.LoadData(
                    "PurCode.VenCode.PurDate.PurStatus.PurDueDate.PurShipDate.PurTotal.PurPaid.PurBalance.NormalQuery.None", "PurchaseListTableWidget")

        elif ClearEvent.objectName() == "SearchInventoryLineEdit":

            if self.SearchInventoryLineEdit.text() == "":

                self.LoadData("ProCode.ProName.ProCategory.ProPrice.ProLocation.ProLastVendor.UnitCost.ProQuantity.ProMeasurement.NormalQuery.None",
                              "CurrentInventoryListTableWidget")

        elif ClearEvent.objectName() == "SearchCustomerLineEdit":

            if self.SearchCustomerLineEdit.text() == "":

                self.LoadData(
                    "CusCode.CusName.CusPhone.CusEmail.CusAddress.CusDiscount.NormalQuery.None", "CustomerListTableWidget")

        elif ClearEvent.objectName() == "SearchSaleLineEdit":

            if self.SearchSaleLineEdit.text() == "":

                self.LoadData(
                    "SaleCode.CusCode.SaleDate.SaleTotal.SalePaid.SaleBal.PayMethod.NormalQuery.None", "SaleListTableWidget")

    # Show product widgets.
    def ShowProductWidgets(self):

        global Module
        Module = "ProductWidgetDialogBox"

        ProductWidgetCommand = self.sender()

        if ProductWidgetCommand.objectName() == "AddVendorProductPushButton" or ProductWidgetCommand.objectName() == "AddVendorProductToPurchasePushButton":

            self.DialogBoxCoverFrame.show()
            self.DialogBoxCoverFrame.raise_()
            self.ProductFrame.show()
            self.ProductFrame.raise_()
            self.ProductDialogClosePushButton.setText("CLOSE")

            if ProductWidgetCommand.objectName() == "AddVendorProductPushButton":

                self.LoadData(
                    "ProCode.ProName.ProCategory.ProMeasurement.None.None.None.EditNo.NormalQuery.None.AddVendorProductPushButton", "ProductWidgetListTableWidget")

            elif ProductWidgetCommand.objectName() == "AddVendorProductToPurchasePushButton":

                if self.AddPurchaseVendorIDLineEdit.text() == "---":

                    self.DialogBoxCoverFrame.hide()
                    self.ProductFrame.hide()

                    self.MessageBox("Please select a Vendor.",
                                    "OkType", "AlertStyle")

                else:

                    self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text(
                    ) + ".EditNo.NormalQuery.None.AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

        elif ProductWidgetCommand.objectName() == "ProductAddToVendorPushButton":

            ProductID = ProductWidgetCommand.toolTip().split(" ")[2]
            Requester = ProductWidgetCommand.toolTip().split(" ")[4]

            global MyDictionary

            resultlist = list()

            if ProductID in MyDictionary.keys():

                if MyDictionary[ProductID] != "" and float(MyDictionary[ProductID]) > 0.0:

                    conn = Database.ConnectDatabase()

                    cursor = conn.cursor()

                    cursor.execute(
                        "SELECT ProCode, ProName, ProCategory, ProMeasurement FROM Products WHERE ProCode = %s", (ProductID,))

                    result = cursor.fetchall()

                    if result:

                        for r in result:

                            code = r[0]
                            name = r[1]
                            category = r[2]
                            measurement = r[3]

                    pq = MyDictionary.get(ProductID)

                    if Requester == "Vendor":

                        resulttuple = (code, name, category, measurement, pq)

                    elif Requester == "Purchase":

                        cursor.execute("SELECT VenPrice FROM VendorProduct WHERE VenPro = %s", (
                            self.AddPurchaseVendorIDLineEdit.text() + ProductID,))

                        priceresult = cursor.fetchone()

                        pm = priceresult[0]

                        cursor.execute("SELECT VenDiscount FROM Vendors WHERE VenCode = %s",
                                       (self.AddPurchaseVendorIDLineEdit.text(),))

                        discountresult = cursor.fetchone()

                        cursor.execute("SELECT VenTaxing FROM Vendors WHERE VenCode = %s",
                                       (self.AddPurchaseVendorIDLineEdit.text(),))

                        taxresult = cursor.fetchone()

                        pd = discountresult[0].split(" %")[0]
                        pt = taxresult[0].split(" %")[0]

                        less = float(pm) * float(pd) / 100
                        add = float(pm) * float(pt) / 100
                        sub = float(pm) + float(add) - float(less)
                        subtotal = float(pq) * float(sub)

                        resulttuple = (code, name, category, pq, str(
                            pm) + " Per " + measurement, str(pd) + " %", str(pt) + " %", subtotal)

                    resultlist.append(resulttuple)

                    conn.close()

                    if Requester == "Vendor":

                        for i in range(self.AddVendorProductTableWidget.rowCount()):

                            itemcheck = self.AddVendorProductTableWidget.item(
                                i, 0)

                            if itemcheck != None:

                                if itemcheck != "":

                                    for j in resultlist:

                                        if j[0] == itemcheck.text():

                                            self.AddVendorProductTableWidget.removeRow(
                                                i)

                        self.AddVendorProductTableWidget.setSortingEnabled(
                            False)

                        for rownumber, rowdata in enumerate(resultlist):

                            self.AddVendorProductTableWidget.insertRow(
                                rownumber)

                            for columnnumber, data in enumerate(rowdata):

                                self.AddVendorProductTableWidget.setItem(
                                    rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                        for i in range(0, 5):

                            for j in range(self.AddVendorProductTableWidget.rowCount()):

                                item = self.AddVendorProductTableWidget.item(
                                    j, i)

                                if item != None:

                                    item.setTextAlignment(
                                        QtCore.Qt.AlignCenter)

                        self.AddVendorProductTableWidget.setSortingEnabled(
                            True)

                    elif Requester == "Purchase":

                        for i in range(self.AddPurchaseProductTableWidget.rowCount()):

                            itemcheck = self.AddPurchaseProductTableWidget.item(
                                i, 0)

                            if itemcheck != None:

                                if itemcheck != "":

                                    for j in resultlist:

                                        if j[0] == itemcheck.text():

                                            self.AddPurchaseProductTableWidget.removeRow(
                                                i)

                        self.AddPurchaseProductTableWidget.setSortingEnabled(
                            False)

                        for rownumber, rowdata in enumerate(resultlist):

                            self.AddPurchaseProductTableWidget.insertRow(
                                rownumber)

                            for columnnumber, data in enumerate(rowdata):

                                self.AddPurchaseProductTableWidget.setItem(
                                    rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                        total = 0

                        for i in range(0, 8):

                            for j in range(self.AddPurchaseProductTableWidget.rowCount()):

                                item = self.AddPurchaseProductTableWidget.item(
                                    j, i)

                                if item != None:

                                    item.setTextAlignment(
                                        QtCore.Qt.AlignCenter)

                                    if i == 7:

                                        total += float(item.text())

                        self.AddPurchaseTotalLineEdit.setText(str(total))
                        self.PurchaseBalance()

                        self.AddPurchaseProductTableWidget.setSortingEnabled(
                            True)

                    if self.ProductResultLabel.text() == ("1 Product") or self.ProductResultLabel.text() == ("1 Vendor Product"):

                        self.SearchProductLineEdit.setText("")
                        self.DialogBoxCoverFrame.hide()
                        self.ProductFrame.hide()
                        self.ProductWidgetListTableWidget.clearContents()
                        self.ProductWidgetListTableWidget.setRowCount(0)

                    else:

                        if Requester == "Vendor":

                            if self.SearchProductLineEdit.text() == "":

                                self.LoadData(
                                    "ProCode.ProName.ProCategory.ProMeasurement.None.None.None.EditNo.NormalQuery.None.AddVendorProductPushButton", "ProductWidgetListTableWidget")

                            else:

                                self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.None.None.None.EditNo.SearchQuery." +
                                              self.SearchProductLineEdit.text() + ".AddVendorProductPushButton", "ProductWidgetListTableWidget")

                        elif Requester == "Purchase":

                            if self.SearchProductLineEdit.text() == "":

                                self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text(
                                ) + ".EditNo.NormalQuery.None.AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

                            else:

                                self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text(
                                ) + ".EditNo.SearchQuery." + self.SearchProductLineEdit.text() + ".AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

                    MyDictionary = {}

        elif ProductWidgetCommand.objectName() == "ProductDialogClosePushButton":

            self.SearchProductLineEdit.setText("")
            self.DialogBoxCoverFrame.hide()
            self.ProductFrame.hide()
            self.ProductWidgetListTableWidget.clearContents()
            self.ProductWidgetListTableWidget.setRowCount(0)

            MyDictionary = {}

            global PreviousModule
            Module = PreviousModule

    # Events when cell item double cliked.
    def DoubleClickedCellItem(self, requester):

        WhatTable = self.sender()

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if WhatTable.objectName() == "VendorListTableWidget" or requester == "ContextMenuVendorListTableWidget":

            rownumber = self.VendorListTableWidget.currentItem().row()
            vendorid = self.VendorListTableWidget.item(rownumber, 0).text()
            self.VendorTabWidget.setCurrentWidget(self.AddVendorTab)

            cursor.execute(
                "SELECT * FROM Vendors WHERE VenCode = %s", (vendorid,))

            result = cursor.fetchall()

            if result:

                self.AddVendorProductTableWidget.clearContents()
                self.AddVendorProductTableWidget.setRowCount(0)

                for r in result:

                    self.AddVendorIDLineEdit.setText(r[0])
                    self.AddVendorNameLineEdit.setText(r[1])
                    self.AddVendorAddressLineEdit.setText(r[2])
                    self.AddVendorPhoneLineEdit.setText(r[3])
                    self.AddVendorEmailLineEdit.setText(r[4])
                    self.AddVendorPaymentTermComboBox.setCurrentText(r[5])
                    self.AddVendorDiscountComboBox.setCurrentText(r[6])
                    self.AddVendorCurrencyComboBox.setCurrentText(r[7])
                    self.AddVendorTaxingComboBox.setCurrentText(r[8])
                    self.AddVendorPaymentMethodComboBox.setCurrentText(r[9])
                    self.AddVendorCarrierComboBox.setCurrentText(r[10])
                    self.AddVendorRemarksLineEdit.setText(r[11])

            cursor.execute(
                "SELECT ProCode, VenPrice FROM VendorProduct WHERE VenCode = %s", (vendorid,))

            result = cursor.fetchall()
            itemlist = list()

            if result:

                for r in result:

                    venprice = r[1]

                    cursor.execute(
                        "SELECT ProCode, ProName, ProCategory, ProMeasurement FROM Products WHERE ProCode = %s", (r[0],))

                    results = cursor.fetchall()

                    for rs in results:

                        itemtuple = (rs[0], rs[1], rs[2], rs[3], r[1])
                        itemlist.append(itemtuple)

                self.AddVendorProductTableWidget.clearContents()
                self.AddVendorProductTableWidget.setSortingEnabled(False)
                self.AddVendorProductTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(itemlist):

                    self.AddVendorProductTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.AddVendorProductTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 5):

                    for j in range(self.AddVendorProductTableWidget.rowCount()):

                        item = self.AddVendorProductTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.AddVendorProductTableWidget.setSortingEnabled(True)

            if self.HomeUserNameLabel.text().split(":")[0] == "Administrator":

                self.AddVendorNameLineEdit.setReadOnly(False)

            else:

                self.AddVendorNameLineEdit.setReadOnly(True)

        elif WhatTable.objectName() == "AddVendorProductTableWidget" or requester == "ContextMenuAddVendorProductTableWidget":

            row = self.AddVendorProductTableWidget.currentRow()
            cell = self.AddVendorProductTableWidget.item(row, 0)

            self.DialogBoxCoverFrame.show()
            self.DialogBoxCoverFrame.raise_()
            self.ProductFrame.show()
            self.ProductFrame.raise_()

            self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.None.None.None." + cell.text(
            ) + ".NormalQuery.None.AddVendorProductPushButton", "ProductWidgetListTableWidget")

        elif WhatTable.objectName() == "PurchaseListTableWidget" or requester == "ContextMenuPurchaseListTableWidget":

            rownumber = self.PurchaseListTableWidget.currentItem().row()
            purchaseid = self.PurchaseListTableWidget.item(rownumber, 0).text()
            self.PurchaseTabWidget.setCurrentWidget(self.NewPurchaseTab)

            cursor.execute(
                "SELECT * FROM Purchases WHERE PurCode = %s", (purchaseid,))

            result = cursor.fetchall()

            if result:

                for r in result:

                    cursor.execute(
                        "SELECT VenName FROM Vendors WHERE VenCode = %s", (r[1],))

                    resultcode = cursor.fetchall()

                    if resultcode:

                        for rcode in resultcode:

                            vendorname = rcode[0]

                    self.AddPurchaseVendorIDLineEdit.setText(r[1])
                    self.AddPurchaseVendorNameComboBox.setEnabled(False)
                    self.AddPurchaseVendorNameComboBox.setCurrentText(
                        vendorname)
                    self.AddPurchaseDateLineEdit.setText(str(r[2]))
                    self.AddPurchaseStatusComboBox.clear()
                    self.AddPurchaseStatusComboBox.addItem(r[3])
                    self.AddPurchaseStatusComboBox.setCurrentText(r[3])
                    self.AddPurchaseDueDateDateEdit.setDate(
                        QtCore.QDate.fromString(str(r[4]), "yyyy-MM-dd"))
                    self.AddPurchaseRequestShipDateDateEdit.setDate(
                        QtCore.QDate.fromString(str(r[5]), "yyyy-MM-dd"))
                    self.AddPurchaseRemarksLineEdit.setText(r[6])
                    self.AddPurchaseTotalLineEdit.setText(str(r[7]))
                    self.AddPurchasePaidLineEdit.setText(str(r[8]))
                    self.AddPurchaseBalanceLineEdit.setText(str(r[9]))
                    self.AddPurchaseOrderNumberLineEdit.setText(r[0])

                    if r[3] == "New":

                        self.AddPurchaseStatusComboBox.addItem("Cancel")

                    elif r[3] == "Received":

                        self.AddPurchaseStatusComboBox.addItem("Close")

            cursor.execute(
                "SELECT ProCode FROM PurchaseProduct WHERE PurCode = %s", (purchaseid,))

            result = cursor.fetchall()
            itemlist = list()

            if result:

                for r in result:

                    cursor.execute("SELECT PurchaseProduct.ProCode, Products.ProName, Products.ProCategory, PurchaseProduct.ProQnty, PurchaseProduct.PurPrice, Products.ProMeasurement, PurchaseProduct.PurDiscount, PurchaseProduct.PurTax FROM Products INNER JOIN VendorProduct ON Products.ProCode = VendorProduct.Procode INNER JOIN PurchaseProduct ON Products.ProCode = PurchaseProduct.ProCode INNER JOIN Vendors ON VendorProduct.VenCode = Vendors.VenCode WHERE Products.ProCode = %s AND PurchaseProduct.PurCode =%s AND VendorProduct.VenCode = %s", (
                        r[0], purchaseid, self.AddPurchaseVendorIDLineEdit.text()))

                    results = cursor.fetchall()

                    for rs in results:

                        unitprice = str(rs[4]) + " Per " + str(rs[5])
                        dpercent = float(rs[6].split("%")[0]) / 100
                        discount = float(dpercent) * float(rs[4])
                        tpercent = float(rs[7].split("%")[0]) / 100
                        tax = float(tpercent) * float(rs[4])
                        sub = float(rs[4]) - float(discount) + float(tax)
                        subtotal = float(sub) * float(rs[3])

                        itemtuple = (rs[0], rs[1], rs[2], rs[3],
                                     unitprice, rs[6], rs[7], subtotal)
                        itemlist.append(itemtuple)

                self.AddPurchaseProductTableWidget.clearContents()
                self.AddPurchaseProductTableWidget.setSortingEnabled(False)
                self.AddPurchaseProductTableWidget.setRowCount(0)

                for rownumber, rowdata in enumerate(itemlist):

                    self.AddPurchaseProductTableWidget.insertRow(rownumber)

                    for columnnumber, data in enumerate(rowdata):

                        self.AddPurchaseProductTableWidget.setItem(
                            rownumber, columnnumber, QtWidgets.QTableWidgetItem(str(data)))

                for i in range(0, 8):

                    for j in range(self.AddPurchaseProductTableWidget.rowCount()):

                        item = self.AddPurchaseProductTableWidget.item(j, i)

                        if item != None:

                            item.setTextAlignment(QtCore.Qt.AlignCenter)

                self.AddPurchaseProductTableWidget.setSortingEnabled(True)

            if self.AddPurchaseStatusComboBox.currentText() == "Canceled" or self.AddPurchaseStatusComboBox.currentText() == "Closed":

                self.AddPurchaseDueDateDateEdit.setEnabled(False)
                self.AddPurchaseRequestShipDateDateEdit.setEnabled(False)
                self.AddPurchaseRemarksLineEdit.setReadOnly(True)
                self.AddPurchasePaidLineEdit.setReadOnly(True)

            else:

                self.AddPurchaseDueDateDateEdit.setEnabled(True)
                self.AddPurchaseRequestShipDateDateEdit.setEnabled(True)
                self.AddPurchaseRemarksLineEdit.setReadOnly(False)
                self.AddPurchasePaidLineEdit.setReadOnly(False)

            if self.AddPurchaseStatusComboBox.currentText() == "New":

                self.AddVendorProductToPurchasePushButton.setEnabled(True)

            else:

                self.AddVendorProductToPurchasePushButton.setEnabled(False)

        elif WhatTable.objectName() == "AddPurchaseProductTableWidget" or requester == "ContectMenuAddPurchaseProductTableWidget":

            if self.AddVendorProductToPurchasePushButton.isEnabled() == False:

                if self.AddPurchaseStatusComboBox.currentText() == "Received":

                    self.MessageBox(
                        "Cannot modify Received Purchase.", "OkType", "AlertStyle")

                elif self.AddPurchaseStatusComboBox.currentText() == "Closed":

                    self.MessageBox(
                        "Cannot modify Closed Purchase.", "OkType", "AlertStyle")

                elif self.AddPurchaseStatusComboBox.currentText() == "Canceled":

                    self.MessageBox(
                        "Cannot modify Canceled Purchase.", "OkType", "AlertStyle")

            else:

                row = self.AddPurchaseProductTableWidget.currentRow()
                cell = self.AddPurchaseProductTableWidget.item(row, 0)

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.ProductFrame.show()
                self.ProductFrame.raise_()

                self.LoadData("ProCode.ProName.ProCategory.ProMeasurement.VenPrice.VenCode." + self.AddPurchaseVendorIDLineEdit.text() + "." + cell.text(
                ) + ".NormalQuery." + self.SearchProductLineEdit.text() + ".AddVendorProductToPurchasePushButton", "ProductWidgetListTableWidget")

        elif WhatTable.objectName() == "CurrentInventoryListTableWidget" or requester == "ContextMenuCurrentInventoryListTableWidget":

            rownumber = self.CurrentInventoryListTableWidget.currentItem().row()
            productid = self.CurrentInventoryListTableWidget.item(
                rownumber, 0).text()
            self.InventoryTabWidget.setCurrentWidget(self.AddInventoryTab)

            cursor.execute(
                "SELECT * FROM Products WHERE ProCode = %s", (productid,))

            result = cursor.fetchall()

            if result:

                for r in result:

                    self.AddStockItemCodeLineEdit.setText(r[0])
                    self.AddStockItemNameLineEdit.setText(r[1])
                    self.AddStockItemCategoryComboBox.setCurrentText(r[2])
                    self.AddStockItemPriceLineEdit.setText(str(r[3]))
                    self.AddStockItemLocationComboBox.setCurrentText(r[4])
                    self.AddStockItemReorderPointLineEdit.setText(str(r[5]))
                    self.AddStockItemMeasurementComboBox.setCurrentText(r[6])
                    self.AddStockRemarksLineEdit.setText(r[7])

            if self.HomeUserNameLabel.text().split(":")[0] == "Administrator":

                self.AddStockItemNameLineEdit.setReadOnly(False)

            else:

                self.AddStockItemNameLineEdit.setReadOnly(True)

        elif WhatTable.objectName() == "CustomerListTableWidget" or requester == "ContextMenuCustomerListTableWidget":

            rownumber = self.CustomerListTableWidget.currentItem().row()
            customerid = self.CustomerListTableWidget.item(rownumber, 0).text()
            self.CustomerTabWidget.setCurrentWidget(self.AddCustomerTab)

            cursor.execute(
                "SELECT * FROM Customers WHERE CusCode = %s", (customerid,))

            result = cursor.fetchall()

            if result:

                for r in result:

                    self.AddCustomerIDLineEdit.setText(r[0])
                    self.AddCustomerNameLineEdit.setText(r[1])
                    self.AddCustomerAddressLineEdit.setText(r[2])
                    self.AddCustomerPhoneLineEdit.setText(r[3])
                    self.AddCustomerEmailLineEdit.setText(r[4])
                    self.AddCustomerPaymentTermComboBox.setCurrentText(r[5])
                    self.AddCustomerDiscountComboBox.setCurrentText(r[6])
                    self.AddCustomerCurrencyComboBox.setCurrentText(r[7])
                    self.AddCustomerTaxingComboBox.setCurrentText(r[8])
                    self.AddCustomerPaymentMethodComboBox.setCurrentText(r[9])
                    self.AddCustomerCarrierComboBox.setCurrentText(r[10])
                    self.AddCustomerRemarksLineEdit.setText(r[11])

            if self.HomeUserNameLabel.text().split(":")[0] == "Administrator":

                self.AddCustomerNameLineEdit.setReadOnly(False)

            else:

                self.AddCustomerNameLineEdit.setReadOnly(True)

            self.LoadData(customerid + ".", "CustomerSaleListTableWidget")

        elif requester == "ContextMenuAddSaleProductTableWidget":

            rownumber = self.AddSaleProductTableWidget.currentRow()

            self.AddSaleProductTableWidget.removeRow(rownumber)

            priceqty = 0.0
            subtotal = 0.0
            discount = 0.0
            tax = 0.0
            total = 0.0

            priceqty = float(self.AddSaleProductPriceLineEdit.text(
            )) * float(self.AddSaleProductQuantityLineEdit.text())

            for row in range(0, self.AddSaleProductTableWidget.rowCount()):

                if self.AddSaleProductTableWidget.item(row, 2) != None:

                    subtotal += float(self.AddSaleProductTableWidget.item(row, 2).text())

            discount = float(self.AddSaleDiscountLineEdit.text().split(" %")[
                             0]) / 100 * subtotal
            tax = float(self.AddSaleTaxLineEdit.text().split(
                " %")[0]) / 100 * subtotal

            total = subtotal + tax - discount

            self.AddSaleSubTotalLineEdit.setText(str(subtotal))
            self.AddSaleTotalLineEdit.setText(str(total))
            self.AddSaleCalcPaidLineEdit.setText(str(total))

            self.AddSalePaidLineEdit.setText(
                self.AddSaleCalcPaidLineEdit.text())

            self.AddSaleBalanceLineEdit.setText(str(float(
                self.AddSaleTotalLineEdit.text()) - float(self.AddSalePaidLineEdit.text())))
            if float(self.AddSaleBalanceLineEdit.text()) < 0:
                self.AddSaleBalanceLineEdit.setText("0.0")

            self.AddSaleChangeLineEdit.setText(str(float(
                self.AddSalePaidLineEdit.text()) - float(self.AddSaleTotalLineEdit.text())))
            if float(self.AddSaleChangeLineEdit.text()) < 0:
                self.AddSaleChangeLineEdit.setText("0.0")

        elif requester == "ContextMenuNotificationsTableWidget":

            rownumber = self.NotificationsTableWidget.currentItem().row()
            notiftext = self.NotificationsTableWidget.item(
                rownumber, 0).text().split(";")[1]
            notifdate = self.NotificationsTableWidget.item(
                rownumber, 0).text().split(";")[0]

            cursor.execute(
                "SELECT * FROM Notifications WHERE NotifText = %s AND NotifDate = %s", (notiftext.lstrip(), notifdate))

            result = cursor.fetchall()

            if result:

                cursor.execute(
                    "DELETE FROM Notifications WHERE NotifText = %s AND NotifDate = %s", (notiftext.lstrip(), notifdate))

                conn.commit()

                self.LoadData("NotifText.NotifDate",
                              "NotificationsTableWidget")
                self.MessageBox(
                    "Notification successfully deleted.", "OkType", "InfoStyle")

        conn.close()

    # Events when cell item cliked.
    def SingleClickedCellItem(self, requester):

        WhatTable = self.sender()

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if WhatTable.objectName() == "SearchReceiveOrderNumberTableWidget":

            row = self.SearchReceiveOrderNumberTableWidget.currentRow()

            self.SearchReceiveOrderNumberTableWidget.setCurrentCell(row, 5)
            self.SearchReceiveOrderNumberTableWidget.setEditTriggers(
                QtWidgets.QAbstractItemView.AnyKeyPressed)

        conn.close()

    # Custom context menus.
    def CustomContextMenus(self, event):

        WhatTable = self.sender()

        menu = QMenu(self)

        if WhatTable.objectName() == "VendorListTableWidget":

            row = self.VendorListTableWidget.rowAt(event.y())
            cell = self.VendorListTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuVendorListTableWidget")

        elif WhatTable.objectName() == "AddVendorProductTableWidget":

            row = self.AddVendorProductTableWidget.rowAt(event.y())
            cell = self.AddVendorProductTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")
                deleteAction = menu.addAction("Delete")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuAddVendorProductTableWidget")

                elif action == deleteAction:

                    selectedRow = self.AddVendorProductTableWidget.currentRow()

                    if selectedRow > -1:

                        self.AddVendorProductTableWidget.removeRow(selectedRow)

        elif WhatTable.objectName() == "PurchaseListTableWidget":

            row = self.PurchaseListTableWidget.rowAt(event.y())
            cell = self.PurchaseListTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuPurchaseListTableWidget")

        elif WhatTable.objectName() == "AddPurchaseProductTableWidget":

            row = self.AddPurchaseProductTableWidget.rowAt(event.y())
            cell = self.AddPurchaseProductTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")
                deleteAction = menu.addAction("Delete")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContectMenuAddPurchaseProductTableWidget")

                elif action == deleteAction:

                    selectedRow = self.AddPurchaseProductTableWidget.currentRow()

                    if selectedRow > -1:

                        self.AddPurchaseProductTableWidget.removeRow(
                            selectedRow)

                    total = 0

                    for i in range(0, 8):

                        for j in range(self.AddPurchaseProductTableWidget.rowCount()):

                            item = self.AddPurchaseProductTableWidget.item(
                                j, i)

                            if item != None:

                                item.setTextAlignment(QtCore.Qt.AlignCenter)

                                if i == 7:

                                    total += float(item.text())

                    self.AddPurchaseTotalLineEdit.setText(str(total))
                    self.PurchaseBalance()

        elif WhatTable.objectName() == "CurrentInventoryListTableWidget":

            row = self.CurrentInventoryListTableWidget.rowAt(event.y())
            cell = self.CurrentInventoryListTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuCurrentInventoryListTableWidget")

        elif WhatTable.objectName() == "CustomerListTableWidget":

            row = self.CustomerListTableWidget.rowAt(event.y())
            cell = self.CustomerListTableWidget.item(row, 0)

            if cell != None:

                editAction = menu.addAction("Edit")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == editAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuCustomerListTableWidget")

        elif WhatTable.objectName() == "AddSaleProductTableWidget":

            row = self.AddSaleProductTableWidget.rowAt(event.y())
            cell = self.AddSaleProductTableWidget.item(row, 0)

            if cell != None:

                deleteAction = menu.addAction("Delete")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == deleteAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuAddSaleProductTableWidget")

        elif WhatTable.objectName() == "NotificationsTableWidget":

            row = self.NotificationsTableWidget.rowAt(event.y())
            cell = self.NotificationsTableWidget.item(row, 0)

            if cell != None:

                deleteAction = menu.addAction("Delete")

                action = menu.exec_(QtGui.QCursor.pos())

                if action == deleteAction:

                    self.DoubleClickedCellItem(
                        "ContextMenuNotificationsTableWidget")

    # Tab bar events when tab clicked.
    def VendorTabWidgetTabBarEvent(self, index):

        if index == 0:

            self.AddVendorIDLineEdit.setText(
                str(Database.GenerateCode("Vendor")))
            self.AddVendorNameLineEdit.setReadOnly(False)
            self.AddVendorNameLineEdit.setText("")
            self.AddVendorAddressLineEdit.setText("")
            self.AddVendorPhoneLineEdit.setText("")
            self.AddVendorEmailLineEdit.setText("")
            self.LoadData(
                "PayTerm.Discount.Taxing.PayMethod.Carrier", "AddVendor")
            self.AddVendorRemarksLineEdit.setText("")
            self.AddVendorProductTableWidget.clearContents()
            self.AddVendorProductTableWidget.setRowCount(0)
            self.AddVendorCurrencyComboBox.setCurrentIndex(0)

    # Tab bar events when tab clicked.
    def CustomerTabWidgetTabBarEvent(self, index):

        if index == 0:

            self.AddCustomerIDLineEdit.setText(
                str(Database.GenerateCode("Customer")))
            self.AddCustomerNameLineEdit.setReadOnly(False)
            self.AddCustomerNameLineEdit.setText("")
            self.AddCustomerAddressLineEdit.setText("")
            self.AddCustomerPhoneLineEdit.setText("")
            self.AddCustomerEmailLineEdit.setText("")
            self.LoadData(
                "PayTerm.Discount.Taxing.PayMethod.Carrier", "AddCustomer")
            self.AddCustomerRemarksLineEdit.setText("")
            self.CustomerSaleListTableWidget.clearContents()
            self.CustomerSaleListTableWidget.setRowCount(0)
            self.AddCustomerCurrencyComboBox.setCurrentIndex(0)

    # Tab bar events when tab clicked.
    def PurchaseTabWidgetTabBarEvent(self, index):

        if index == 0:

            self.AddPurchaseVendorIDLineEdit.setText("---")
            self.AddPurchaseVendorNameComboBox.setEnabled(True)
            self.AddPurchaseVendorNameComboBox.setCurrentIndex(0)
            self.AddPurchaseOrderNumberLineEdit.setText(
                str(Database.GenerateCode("Purchase")))
            self.AddPurchaseStatusComboBox.clear()
            self.AddPurchaseStatusComboBox.addItem("New")
            self.AddPurchaseStatusComboBox.setCurrentText("New")
            self.AddPurchaseProductTableWidget.clearContents()
            self.AddPurchaseProductTableWidget.setRowCount(0)
            self.AddPurchaseCurrencyLineEdit.setText("")
            self.AddPurchaseRemarksLineEdit.setText("")
            self.AddPurchaseRemarksLineEdit.setReadOnly(False)
            self.AddPurchaseTotalLineEdit.setText("0.0")
            self.AddPurchasePaidLineEdit.setText("0.0")
            self.AddPurchasePaidLineEdit.setReadOnly(False)
            self.AddPurchaseBalanceLineEdit.setText("0.0")
            self.AddPurchaseDateLineEdit.setText(
                datetime.now().strftime("%d-%b-%y"))
            self.AddPurchaseDueDateDateEdit.setDateTime(
                QtCore.QDateTime.currentDateTime())
            self.AddPurchaseRequestShipDateDateEdit.setDateTime(
                QtCore.QDateTime.currentDateTime())

            self.AddVendorProductToPurchasePushButton.setEnabled(True)
            self.AddPurchaseDueDateDateEdit.setEnabled(True)
            self.AddPurchaseRequestShipDateDateEdit.setEnabled(True)

    # Tab bar events when tab clicked.
    def InventoryTabWidgetTabBarEvent(self, index):

        if index == 0:

            self.AddStockItemCodeLineEdit.setText(
                str(Database.GenerateCode("Product")))
            self.AddStockItemNameLineEdit.setText("")
            self.AddStockItemCategoryComboBox.setCurrentIndex(0)
            self.AddStockItemPriceLineEdit.setText("0.00")
            self.AddStockItemLocationComboBox.setCurrentText("")
            self.AddStockItemReorderPointLineEdit.setText("")
            self.AddStockItemMeasurementComboBox.setCurrentIndex(0)
            self.AddStockRemarksLineEdit.setText("")

    # Combobox selected item event.
    def ComboBoxEvents(self, requester, value):

        WhatComboBox = self.sender()
        global SelectedComboBox

        if WhatComboBox == None:

            WhatComboBox = requester

        else:

            WhatComboBox = WhatComboBox.objectName()

        if WhatComboBox == "AddPurchaseVendorNameComboBox":

            self.AddPurchaseVendorIDLineEdit.setText("---")
            self.AddPurchaseOrderNumberLineEdit.setText(
                str(Database.GenerateCode("Purchase")))
            self.AddPurchaseStatusComboBox.clear()
            self.AddPurchaseStatusComboBox.addItem("New")
            self.AddPurchaseStatusComboBox.setCurrentText("New")
            self.AddPurchaseProductTableWidget.clearContents()
            self.AddPurchaseProductTableWidget.setRowCount(0)
            self.AddPurchaseCurrencyLineEdit.setText("")
            self.AddPurchaseRemarksLineEdit.setText("")
            self.AddPurchaseTotalLineEdit.setText("0.0")
            self.AddPurchasePaidLineEdit.setText("0.0")
            self.AddPurchaseBalanceLineEdit.setText("0.0")

            if self.AddPurchaseVendorNameComboBox.currentText() != "":

                self.LoadData("VenCode.VenName.VenCurrency.SearchQuery." +
                              self.AddPurchaseVendorNameComboBox.currentText(), "AddPurchaseVendorNameComboBox")

            elif self.AddPurchaseVendorNameComboBox.currentText() == "":

                self.AddPurchaseVendorIDLineEdit.setText("---")
                self.AddPurchaseOrderNumberLineEdit.setText(
                    str(Database.GenerateCode("Purchase")))
                self.AddPurchaseStatusComboBox.clear()
                self.AddPurchaseStatusComboBox.addItem("New")
                self.AddPurchaseStatusComboBox.setCurrentText("New")
                self.AddPurchaseProductTableWidget.clearContents()
                self.AddPurchaseProductTableWidget.setRowCount(0)
                self.AddPurchaseCurrencyLineEdit.setText("")
                self.AddPurchaseRemarksLineEdit.setText("")
                self.AddPurchaseTotalLineEdit.setText("0.0")
                self.AddPurchasePaidLineEdit.setText("0.0")
                self.AddPurchaseBalanceLineEdit.setText("0.0")

        elif WhatComboBox == "SearchReceiveOrderNumberComboBox":

            self.SearchReceiveOrderNumberTableWidget.setRowCount(0)
            self.SearchReceiveOrderNumberTableWidget.clearContents()

            if self.SearchReceiveOrderNumberComboBox.currentText() != "":

                self.LoadData("PurCode.SearchQuery." + self.SearchReceiveOrderNumberComboBox.currentText(),
                              "SearchReceiveOrderNumberComboBox")

            elif self.SearchReceiveOrderNumberComboBox.currentText() == "":

                self.SearchReceiveOrderNumberTableWidget.setRowCount(0)
                self.SearchReceiveOrderNumberTableWidget.clearContents()

        elif WhatComboBox == "AddSaleCustomerNameComboBox":

            self.AddSaleProductCurrencyComboBox.clear()
            self.AddSaleProductPayMethodComboBox.clear()
            self.AddSaleDiscountLineEdit.setText("0 %")
            self.AddSaleTaxLineEdit.setText("0 %")

            comboboxdata = self.LoadData(
                "CusCode.CusName.SearchQuery", "AddSaleCustomerNameComboBox")

            self.AddSaleProductCurrencyComboBox.addItem(
                comboboxdata.split("&")[0])
            self.AddSaleProductPayMethodComboBox.addItem(
                comboboxdata.split("&")[1])
            self.AddSaleDiscountLineEdit.setText(comboboxdata.split("&")[2])
            self.AddSaleTaxLineEdit.setText(comboboxdata.split("&")[3])
            self.AddSaleProductCurrencyComboBox.setCurrentText(
                comboboxdata.split("&")[0])
            self.AddSaleProductPayMethodComboBox.setCurrentText(
                comboboxdata.split("&")[1])

            self.AddSaleProductTableWidget.clearContents()
            self.AddSaleProductTableWidget.setRowCount(0)

            self.AddSaleSubTotalLineEdit.setText("0.0")
            self.AddSaleTotalLineEdit.setText("0.0")
            self.AddSalePaidLineEdit.setText("0.0")
            self.AddSaleBalanceLineEdit.setText("0.0")
            self.AddSaleChangeLineEdit.setText("0.0")

        elif WhatComboBox == "AddSaleProductCodeComboBox":

            if self.AddSaleProductCodeComboBox.currentText() == "":

                self.AddSaleProductNameLineEdit.setText("---")
                self.AddSaleProductPriceLineEdit.setText("0.0")

            else:

                lineeditdata = self.LoadData(
                    "ProCode.SearchQuery", "AddSaleProductCodeComboBox")

                self.AddSaleProductNameLineEdit.setText(
                    lineeditdata.split("&")[0])
                self.AddSaleProductNameLineEdit.setToolTip(
                    lineeditdata.split("&")[0])
                self.AddSaleProductPriceLineEdit.setText(
                    lineeditdata.split("&")[2])

        elif WhatComboBox == "SelectItemsComboBox":

            if self.SelectItemsComboBox.currentIndex() != 0:

                x = 0

                if self.SelectItemsTableWidget.rowCount() > 0:

                    for row in range(self.SelectItemsTableWidget.rowCount()):

                        itemsearch = self.SelectItemsTableWidget.item(
                            row, 0).text()

                        if self.SelectItemsComboBox.currentText() == itemsearch:

                            x = 1
                            break

                        else:

                            x = 0

                if x == 0:

                    rowPosition = self.SelectItemsTableWidget.rowCount()

                    self.SelectItemsTableWidget.insertRow(rowPosition)
                    self.SelectItemsTableWidget.selectRow(rowPosition)

                    self.SelectItemsTableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(
                        self.SelectItemsComboBox.currentText()))

                self.SelectItemsComboBox.setCurrentIndex(0)

        elif WhatComboBox == "ReportsInventorySummaryFilterByProductsComboBox" or WhatComboBox == "ReportsInventoryDetailsFilterByProductsComboBox" or WhatComboBox == "ReportsInventoryByLocationFilterByProductsComboBox" or WhatComboBox == "ReportsProductPriceListFilterByProductsComboBox" or WhatComboBox == "ReportsProductOrderedByCustomerFilterByProductsComboBox" or WhatComboBox == "ReportsVendorProductListFilterByProductsComboBox" or WhatComboBox == "ReportsPurchaseOrderDetailsFilterByProductsComboBox" or WhatComboBox == "ReportsPurchaseOrderStatusFilterByProductsComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsInventorySummaryFilterByProductsComboBox":

                    SelectedComboBox = "ReportsInventorySummaryFilterByProductsComboBox"

                elif WhatComboBox == "ReportsInventoryDetailsFilterByProductsComboBox":

                    SelectedComboBox = "ReportsInventoryDetailsFilterByProductsComboBox"

                elif WhatComboBox == "ReportsInventoryByLocationFilterByProductsComboBox":

                    SelectedComboBox = "ReportsInventoryByLocationFilterByProductsComboBox"

                elif WhatComboBox == "ReportsProductPriceListFilterByProductsComboBox":

                    SelectedComboBox = "ReportsProductPriceListFilterByProductsComboBox"

                elif WhatComboBox == "ReportsProductOrderedByCustomerFilterByProductsComboBox":

                    SelectedComboBox = "ReportsProductOrderedByCustomerFilterByProductsComboBox"

                elif WhatComboBox == "ReportsVendorProductListFilterByProductsComboBox":

                    SelectedComboBox = "ReportsVendorProductListFilterByProductsComboBox"

                elif WhatComboBox == "ReportsPurchaseOrderDetailsFilterByProductsComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderDetailsFilterByProductsComboBox"

                elif WhatComboBox == "ReportsPurchaseOrderStatusFilterByProductsComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderStatusFilterByProductsComboBox"

                self.LoadData("ProCode.Products", "ReportsComboBox")

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = self.LoadData("ProCode.Products", "ReportsComboBox")

                if items:

                    for item in items:

                        data += item[0] + ","

                    if WhatComboBox == "ReportsInventorySummaryFilterByProductsComboBox":

                        self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsInventorySummaryFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsInventoryDetailsFilterByProductsComboBox":

                        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsInventoryDetailsFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsInventoryByLocationFilterByProductsComboBox":

                        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsInventoryByLocationFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsProductPriceListFilterByProductsComboBox":

                        self.ReportsProductPriceListFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsProductPriceListFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsProductOrderedByCustomerFilterByProductsComboBox":

                        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsVendorProductListFilterByProductsComboBox":

                        self.ReportsVendorProductListFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsVendorProductListFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsPurchaseOrderDetailsFilterByProductsComboBox":

                        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsPurchaseOrderStatusFilterByProductsComboBox":

                        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsInventoryDetailsFilterByLocationComboBox" or WhatComboBox == "ReportsInventoryByLocationFilterByLocationComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsInventoryDetailsFilterByLocationComboBox":

                    SelectedComboBox = "ReportsInventoryDetailsFilterByLocationComboBox"

                elif WhatComboBox == "ReportsInventoryByLocationFilterByLocationComboBox":

                    SelectedComboBox = "ReportsInventoryByLocationFilterByLocationComboBox"

                self.LoadData("ProLocation.Products", "ReportsComboBox")

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = self.LoadData(
                    "ProLocation.Products", "ReportsComboBox")

                if items:

                    for item in items:

                        data += item[0] + ","

                    if WhatComboBox == "ReportsInventoryDetailsFilterByLocationComboBox":

                        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
                            data)
                        self.ReportsInventoryDetailsFilterByLocationComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsInventoryByLocationFilterByLocationComboBox":

                        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
                            data)
                        self.ReportsInventoryByLocationFilterByLocationComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsProductOrderedByCustomerFilterByPayStatusComboBox" or WhatComboBox == "ReportsSalesOrderSummaryFilterByPayStatusComboBox" or WhatComboBox == "ReportsSalesOrderProfitFilterByPayStatusComboBox" or WhatComboBox == "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsProductOrderedByCustomerFilterByPayStatusComboBox":

                    SelectedComboBox = "ReportsProductOrderedByCustomerFilterByPayStatusComboBox"

                elif WhatComboBox == "ReportsSalesOrderSummaryFilterByPayStatusComboBox":

                    SelectedComboBox = "ReportsSalesOrderSummaryFilterByPayStatusComboBox"

                elif WhatComboBox == "ReportsSalesOrderProfitFilterByPayStatusComboBox":

                    SelectedComboBox = "ReportsSalesOrderProfitFilterByPayStatusComboBox"

                elif WhatComboBox == "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox":

                    SelectedComboBox = "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox"

                items = ["Fully Paid", "Partially Paid", "Unpaid"]

                self.SelectItemsComboBox.clear()
                self.SelectItemsComboBox.addItem("")

                for item in items:

                    self.SelectItemsComboBox.addItem(item)

                self.SelectItemsComboBox.setCurrentIndex(0)

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = ["Fully Paid", "Partially Paid", "Unpaid"]

                if items:

                    for item in items:

                        data += item + ","

                    if WhatComboBox == "ReportsProductOrderedByCustomerFilterByPayStatusComboBox":

                        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
                            data)
                        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsSalesOrderSummaryFilterByPayStatusComboBox":

                        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
                            data)
                        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsSalesOrderProfitFilterByPayStatusComboBox":

                        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
                            data)
                        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox":

                        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
                            data)
                        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsVendorPaymentDetailsFilterByVendorComboBox" or WhatComboBox == "ReportsVendorProductListFilterByVendorComboBox" or WhatComboBox == "ReportsVendorListFilterByVendorComboBox" or WhatComboBox == "ReportsPurchaseOrderSummaryFilterByVendorComboBox" or WhatComboBox == "ReportsPurchaseOrderStatusFilterByVendorComboBox" or WhatComboBox == "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsVendorPaymentDetailsFilterByVendorComboBox":

                    SelectedComboBox = "ReportsVendorPaymentDetailsFilterByVendorComboBox"

                elif WhatComboBox == "ReportsVendorProductListFilterByVendorComboBox":

                    SelectedComboBox = "ReportsVendorProductListFilterByVendorComboBox"

                elif WhatComboBox == "ReportsVendorListFilterByVendorComboBox":

                    SelectedComboBox = "ReportsVendorListFilterByVendorComboBox"

                elif WhatComboBox == "ReportsPurchaseOrderSummaryFilterByVendorComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderSummaryFilterByVendorComboBox"

                elif WhatComboBox == "ReportsPurchaseOrderStatusFilterByVendorComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderStatusFilterByVendorComboBox"

                elif WhatComboBox == "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox"

                self.LoadData("VenCode.Vendors", "ReportsComboBox")

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = self.LoadData("VenCode.Vendors", "ReportsComboBox")

                if items:

                    for item in items:

                        data += item[0] + ","

                    if WhatComboBox == "ReportsVendorPaymentDetailsFilterByVendorComboBox":

                        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
                            data)
                        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsVendorProductListFilterByVendorComboBox":

                        self.ReportsVendorProductListFilterByVendorComboBox.addItem(
                            data)
                        self.ReportsVendorProductListFilterByVendorComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsVendorListFilterByVendorComboBox":

                        self.ReportsVendorListFilterByVendorComboBox.addItem(
                            data)
                        self.ReportsVendorListFilterByVendorComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsPurchaseOrderSummaryFilterByVendorComboBox":

                        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsPurchaseOrderStatusFilterByVendorComboBox":

                        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox":

                        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsCustomerListFilterByCustomerComboBox" or WhatComboBox == "ReportsSalesOrderSummaryFilterByCustomerComboBox" or WhatComboBox == "ReportsSalesOrderProfitFilterByCustomerComboBox" or WhatComboBox == "ReportsCustomerPaymentSummaryFilterByCustomerComboBox" or WhatComboBox == "ReportsCustomerPaymentDetailsFilterByCustomerComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsCustomerListFilterByCustomerComboBox":

                    SelectedComboBox = "ReportsCustomerListFilterByCustomerComboBox"

                elif WhatComboBox == "ReportsSalesOrderSummaryFilterByCustomerComboBox":

                    SelectedComboBox = "ReportsSalesOrderSummaryFilterByCustomerComboBox"

                elif WhatComboBox == "ReportsSalesOrderProfitFilterByCustomerComboBox":

                    SelectedComboBox = "ReportsSalesOrderProfitFilterByCustomerComboBox"

                elif WhatComboBox == "ReportsCustomerPaymentSummaryFilterByCustomerComboBox":

                    SelectedComboBox = "ReportsCustomerPaymentSummaryFilterByCustomerComboBox"

                elif WhatComboBox == "ReportsCustomerPaymentDetailsFilterByCustomerComboBox":

                    SelectedComboBox = "ReportsCustomerPaymentDetailsFilterByCustomerComboBox"

                self.LoadData("CusCode.Customers", "ReportsComboBox")

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = self.LoadData("CusCode.Customers", "ReportsComboBox")

                if items:

                    for item in items:

                        data += item[0] + ","

                    if WhatComboBox == "ReportsCustomerListFilterByCustomerComboBox":

                        self.ReportsCustomerListFilterByCustomerComboBox.addItem(
                            data)
                        self.ReportsCustomerListFilterByCustomerComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsSalesOrderSummaryFilterByCustomerComboBox":

                        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
                            data)
                        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsSalesOrderProfitFilterByCustomerComboBox":

                        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
                            data)
                        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsCustomerPaymentSummaryFilterByCustomerComboBox":

                        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
                            data)
                        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsCustomerPaymentDetailsFilterByCustomerComboBox":

                        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
                            data)
                        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsVendorPaymentDetailsFilterByPayMethodComboBox" or WhatComboBox == "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsVendorPaymentDetailsFilterByPayMethodComboBox":

                    SelectedComboBox = "ReportsVendorPaymentDetailsFilterByPayMethodComboBox"

                elif WhatComboBox == "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox":

                    SelectedComboBox = "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox"

                self.LoadData("PayMethod.Settings", "ReportsComboBox")

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = self.LoadData("PayMethod.Settings", "ReportsComboBox")

                if items:

                    for item in items:

                        data += item[0] + ","

                    if WhatComboBox == "ReportsVendorPaymentDetailsFilterByPayMethodComboBox":

                        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
                            data)
                        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                            data)

                    elif WhatComboBox == "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox":

                        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
                            data)
                        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "ReportsPurchaseOrderSummaryFilterByStatusComboBox":

            if value == "Custom Select Items":

                self.DialogBoxCoverFrame.show()
                self.DialogBoxCoverFrame.raise_()
                self.SelectItemsFrame.show()
                self.SelectItemsFrame.raise_()

                if WhatComboBox == "ReportsPurchaseOrderSummaryFilterByStatusComboBox":

                    SelectedComboBox = "ReportsPurchaseOrderSummaryFilterByStatusComboBox"

                items = ["New", "Received", "Closed"]

                self.SelectItemsComboBox.clear()
                self.SelectItemsComboBox.addItem("")

                for item in items:

                    self.SelectItemsComboBox.addItem(item)

                self.SelectItemsComboBox.setCurrentIndex(0)

                self.SelectItemsTableWidget.clearContents()
                self.SelectItemsTableWidget.setRowCount(0)

            elif value == "All Items":

                data = ""
                items = ["New", "Received", "Closed"]

                if items:

                    for item in items:

                        data += item + ","

                    if WhatComboBox == "ReportsPurchaseOrderSummaryFilterByStatusComboBox":

                        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
                            data)
                        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setCurrentText(
                            data)

        elif WhatComboBox == "PurchaseOrderDateDashboardComboBox":

            self.LoadDashboardData("PurchaseOrderData")

        elif WhatComboBox == "SalesOrderDateDashboardComboBox":

            self.ShowSalesOrderChartData()

    # Change balance in Purcahse module.
    def PurchaseBalance(self):

        if self.AddPurchasePaidLineEdit.text() != "":

            self.AddPurchaseBalanceLineEdit.setText(str(float(
                self.AddPurchaseTotalLineEdit.text()) - float(self.AddPurchasePaidLineEdit.text())))

            if float(self.AddPurchaseBalanceLineEdit.text()) < 0:

                self.AddPurchaseBalanceLineEdit.setText("0.0")

        else:

            self.AddPurchaseBalanceLineEdit.setText(
                self.AddPurchaseTotalLineEdit.text())

    # Keypress digit.
    def DigitPressed(self, requester):

        try:

            button = self.sender()

            if button == None:

                button = requester

            else:

                button = button.text()

            if (('.' in self.AddSaleCalcPaidLineEdit.text()) and (button == "0")):

                newlabel = format(
                    self.AddSaleCalcPaidLineEdit.text() + button, '.15')

            else:

                newlabel = format(
                    float(self.AddSaleCalcPaidLineEdit.text() + button), '.15g')

            self.AddSaleCalcPaidLineEdit.setText(newlabel)
            self.AddSalePaidLineEdit.setText(
                self.AddSaleCalcPaidLineEdit.text())

            self.AddSaleBalanceLineEdit.setText(str(float(
                self.AddSaleTotalLineEdit.text()) - float(self.AddSalePaidLineEdit.text())))
            if float(self.AddSaleBalanceLineEdit.text()) < 0:
                self.AddSaleBalanceLineEdit.setText("0.0")

            self.AddSaleChangeLineEdit.setText(str(float(
                self.AddSalePaidLineEdit.text()) - float(self.AddSaleTotalLineEdit.text())))
            if float(self.AddSaleChangeLineEdit.text()) < 0:
                self.AddSaleChangeLineEdit.setText("0.0")

        except Exception as e:

            global Module
            Module = "Nothing"

            self.MessageBox("Maximum amount reach.", "OkType", "AlertStyle")
            self.AddSaleCalcPaidLineEdit.setText("0")

    # Decimal pressed.
    def DecimalPressed(self):

        if "." not in self.AddSaleCalcPaidLineEdit.text():

            self.AddSaleCalcPaidLineEdit.setText(
                self.AddSaleCalcPaidLineEdit.text() + '.')
            self.AddSalePaidLineEdit.setText(
                self.AddSaleCalcPaidLineEdit.text())

            self.AddSaleBalanceLineEdit.setText(str(float(
                self.AddSaleTotalLineEdit.text()) - float(self.AddSalePaidLineEdit.text())))
            if float(self.AddSaleBalanceLineEdit.text()) < 0:
                self.AddSaleBalanceLineEdit.setText("0.0")

            self.AddSaleChangeLineEdit.setText(str(float(
                self.AddSalePaidLineEdit.text()) - float(self.AddSaleTotalLineEdit.text())))
            if float(self.AddSaleChangeLineEdit.text()) < 0:
                self.AddSaleChangeLineEdit.setText("0.0")

    # Clear pressed.
    def ClearPressed(self):

        self.AddSaleCalcPaidLineEdit.setText("0")
        self.AddSalePaidLineEdit.setText(self.AddSaleCalcPaidLineEdit.text())

        self.AddSaleBalanceLineEdit.setText(str(float(
            self.AddSaleTotalLineEdit.text()) - float(self.AddSalePaidLineEdit.text())))
        if float(self.AddSaleBalanceLineEdit.text()) < 0:
            self.AddSaleBalanceLineEdit.setText("0.0")

        self.AddSaleChangeLineEdit.setText(str(float(
            self.AddSalePaidLineEdit.text()) - float(self.AddSaleTotalLineEdit.text())))
        if float(self.AddSaleChangeLineEdit.text()) < 0:
            self.AddSaleChangeLineEdit.setText("0.0")

    # Keypress events.
    def keyPressEvent(self, e):

        global Module

        if Module == "VendorLogoPushButton":

            if self.VendorTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("AddVendorSavePushButton")

            elif self.VendorTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SearchEvents("VendorSearchPushButton")

        elif Module == "PurchaseLogoPushButton":

            if self.PurchaseTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("AddPurchaseSavePushButton")

            elif self.PurchaseTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SearchEvents("PurchaseSearchPushButton")

        elif Module == "InventoryLogoPushButton":

            if self.InventoryTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("AddItemStockSavePushButton")

            elif self.InventoryTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("SearchReceiveOrderNumberSavePushButton")

            elif self.InventoryTabWidget.currentIndex() == 2:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SearchEvents("InventorySearchPushButton")

        elif Module == "SaleLogoPushButton":

            if self.SaleTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_1:
                    self.DigitPressed("1")
                elif e.key() == Qt.Key_2:
                    self.DigitPressed("2")
                elif e.key() == Qt.Key_3:
                    self.DigitPressed("3")
                elif e.key() == Qt.Key_4:
                    self.DigitPressed("4")
                elif e.key() == Qt.Key_5:
                    self.DigitPressed("5")
                elif e.key() == Qt.Key_6:
                    self.DigitPressed("6")
                elif e.key() == Qt.Key_7:
                    self.DigitPressed("7")
                elif e.key() == Qt.Key_8:
                    self.DigitPressed("8")
                elif e.key() == Qt.Key_9:
                    self.DigitPressed("9")
                elif e.key() == Qt.Key_0:
                    self.DigitPressed("0")
                elif e.key() == Qt.Key_Period:
                    self.DecimalPressed()
                elif e.key() == Qt.Key_C:
                    self.ClearPressed()
                elif e.key() == Qt.Key_A:
                    self.ButtonEvents("AddSaleProductAddToCart")
                elif e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("AddSaleChargePushButton")

            elif self.SaleTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SearchEvents("SaleSearchPushButton")

        elif Module == "CustomerLogoPushButton":

            if self.CustomerTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("AddCustomerSavePushButton")

            elif self.CustomerTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SearchEvents("CustomerSearchPushButton")

        elif Module == "ProductWidgetDialogBox":

            if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                self.SearchEvents("SearchProductDialogBoxPushButton")

        elif Module == "SettingLogoPushButton":

            if self.SettingsTabWidget.currentIndex() == 0:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("SettingsUserSavePushButton")

            elif self.SettingsTabWidget.currentIndex() == 1:

                if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                    self.SaveButton("SettingsReferenceSavePushButton")

        elif Module == "LogIn":

            if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                self.MainGUIUserLogin("ValidateLoginPushButtonLoginUI")

        elif Module == "Register":

            if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                self.MainGUIAddUser()

        elif Module == "AdminLogin":

            if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                self.MainGUIUserLogin("AdminValidateLoginPushButtonLoginUI")

        elif Module == "SetupDatabase":

            if e.key() == Qt.Key_Return or e.key() == Qt.Key_Enter:
                self.SetupDatabase()

        elif Module == "Nothing":

            pass

    # Event listener.
    def eventFilter(self, obj, event):

        if event.type() == QtCore.QEvent.KeyPress and obj is self.SelectItemsComboBox:

            if event.key() == QtCore.Qt.Key_Return and self.SelectItemsComboBox.hasFocus():

                self.ComboBoxEvents("SelectItemsComboBox", "None")

        return super().eventFilter(obj, event)

    # Initialize database.
    def InitializeDatabase(self):

        global Module
        global PreviousModule

        params = config()

        if params == "None":

            self.SetupDatabaseFrame.show()

        else:

            checkdb = Database.CheckDatabase()

            if checkdb == "existed":

                self.SetupDatabaseFrame.hide()

                Module = "LogIn"
                PreviousModule = Module

                self.AutoFillLogin()
                self.DisableRegisteringNewAccount()

            else:

                self.SetupDatabaseFrame.show()

    # Setup database.
    def SetupDatabase(self):

        global Module
        global PreviousModule

        if self.SetupDatabaseHostLineEdit.text() != "" and self.SetupDatabaseNameLineEdit.text() != "" and self.SetupDatabaseUserLineEdit.text() != "" and self.SetupDatabasePasswordLineEdit.text() != "":

            f = open("database.ini", "w", encoding="utf-8")
            f.write("[postgresql]\n" + "host=" + self.SetupDatabaseHostLineEdit.text() + "\n" + "database=postgres\n" +
                    "user=" + self.SetupDatabaseUserLineEdit.text() + "\n" + "password=" + self.SetupDatabasePasswordLineEdit.text())
            f.close()

            checkdb = Database.CheckDatabase()

            if checkdb == "Failed to connect to database.":

                self.MessageBox(
                    "User password authentication failed.", "OkType", "AlertStyle")
                self.SetupDatabaseFrame.show()

            else:

                if checkdb == "not existed":

                    Database.CreateDatabase()
                    Database.CreateDefaultUser(
                        "administrator", "DanialSoftPOS@123", "danialsoftpos@gmail.com", "Administrator")

                self.MessageBox("Database successfully created.",
                                "OkType", "InfoStyle")
                self.SetupDatabaseFrame.hide()

                Module = "LogIn"
                PreviousModule = Module

        else:

            self.MessageBox("Please fill all blank fields.",
                            "OkType", "AlertStyle")

    # initialize the window.
    def __init__(self, parent=None):

        super(MainGUI, self).__init__()

        global Module
        global PreviousModule

        Module = "SetupDatabase"
        PreviousModule = Module

        class ComboBoxLeaveEvents(QtWidgets.QComboBox):

            def __init__(self, parent=None):

                super(ComboBoxLeaveEvents, self).__init__(parent)
                self.installEventFilter(self)

            def eventFilter(self, object, event):

                if event.type() == QtCore.QEvent.WindowDeactivate or event.type() == QtCore.QEvent.FocusOut or event.type() == QtCore.QEvent.Leave:

                    items = []

                    for i in range(self.count()):

                        items.append(self.itemText(i).lower())

                    if self.currentText().lower() not in items:

                        self.setCurrentText("")

                return False

        # Setting window layout.
        self.setObjectName("MyMainWindow")
        self.setWindowModality(QtCore.Qt.NonModal)
        self.resize(980, 610)
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        self.setMinimumSize(QtCore.QSize(980, 610))
        self.setMaximumSize(QtCore.QSize(980, 610))
        self.setFocusPolicy(QtCore.Qt.ClickFocus)
        global ScreenSize
        ScreenSize = self.width()
        self.setStyleSheet("QFrame#MainFrame{background-color: rgb(189,195,199);border: none;}\n"
                           "QFrame#LeftFrame{background-color: rgb(30,30,30);border: none;}\n"
                           "QFrame#HeaderFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QLabel#HeaderLogoLabel{image: url(:/SoftLogo/Res/DSoft Logo.png);border: none;}\n"
                           "QLabel#HeaderTextLabel{color: rgb(255,255,255);}\n"
                           "QFrame#UserInfoFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QLabel#UserNameLabel{color: rgb(255,255,255);background-color: rgb(44,62,80);border: none;qproperty-alignment: AlignRight}\n"
                           "QLabel#UserPictureLabel{image: url(:/UserLoginImg/Res/loguser.png);background-color: rgb(44,62,80);border: none;}\n"
                           "QPushButton#DashboardLogoPushButton{background-image: url(:/DashboardImg/Res/dash.png);background-color: rgb(30,30,30);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#DashboardLogoPushButton:hover{background-image: url(:/DashboardImg/Res/dash.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#ReportsLogoPushButton{background-image: url(:/ReportsImg/Res/report.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#ReportsLogoPushButton:hover{background-image: url(:/ReportsImg/Res/report.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#VendorLogoPushButton{background-image: url(:/VendorImg/Res/vendor.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#VendorLogoPushButton:hover{background-image: url(:/VendorImg/Res/vendor.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#PurchaseLogoPushButton{background-image: url(:/PurchaseImg/Res/purchase.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#PurchaseLogoPushButton:hover{background-image: url(:/PurchaseImg/Res/purchase.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#InventoryLogoPushButton{background-image: url(:/InventoryImg/Res/inventory.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#InventoryLogoPushButton:hover{background-image: url(:/InventoryImg/Res/inventory.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#SaleLogoPushButton{background-image: url(:/SaleImg/Res/sale.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#SaleLogoPushButton:hover{background-image: url(:/SaleImg/Res/sale.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#CustomerLogoPushButton{background-image: url(:/CustomerImg/Res/customer.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#CustomerLogoPushButton:hover{background-image: url(:/CustomerImg/Res/customer.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#NotificationLogoPushButton{background-image: url(:/NotificationImg/Res/notification.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#NotificationLogoPushButton:hover{background-image: url(:/NotificationImg/Res/notification.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#SettingLogoPushButton{background-image: url(:/SettingImg/Res/setting.png);background-color: rgb(52,73,94);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#SettingLogoPushButton:hover{background-image: url(:/SettingImg/Res/setting.png);background-color: rgb(52,152,219);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QLabel#TimeTextLabel{color: rgb(241,196,15);qproperty-alignment: AlignRight}\n"
                           "QFrame#FooterFrame{background-color: rgb(30,30,30);border: none;}\n"
                           "QFrame#VendorFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SearchVendorFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#SearchVendorLineEdit{color: rgb(0,0,0);}\n"
                           "QLabel#VendorSearchLabel{image: url(:/LoupeImg/Res/loupe.png);}\n"
                           "QTableWidget#VendorListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTabWidget#VendorTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QTabBar::tab:first{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 66px;image: url(:/AddImg/Res/add.png);image-position: left center;background-repeat: no;}\n"
                           "QTabBar::tab:first:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}\n"
                           "QTabBar::tab:last{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 66px;image: url(:/ListImg/Res/list.png);image-position: left center;background-repeat: no;}\n"
                           "QTabBar::tab:last:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}\n"
                           "QFrame#AddTabFame{background-color: rgb(255,255,255);border: none;}\n"
                           "QLabel#AddVendorIDAndPictureLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorIDLabel{color: rgb(135,206,250);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorIDLineEdit{color: rgb(0,0,0);border: none;background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddVendorNameAndIDSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddVendorNameLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorNameLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorAddressLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorAddressLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorPhoneLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorPhoneLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorEmailLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorEmailLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddVendorPaymentTermComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorPaymentTermLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorDiscountComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorDiscountLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddVendorCurrencyComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorCurrencyLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddVendorTaxingComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorTaxingLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddVendorCarrierComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorCarrierLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddVendorPaymentMethodComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorPaymentMethodLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddVendorRemarksLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddVendorRemarksLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QTableWidget#AddVendorProductTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QPushButton#AddVendorProductPushButton{image: url(:/AddImg/Res/add.png);color: rgb(255,255,255);background-color: rgb(135,206,250);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddVendorProductPushButton:hover{image: url(:/AddImg/Res/add hover.png);color: rgb(255,255,255);background-color: rgb(135,206,250);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddVendorProductToPurchasePushButton{image: url(:/AddImg/Res/add.png);color: rgb(255,255,255);background-color: rgb(135,206,250);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddVendorProductToPurchasePushButton:hover{image: url(:/AddImg/Res/add hover.png);color: rgb(255,255,255);background-color: rgb(135,206,250);border: none;background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddVendorSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#AddVendorSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#PurchasesFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SearchPurchaseFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#SearchPurchaseLineEdit{color: rgb(0,0,0);}\n"
                           "QTableWidget#PurchaseListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTabWidget#PurchaseTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QFrame#AddPurchaseTabFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QLabel#AddPurchaseInfoLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddPurchaseVendorIDLineEdit{color: rgb(0,0,0);border: none;background-color: rgb(255,255,255);qproperty-alignment: AlignLeft;}\n"
                           "QLabel#AddPurchaseInfoSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseOrderNumberInfoSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseDateInfoSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseStatusInfoSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseOrderNumberTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddPurchaseDateTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddPurchaseStatusTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchaseOrderNumberLineEdit{color: rgb(0,0,0);border: none;background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchaseDateLineEdit{color: rgb(0,0,0);border: none;background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QTableWidget#AddPurchaseProductTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QLabel#AddPurchaseCurrencyTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchaseCurrencyLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseDueDateTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddPurchaseRequestShipDateTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddPurchaseRemarksTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QTextEdit#AddPurchaseRemarksLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseTotalTextLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchaseTotalLineEdit{color: rgb(0,0,0);border: 1px solid rgb(255,255,255);}\n"
                           "QLabel#AddPurchasePaidTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchasePaidLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddPurchaseBalanceTextLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddPurchaseBalanceLineEdit{color: red;border: 1px solid rgb(255,255,255);}\n"
                           "QLabel#AddPurchasePaymentInfoLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QPushButton#AddPurchaseSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#AddPurchaseSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#SalesFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SearchSaleFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#SearchSaleLineEdit{color: rgb(0,0,0);}\n"
                           "QTableWidget#SaleListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTableWidget#CustomerSaleListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTabWidget#SaleTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QFrame#AddSaleTabFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QTableWidget#AddSaleProductTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#AddSaleCustomerNameFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QLabel#AddSaleCustomerImageLabel{image: url(:/ProfileImg/Res/profile.png);border: none;background-color: rgb(135,206,250);border: 1px solid rgb(135,206,250);}\n"
                           "QFrame#AddSaleTotalFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QLabel#AddSaleSubTotalTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleDiscountTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleTaxTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleTotalTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSalePaidTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleBalanceTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleChangeTextLabel{background-color: rgb(255,255,255);color: rgb(0,0,0);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleSubTotalLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleDiscountLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleTaxLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleTotalLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSalePaidLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleBalanceLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleChangeLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(255,255,255);border-bottom: 1px solid rgb(135,206,250);}\n"
                           "QPushButton#AddSaleChargePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#AddSaleChargePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QLabel#AddSaleProductInfoFrameLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddSaleProductImageLabel{border: none;image: url(:/ShoppingBagImg/Res/shoppingbag.png);}\n"
                           "QLabel#AddSaleProductNameLineEdit{color: rgb(0,0,0);background-color: rgb(255,255,255);border: none;}\n"
                           "QLineEdit#AddSaleProductPriceLineEdit{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignLeft;border: none;}\n"
                           "QLineEdit#AddSaleProductCodeLabelLineEdit{background-color: rgb(135,206,250);color: rgb(255,255,255);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddSaleProductQuantityLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddSaleProductQuantityLabelLineEdit{background-color: rgb(135,206,250);color: rgb(255,255,255);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddSaleProductCurrencyLabelLineEdit{background-color: rgb(135,206,250);color: rgb(255,255,255);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddSaleProductPayMethodLabelLineEdit{background-color: rgb(135,206,250);color: rgb(255,255,255);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#AddSale1CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale1CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(155,89,182);}\n"
                           "QPushButton#AddSale2CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale2CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale3CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale3CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale4CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale4CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale5CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale5CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale6CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale6CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale7CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale7CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale8CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale8CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale9CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale9CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale0CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale0CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSale00CalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSale00CalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QPushButton#AddSaleDeleteCalPushButton{color: rgb(155,89,182);border: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QPushButton#AddSaleDeleteCalPushButton:hover{color: rgb(255,255,255);border: 1px solid rgb(142,68,173);background-color: rgb(142,68,173);}\n"
                           "QLabel#AddSaleTotalInfoFrameLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddSaleCalcPaidLineEdit{color: rgb(0,0,0);border: 3px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddSaleInvoiceInfoFrameLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QFrame#CustomerFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#DashboardFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SearchCustomerFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#SearchCustomerLineEdit{color: rgb(0,0,0);}\n"
                           "QLabel#CustomerSearchPushButton{image: url(:/LoupeImg/Res/loupe.png);}\n"
                           "QTableWidget#CustomerListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTabWidget#CustomerTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QFrame#AddCustomerTabFame{background-color: rgb(255,255,255);border: none;}\n"
                           "QLabel#AddCustomerIDAndPictureLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerIDLabel{color: rgb(135,206,250);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddCustomerIDLineEdit{color: rgb(0,0,0);border: none;background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddCustomerNameAndIDSplitterLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#AddCustomerNameLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerNameLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddCustomerAddressLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerAddressLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddCustomerPhoneLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerPhoneLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddCustomerEmailLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerEmailLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddCustomerPaymentTermComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerPaymentTermLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddCustomerDiscountComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerDiscountLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddCustomerCurrencyComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerCurrencyLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddCustomerTaxingComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerTaxingLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddCustomerCarrierComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerCarrierLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#AddCustomerPaymentMethodComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerPaymentMethodLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QTextEdit#AddCustomerRemarksLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddCustomerRemarksLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#AddCustomerSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#AddCustomerSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#InventoryFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SearchInventoryFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QLineEdit#SearchInventoryLineEdit{color: rgb(0,0,0);}\n"
                           "QLabel#InventorySearchPushButton{image: url(:/LoupeImg/Res/loupe.png);}\n"
                           "QTabWidget#InventoryTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QTableWidget#CurrentInventoryListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTableWidget#AddInventoryListTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#InventoryNewProductFrame{border: none;background-color: rgb(255,255,255)}\n"
                           "QLabel#AddStockItemCodeTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddStockItemCodeLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignLeft;}\n"
                           "QLabel#AddStockItemNameTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddStockItemNameLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignLeft;}\n"
                           "QLabel#AddStockItemCategoryTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddStockItemPriceTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddStockItemPriceLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignLeft;}\n"
                           "QLabel#AddStockItemLocationTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddStockItemReorderPointTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLineEdit#AddStockItemReorderPointLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignLeft;}\n"
                           "QLabel#AddStockItemRemarksTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QTextEdit#AddStockRemarksLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddStockItemMeasurementTextLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#AddStockItemPictureFrameTextLabel{border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#AddStockItemPictureFrameImage{border: none;image: url(:/ShoppingBagImg/Res/shoppingbag.png);}\n"
                           "QPushButton#AddItemStockSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#AddItemStockSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QPushButton#SelectItemsSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#SelectItemsSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QPushButton#SelectItemsCancelPushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#SelectItemsCancelPushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReceiveStockFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#CurrentStockFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#CustomerListFame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#SaleListFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#PurchaseListFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#VendorListFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#SettingsFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#SettingsLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#CustomerFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#CustomerLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#InventoryFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#InventoryLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#SaleFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#SaleLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#PurchaseFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#PurchaseLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#VendorFrameTitle{border-top: none;border-bottom: 0px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#VendorLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#MessagesFrameTitle{border-top: none;border-bottom: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#MessagesLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#ReportsFrameTitle{border-top: none;border-bottom: 1px solid rgb(142,68,173);background-color: rgb(255,255,255);}\n"
                           "QLabel#ReportsLabelTitle{color: rgb(142,68,173);}\n"
                           "QFrame#SearchReceiveOrderNumberFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QTableWidget#SearchReceiveOrderNumberTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QPushButton#SearchReceiveOrderNumberSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#SearchReceiveOrderNumberSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#MessagesFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#MessagesShowFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QTableWidget#NotificationsTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QTabWidget#SettingsTabWidget::pane{border-bottom: none;border-top: 1px solid rgb(142,68,173);}\n"
                           "QFrame#UserTabFame{border: none;background-color: rgb(255,255,255);}\n"
                           "QFrame#PreferencesFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QTableWidget#SettingsPayTermTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsPayTermFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddPayTermPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddPayTermPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusPayTermPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusPayTermPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsDiscountTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsDiscountFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddDiscountPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddDiscountPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusDiscountPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusDiscountPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsCategoryTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsCategoryFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddCategoryPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddCategoryPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusCategoryPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusCategoryPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsTaxingTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsTaxingFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddTaxingPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddTaxingPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusTaxingPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusTaxingPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsPayMethodTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QTableWidget#SelectItemsTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsPayMethodFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddPayMethodPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddPayMethodPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusPayMethodPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusPayMethodPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QPushButton#SelectItemsMinusPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SelectItemsMinusPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsCarrierTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsCarrierFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddCarrierPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddCarrierPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusCarrierPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusCarrierPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsMeasurementTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsMeasurementFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddMeasurementPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddMeasurementPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusMeasurementPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusMeasurementPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QTableWidget#SettingsLocationTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsLocationFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsAddLocationPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsAddLocationPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsMinusLocationPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsMinusLocationPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QPushButton#SettingsReferenceSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#SettingsReferenceSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QTableWidget#SettingsUserTableWidget{border: 1px solid rgb(135,206,250); background-color: rgb(245,245,245);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(126,255,245);color: rgb(0,0,0);alignment: center;}\n"
                           "QFrame#SettingsUsersAddMinusFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#SettingsUsersAddPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n"
                           "QPushButton#SettingsUsersAddPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}\n"
                           "QPushButton#SettingsUsersMinusPushButton{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign.png);}\n"
                           "QPushButton#SettingsUsersMinusPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/MinusSymbolImg/Res/minussign hover.png);}\n"
                           "QPushButton#SettingsUserSavePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#SettingsUserSavePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#ReportsShowFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderSummaryPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderSummaryPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderProfitPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderProfitPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentSummaryPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentSummaryPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentDetailsPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentDetailsPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductOrderedByCustomerPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductOrderedByCustomerPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerListPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerListPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderSummaryPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderSummaryPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderDetailsPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderDetailsPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderStatusPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderStatusPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorPaymentDetailsPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorPaymentDetailsPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorProductListPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorProductListPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorListPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorListPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductPriceListPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductPriceListPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryByLocationPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryByLocationPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryDetailsPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryDetailsPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventorySummaryPushButton{border: 0px;background-color: rgb(52,152,219);text-align: left;color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventorySummaryPushButton:hover{border: 0px;background-color: rgb(142,68,173);text-align: left;color: rgb(255,255,255);}\n"
                           "QFrame#ReportsMenuFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QLabel#ReportCategoryTextLabel{color: rgb(255,255,255);}\n"
                           "QFrame#ReportsInventorySummaryFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventorySummaryFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsInventorySummaryFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventorySummaryFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsInventorySummaryFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventorySummaryFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsInventorySummaryFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsInventorySummaryFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsInventorySummaryFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsInventoryDetailsFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryDetailsFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsInventoryDetailsFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryDetailsFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsInventoryDetailsFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryDetailsFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsInventoryDetailsFilterByLocationComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryDetailsFilterByLocationLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsInventoryDetailsFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsInventoryDetailsFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsInventoryDetailsFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsInventoryByLocationFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsInventoryByLocationFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsInventoryByLocationFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryByLocationFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsInventoryByLocationFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryByLocationFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsInventoryByLocationFilterByLocationComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsInventoryByLocationFilterByLocationLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsInventoryByLocationFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsInventoryByLocationFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsInventoryByLocationFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsProductPriceListFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductPriceListFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsProductPriceListFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsProductPriceListFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsProductPriceListFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsProductPriceListFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsProductPriceListFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsProductPriceListFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsProductPriceListFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsProductOrderedByCustomerFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsProductOrderedByCustomerFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsProductOrderedByCustomerFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsProductOrderedByCustomerFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsProductOrderedByCustomerFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsProductOrderedByCustomerFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsProductOrderedByCustomerFilterByPayStatusComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsProductOrderedByCustomerFilterByPayStatusLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsProductOrderedByCustomerFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsProductOrderedByCustomerFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsProductOrderedByCustomerFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsProductOrderedByCustomerFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsProductOrderedByCustomerFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsVendorPaymentDetailsFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorPaymentDetailsArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsVendorPaymentDetailsFilterByPayMethodComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorPaymentDetailsFilterByPayMethodLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsVendorPaymentDetailsFilterByVendorComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorPaymentDetailsFilterByVendorLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsVendorPaymentDetailsFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsVendorPaymentDetailsFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsVendorPaymentDetailsFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsVendorPaymentDetailsFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsVendorPaymentDetailsFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsVendorProductListFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorProductListFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsVendorProductListFilterByVendorComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorProductListFilterByVendorLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsVendorProductListFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorProductListFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsVendorProductListFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorProductListFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsVendorProductListFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsVendorProductListFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsVendorProductListFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsVendorListFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsVendorListFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsVendorListFilterByVendorComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsVendorListFilterByVendorCodeLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsVendorListFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsVendorListFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsVendorListFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsSalesOrderSummaryFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderSummaryFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsSalesOrderSummaryFilterByCustomerComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderSummaryFilterByCustomerLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsSalesOrderSummaryFilterByPayStatusComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QComboBox#SelectItemsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderSummaryFilterByPayStatusLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsSalesOrderSummaryFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsSalesOrderSummaryFilterByDateToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderSummaryFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsSalesOrderSummaryFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsSalesOrderSummaryFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsSalesOrderSummaryFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsSalesOrderProfitFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsSalesOrderProfitFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsSalesOrderProfitFilterByCustomerComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderProfitFilterByCustomerLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsSalesOrderProfitFilterByPayStatusComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderProfitFilterByPayStatusLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsSalesOrderProfitFilterByDateFromComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderProfitFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsSalesOrderProfitFilterByDateToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsSalesOrderProfitFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsSalesOrderProfitFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsSalesOrderProfitFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsSalesOrderProfitFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsCustomerPaymentSummaryFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentSummaryFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsCustomerPaymentSummaryFilterByCustomerComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentSummaryFilterByCustomerLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsCustomerPaymentSummaryFilterByPayStatusComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentSummaryFilterByPayStatusLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QLabel#ReportsCustomerPaymentSummaryFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsCustomerPaymentSummaryFilterByDateToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentSummaryFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsCustomerPaymentSummaryFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsCustomerPaymentSummaryFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsCustomerPaymentSummaryFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsCustomerPaymentDetailsFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerPaymentDetailsFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsCustomerPaymentDetailsFilterByCustomerComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentDetailsFilterByCustomerLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsCustomerPaymentDetailsFilterByPayMethodComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentDetailsFilterByPayMethodLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsCustomerPaymentDetailsFilterByPayFromComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentDetailsFilterByPayFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsCustomerPaymentDetailsFilterByPayToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerPaymentDetailsFilterByPayToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsCustomerPaymentDetailsFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsCustomerPaymentDetailsFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsCustomerPaymentDetailsFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsCustomerListFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsCustomerListFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsCustomerListFilterByCustomerComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsCustomerListFilterByCustomerLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsCustomerListFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsCustomerListFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsCustomerListFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderSummaryFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderSummaryFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsPurchaseOrderSummaryFilterByVendorComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderSummaryFilterByVendorLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderSummaryFilterByStatusComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderSummaryFilterByStatusLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderSummaryFilterByDateFromComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderSummaryFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderSummaryFilterByDateToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderSummaryFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsPurchaseOrderSummaryFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsPurchaseOrderSummaryFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderSummaryFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderDetailsFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderDetailsFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsPurchaseOrderDetailsFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderDetailsFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderDetailsFilterByCategoryComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderDetailsFilterByCategoryLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderDetailsFilterByVendorCodeLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderDetailsFilterByDateFromComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderDetailsFilterByDateFromLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderDetailsFilterByDateToComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderDetailsFilterByDateToLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsPurchaseOrderDetailsFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsPurchaseOrderDetailsFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderDetailsFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderStatusFilterFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#ReportsPurchaseOrderStatusFilterArrowPushButton{border: none; background-color: none;image: url(:/ArrowLeftImg/Res/arrowleft.png);}\n"
                           "QComboBox#ReportsPurchaseOrderStatusFilterByProductsComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderStatusFilterByProductsLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QComboBox#ReportsPurchaseOrderStatusFilterByVendorComboBox{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);}\n"
                           "QLabel#ReportsPurchaseOrderStatusFilterByVendorLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}\n"
                           "QPushButton#ReportsPurchaseOrderStatusFilterGeneratePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportsPurchaseOrderStatusFilterGeneratePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportsPurchaseOrderStatusFilterSplitterFrame{background-color: rgb(135,206,250);border: none;}\n"
                           "QPushButton#ReportToPDFPushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportToPDFPushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportToPDFFrame{image: url(:/PDFImg/Res/pdf.png);image-position: center center;background-color: none;border: none;}\n"
                           "QPushButton#ReportToExcelPushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#ReportToExcelPushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n"
                           "QFrame#ReportToExcelFrame{image: url(:/XLSImg/Res/xls.png);image-position: center center;background-color: none;border: none;}\n"
                           "QFrame#ReportWebViewFrame{border: none;background-color: rgb(255,255,255);}\n"
                           "QPushButton#BackToReportsMenuPushButton{border: none; background-color: none; image: url(:/MenuImg/Res/menunothover.png);}\n"
                           "QPushButton#BackToReportsMenuPushButton:hover{border: none; background-color: none; image: url(:/MenuImg/Res/menuhover.png);}\n"
                           "\n"
                           "QLabel#AdminLoginLabel{color: rgb(0,0,0);}\n"
                           "QFrame#AdminLoginAccountSettingsFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#AddVendorProductFrame{background-color: rgb(255,255,255);border: none;}\n"
                           "QFrame#AdminLoginUsernameFrameLoginUI{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QPushButton#AdminLoginUsernameLabelLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: none;}\n"
                           "QLineEdit#AdminLoginUsernameLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#AdminLoginUsernameIconLabelLoginUI{image: url(:/UserImg/Res/user.png);border: 1px solid rgb(135,206,250);background-color: rgb(135,206,250);}\n"
                           "QFrame#AdminLoginPasswordFrameLoginUI{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}\n"
                           "QPushButton#AdminLoginPasswordLabelLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: none;}\n"
                           "QLineEdit#AdminLoginPasswordLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#AdminLoginPasswordIconLabelLoginUI{image: url(:/LockImg/Res/padlock.png);border: 1px solid rgb(135,206,250);background-color: rgb(135,206,250);}\n"
                           "QPushButton#AdminValidateLoginPushButtonLoginUI{background-color: rgb(52,152,219);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#AdminValidateLoginPushButtonLoginUI:hover {background-color: rgb(142,68,173);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#SetupDatabasePushButton{background-color: rgb(52,152,219);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#SetupDatabasePushButton:hover {background-color: rgb(142,68,173);color: rgb(255,255,255);border: none;}\n"
                           "QLabel#AdminLoginErrorLabel{color: rgb(170, 85, 0);}\n"
                           "\n"
                           "QFrame#UserValidationFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QPushButton#LoginPushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#LoginPushButtonLoginUI:hover {background-color: rgb(44,62,80);color: rgb(52,152,219);border: none;}\n"
                           "QLabel#SetupDatabaseLabel{background-color: rgb(44,62,80);color: rgb(52,152,219);border: none;}\n"
                           "QPushButton#RegisterPushButtonLoginUI{background-color: rgb(44,62,80);color: rgba(52,152,219,0.3);border: none;}\n"
                           "QFrame#LoginUsernameFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#LoginUsernameLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#LoginUsernameLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#LoginUsernameIconLabelLoginUI{image: url(:/UserImg/Res/user.png);border: 1px inset white;}\n"
                           "QFrame#LoginPasswordFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#LoginPasswordLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#LoginPasswordLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#LoginPasswordIconLabelLoginUI{image: url(:/LockImg/Res/padlock.png);border: 1px inset white;}\n"
                           "QCheckBox#LoginRemembermeCheckBoxLoginUI{color: rgb(255,255,255);}\n"
                           "QPushButton#LoginForgotPasswordPushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#ValidateLoginPushButtonLoginUI{background-color: rgb(52,152,219);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#ValidateLoginPushButtonLoginUI:hover {background-color: rgb(142,68,173);color: rgb(255,255,255);border: none;}\n"
                           "QFrame#SignupUsernameFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QFrame#SetupDatabaseHostFrame{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QFrame#SetupDatabaseUserFrame{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QFrame#SetupDatabasePasswordFrame{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QFrame#SetupDatabaseNameFrame{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#SignupUsernameLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QPushButton#SetupDatabaseHostLabel{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QPushButton#SetupDatabaseUserLabel{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QPushButton#SetupDatabasePasswordLabel{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QPushButton#SetupDatabaseNameLabel{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#SignupUsernameLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLineEdit#SetupDatabaseHostLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLineEdit#SetupDatabaseUserLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLineEdit#SetupDatabasePasswordLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLineEdit#SetupDatabaseNameLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLineEdit#SetupDatabaseNameLineEdit{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#SignupUsernameIconLabelLoginUI{image: url(:/UserImg/Res/user.png);border: 1px inset white;}\n"
                           "QLabel#SetupDatabaseHostIcon{image: url(:/InternetImg/Res/internet.png);border: 1px inset white;}\n"
                           "QLabel#SetupDatabaseUserIcon{image: url(:/UserImg/Res/user.png);border: 1px inset white;}\n"
                           "QLabel#SetupDatabasePasswordIcon{image: url(:/LockImg/Res/padlock.png);border: 1px inset white;}\n"
                           "QLabel#SetupDatabaseNameIcon{image: url(:/DatabaseImg/Res/database.png);border: 1px inset white;}\n"
                           "QFrame#SignupPasswordFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#SignupPasswordLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#SignupPasswordLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#SignupPasswordIconLabelLoginUI{image: url(:/LockImg/Res/padlock.png);border: 1px inset white;}\n"
                           "QFrame#SignupEmailFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#SignupEmailLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#SignupEmailLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#SignupEmailIconLabelLoginUI{image: url(:/EmailImg/Res/envelope.png);border: 1px inset white;}\n"
                           "QFrame#SignupConfirmPasswordFrameLoginUI{background-color: rgb(255,255,255);border-color: rgb(127,140,141);}\n"
                           "QPushButton#SignupConfirmPasswordLabelLoginUI{background-color: rgb(255,255,255);color: rgb(127,140,141);border: none;}\n"
                           "QLineEdit#SignupConfirmPasswordLineEditLoginUI{background-color: rgb(255,255,255);color: rgb(0,0,0);border: 1px solid rgb(0,0,0);border-top-color: rgb(255,255,255);border-bottom-color: rgb(255,255,255);border-right-color: rgb(255,255,255);}\n"
                           "QLabel#SignupConfirmPasswordIconLabelLoginUI{image: url(:/LockImg/Res/padlock.png);border: 1px inset white;}\n"
                           "QPushButton#ValidateRegisterPushButtonLoginUI{background-color: rgb(52,152,219);color: rgb(255,255,255);border: none;}\n"
                           "QPushButton#ValidateRegisterPushButtonLoginUI:hover {background-color: rgb(142,68,173);color: rgb(255,255,255);border: none;}\n"
                           "QLabel#ValidationLogoLabelLoginUI{image: url(:/SoftLogo/Res/DSoft Logo.png);background-color: rgb(44,62,80);border: none;}\n"
                           "QPushButton#ValidateClosePushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(255,255,255);image: url(:/CloseImg/Res/close.png);border: none;}\n"
                           "QPushButton#ValidateMinimizePushButtonLoginUI{background-color: rgb(44,62,80);color: rgb(255,255,255);image: url(:/MinimizeImg/Res/minimize.png);border: none;}\n"
                           "QLabel#BigLoginFrameLabelLoginUI{border: 0px inset white;}\n"
                           "QLabel#BigRegisterFrameLabelLoginUI{border: 0px inset white;}\n"
                           "QLabel#LoginButtonFrameLabelLoginUI{border: 0px inset white;}\n"
                           "QLabel#RegisterButtonFrameLabelLoginUI{border: 0px inset white;}\n"
                           "QLabel#ValidationSplitterLabelLoginUI{background-color: rgb(255,62,80);}\n"
                           "QLabel#RegisterErrorLabelLoginUI{color: rgb(170, 85, 0);}\n"
                           "QLabel#LoginErrorLabelLoginUI{color: rgb(170, 85, 0);}\n"
                           "QFrame#RegisterFrameLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#SetupDatabaseFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#LoginFrameLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#LoginFrameCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#RegisterFrameCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#LoginFrameUpCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#LoginFrameLeftCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#RegisterFrameUpCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#RegisterFrameRightCoverLoginUI{background-color: rgb(44,62,80);border: none;}\n"
                           "\n"
                           "QLabel#HomeHeaderLogoLabel{image: url(:/SoftLogo/Res/DSoft Logo.png);border: none;}\n"
                           "QLabel#HomeHeaderTextLabel{color: rgb(255,255,255);}\n"
                           "QFrame#HomeUserInfoFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QLabel#HomeUserNameLabel{color: rgb(255,255,255);background-color: rgb(44,62,80);border: none;qproperty-alignment: AlignRight}\n"
                           "QLabel#HomeUserPictureLabel{image: url(:/UserLoginImg/Res/loguser.png);background-color: rgb(44,62,80);border: none;}\n"
                           "QFrame#HomeFrame{background-color: rgb(44,62,80);border: none;}\n"
                           "QPushButton#HomeVendorsPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homevendors.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeVendorsPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackvendors.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomePurchasesPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homepurchases.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomePurchasesPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackpurchases.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeInventoryPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homeinventory.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeInventoryPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackinventory.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeSalesPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homesales.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeSalesPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebacksales.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeCustomersPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homecustomers.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeCustomersPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackcustomers.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeMessagesPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homenotifications.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeMessagesPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackmessages.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddSaleProductAddToCart{border: none;text-align: bottom;background-color: none;color: rgb(52,152,219);background-image: url(:/AddToCart/Res/addtocart.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#AddSaleProductAddToCart:hover{border: none;text-align: bottom;background-color: none;color: rgb(142,68,173);background-image: url(:/AddToCart/Res/addtocarthover.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeSettingsPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homesettings.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeSettingsPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebacksettings.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeReportsPushButton{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homereports.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QPushButton#HomeReportsPushButton:hover{border: none;background-color: rgb(52,73,94);background-image: url(:/HomeButtonImg/Res/homebackreports.png);background-repeat:no-repeat;background-position:center center;}\n"
                           "QScrollBar:vertical {border: 1px solid #999999;background:white;width:10px;margin: 0px 0px 0px 0px;}\n"
                           "QScrollBar::handle:vertical {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0 rgb(135,206,250), stop: 0.5 rgb(135,206,250), stop:1 rgb(135,206,250));min-height: 0px;}\n"
                           "QScrollBar::add-line:vertical {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0 rgb(135,206,250), stop: 0.5 rgb(135,206,250),  stop:1 rgb(135,206,250));height: 0px;subcontrol-position: bottom;subcontrol-origin: margin;}\n"
                           "QScrollBar::sub-line:vertical {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0 rgb(135,206,250), stop: 0.5rgb(135,206,250),  stop:1 rgb(135,206,250));height: 0 px;subcontrol-position: top;subcontrol-origin: margin;}\n"
                           "QScrollBar:horizontal {border: 1px solid #999999;background:white;height:10px;margin: 0px 0px 0px 0px;}\n"
                           "QScrollBar::handle:horizontal {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0 rgb(135,206,250), stop: 0.5 rgb(135,206,250), stop:1 rgb(135,206,250));min-width: 0px;}\n"
                           "QScrollBar::add-line:horizontal {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0 rgb(135,206,250), stop: 0.5 rgb(135,206,250),  stop:1 rgb(135,206,250));width: 0px;subcontrol-position: right;subcontrol-origin: margin;}\n"
                           "QScrollBar::sub-line:horizontal {background: qlineargradient(x1:0, y1:0, x2:1, y2:0,stop: 0  rgb(135,206,250), stop: 0.5 rgb(135,206,250),  stop:1 rgb(135,206,250));width: 0 px;subcontrol-position: left;subcontrol-origin: margin;}")
        self.CentralWidget = QtWidgets.QWidget(self)
        self.CentralWidget.setMinimumSize(QtCore.QSize(980, 610))
        self.CentralWidget.setMaximumSize(QtCore.QSize(980, 610))
        self.CentralWidget.setObjectName("CentralWidget")
        self.MainFrame = QtWidgets.QFrame(self.CentralWidget)
        self.MainFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
        self.MainFrame.setMinimumSize(QtCore.QSize(980, 610))
        self.MainFrame.setMaximumSize(QtCore.QSize(980, 610))
        self.MainFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MainFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MainFrame.setObjectName("MainFrame")
        self.HeaderFrame = QtWidgets.QFrame(self.MainFrame)
        self.HeaderFrame.setGeometry(QtCore.QRect(80, 0, 900, 73))
        self.HeaderFrame.setMinimumSize(QtCore.QSize(900, 73))
        self.HeaderFrame.setMaximumSize(QtCore.QSize(900, 73))
        self.HeaderFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.HeaderFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.HeaderFrame.setObjectName("HeaderFrame")
        self.HeaderTextLabel = QtWidgets.QLabel(self.HeaderFrame)
        self.HeaderTextLabel.setGeometry(QtCore.QRect(120, 22, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.HeaderTextLabel.setFont(font)
        self.HeaderTextLabel.setObjectName("HeaderTextLabel")
        self.UserComboBox = QtWidgets.QComboBox(self.HeaderFrame)
        self.UserComboBox.setGeometry(QtCore.QRect(660, 20, 180, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.UserComboBox.setFont(font)
        self.UserComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.UserComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.UserComboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.UserComboBox.setStyleSheet("QComboBox {border: 1px solid rgb(44,62,80);background-color: rgb(44,62,80);padding: 0px 0px 0px 3px;min-width: 6em;color: red;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.UserComboBox.setEditable(False)
        self.UserComboBox.setObjectName("UserComboBox")
        self.UserComboBox.activated.connect(self.UserComboboxSelectItem)
        self.UserComboBox.addItem("")
        self.UserComboBox.addItem("")
        self.UserComboBox.addItem("")
        self.UserComboBox.addItem("")
        self.UserComboBox.addItem("")
        self.UserComboBox.addItem("")
        self.HeaderLogoLabel = QtWidgets.QLabel(self.HeaderFrame)
        self.HeaderLogoLabel.setGeometry(QtCore.QRect(0, 10, 131, 41))
        self.HeaderLogoLabel.setText("")
        self.HeaderLogoLabel.setObjectName("HeaderLogoLabel")
        self.UserInfoFrame = QtWidgets.QFrame(self.HeaderFrame)
        self.UserInfoFrame.setGeometry(QtCore.QRect(410, 15, 408, 41))
        self.UserInfoFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.UserInfoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.UserInfoFrame.setObjectName("UserInfoFrame")
        self.UserNameLabel = QtWidgets.QLabel(self.UserInfoFrame)
        self.UserNameLabel.setGeometry(QtCore.QRect(100, 12, 301, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.UserNameLabel.setFont(font)
        self.UserNameLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.UserNameLabel.setObjectName("UserNameLabel")
        self.UserPictureLabel = QtWidgets.QLabel(self.HeaderFrame)
        self.UserPictureLabel.setGeometry(QtCore.QRect(850, 15, 32, 32))
        self.UserPictureLabel.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.UserPictureLabel.setText("")
        self.UserPictureLabel.setObjectName("UserPictureLabel")
        self.FooterFrame = QtWidgets.QFrame(self)
        self.FooterFrame.setGeometry(QtCore.QRect(0, 579, 980, 31))
        self.FooterFrame.setMinimumSize(QtCore.QSize(980, 31))
        self.FooterFrame.setMaximumSize(QtCore.QSize(980, 31))
        self.FooterFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.FooterFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.FooterFrame.setObjectName("FooterFrame")
        self.FooterFrame.hide()
        self.TimeTextLabel = QtWidgets.QLabel(self.FooterFrame)
        self.TimeTextLabel.setGeometry(QtCore.QRect(660, 7, 300, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.TimeTextLabel.setFont(font)
        self.TimeTextLabel.setAlignment(QtCore.Qt.AlignRight)
        self.TimeTextLabel.setObjectName("TimeTextLabel")
        self.DialogCoverTimer = QtCore.QTimer(self)
        self.MyTimer = QtCore.QTimer(self)
        self.MyTimer.start(1000)
        self.MyTimer.timeout.connect(self.TimeNow)
        self.MyTimer.stop()
        self.VendorFrame = QtWidgets.QFrame(self.MainFrame)
        self.VendorFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.VendorFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.VendorFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.VendorFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.VendorFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.VendorFrame.setObjectName("VendorFrame")
        self.VendorTabWidget = QtWidgets.QTabWidget(self.VendorFrame)
        self.VendorTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.VendorTabWidget.setFont(font)
        self.VendorTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.VendorTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.VendorTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.VendorTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}")
        self.VendorTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.VendorTabWidget.setObjectName("VendorTabWidget")
        self.VendorTabWidget.tabBarClicked.connect(
            self.VendorTabWidgetTabBarEvent)
        self.AddVendorTab = QtWidgets.QWidget()
        self.AddVendorTab.setObjectName("AddVendorTab")
        self.AddTabFame = QtWidgets.QFrame(self.AddVendorTab)
        self.AddTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.AddTabFame.setStyleSheet("")
        self.AddTabFame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AddTabFame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddTabFame.setObjectName("AddTabFame")
        self.AddVendorProductTableWidget = QtWidgets.QTableWidget(
            self.AddTabFame)
        self.AddVendorProductTableWidget.setGeometry(
            QtCore.QRect(10, 220, 861, 171))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.AddVendorProductTableWidget.sizePolicy().hasHeightForWidth())
        self.AddVendorProductTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorProductTableWidget.setFont(font)
        self.AddVendorProductTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorProductTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorProductTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddVendorProductTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.AddVendorProductTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.AddVendorProductTableWidget.setAlternatingRowColors(True)
        self.AddVendorProductTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.AddVendorProductTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.AddVendorProductTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.AddVendorProductTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddVendorProductTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddVendorProductTableWidget.setShowGrid(False)
        self.AddVendorProductTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.AddVendorProductTableWidget.setWordWrap(False)
        self.AddVendorProductTableWidget.setCornerButtonEnabled(False)
        self.AddVendorProductTableWidget.setRowCount(0)
        self.AddVendorProductTableWidget.setObjectName(
            "AddVendorProductTableWidget")
        self.AddVendorProductTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.AddVendorProductTableWidget.setContextMenuPolicy(
            Qt.CustomContextMenu)
        self.AddVendorProductTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.AddVendorProductTableWidget.setColumnCount(5)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.AddVendorProductTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddVendorProductTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddVendorProductTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddVendorProductTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddVendorProductTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.AddVendorProductTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.AddVendorProductTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddVendorProductTableWidget.setItem(5, 3, item)
        self.AddVendorProductTableWidget.horizontalHeader().setDefaultSectionSize(226)
        self.AddVendorProductTableWidget.horizontalHeader().setMinimumSectionSize(226)
        self.AddVendorProductTableWidget.verticalHeader().setVisible(False)
        self.AddVendorProductTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.AddVendorPhoneLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorPhoneLabel.setGeometry(QtCore.QRect(10, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorPhoneLabel.setFont(font)
        self.AddVendorPhoneLabel.setObjectName("AddVendorPhoneLabel")
        self.AddVendorPhoneLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorPhoneLineEdit.setGeometry(
            QtCore.QRect(115, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorPhoneLineEdit.setFont(font)
        self.AddVendorPhoneLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorPhoneLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorPhoneLineEdit.setFrame(True)
        self.AddVendorPhoneLineEdit.setObjectName("AddVendorPhoneLineEdit")
        self.AddVendorEmailLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorEmailLabel.setGeometry(QtCore.QRect(10, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorEmailLabel.setFont(font)
        self.AddVendorEmailLabel.setObjectName("AddVendorEmailLabel")
        self.AddVendorEmailLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorEmailLineEdit.setGeometry(
            QtCore.QRect(115, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorEmailLineEdit.setFont(font)
        self.AddVendorEmailLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorEmailLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorEmailLineEdit.setFrame(True)
        self.AddVendorEmailLineEdit.setObjectName("AddVendorEmailLineEdit")
        self.AddVendorPaymentTermComboBox = ComboBoxLeaveEvents(
            self.AddTabFame)
        self.AddVendorPaymentTermComboBox.setGeometry(
            QtCore.QRect(115, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorPaymentTermComboBox.setFont(font)
        self.AddVendorPaymentTermComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorPaymentTermComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorPaymentTermComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddVendorPaymentTermComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorPaymentTermComboBox.setEditable(True)
        self.AddVendorPaymentTermComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddVendorPaymentTermComboBox.setObjectName(
            "AddVendorPaymentTermComboBox")
        self.AddVendorPaymentTermLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorPaymentTermLabel.setGeometry(
            QtCore.QRect(10, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorPaymentTermLabel.setFont(font)
        self.AddVendorPaymentTermLabel.setObjectName(
            "AddVendorPaymentTermLabel")
        self.AddVendorDiscountLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorDiscountLabel.setGeometry(
            QtCore.QRect(300, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorDiscountLabel.setFont(font)
        self.AddVendorDiscountLabel.setObjectName("AddVendorDiscountLabel")
        self.AddVendorCurrencyLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorCurrencyLabel.setGeometry(
            QtCore.QRect(300, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorCurrencyLabel.setFont(font)
        self.AddVendorCurrencyLabel.setObjectName("AddVendorCurrencyLabel")
        self.AddVendorCurrencyComboBox = ComboBoxLeaveEvents(self.AddTabFame)
        self.AddVendorCurrencyComboBox.setGeometry(
            QtCore.QRect(405, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorCurrencyComboBox.setFont(font)
        self.AddVendorCurrencyComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorCurrencyComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorCurrencyComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddVendorCurrencyComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorCurrencyComboBox.setEditable(True)
        self.AddVendorCurrencyComboBox.setInsertPolicy(
            (QtWidgets.QComboBox.NoInsert))
        self.AddVendorCurrencyComboBox.setObjectName(
            "AddVendorCurrencyComboBox")
        self.AddVendorTaxingLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorTaxingLabel.setGeometry(QtCore.QRect(300, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorTaxingLabel.setFont(font)
        self.AddVendorTaxingLabel.setObjectName("AddVendorTaxingLabel")
        self.AddVendorTaxingComboBox = ComboBoxLeaveEvents(self.AddTabFame)
        self.AddVendorTaxingComboBox.setGeometry(
            QtCore.QRect(405, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorTaxingComboBox.setFont(font)
        self.AddVendorTaxingComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorTaxingComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorTaxingComboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddVendorTaxingComboBox.setStyleSheet("QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorTaxingComboBox.setEditable(True)
        self.AddVendorTaxingComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddVendorTaxingComboBox.setObjectName("AddVendorTaxingComboBox")
        self.AddVendorDiscountComboBox = ComboBoxLeaveEvents(self.AddTabFame)
        self.AddVendorDiscountComboBox.setGeometry(
            QtCore.QRect(405, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorDiscountComboBox.setFont(font)
        self.AddVendorDiscountComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorDiscountComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorDiscountComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddVendorDiscountComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorDiscountComboBox.setEditable(True)
        self.AddVendorDiscountComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddVendorDiscountComboBox.setObjectName(
            "AddVendorDiscountComboBox")
        self.AddVendorCarrierComboBox = ComboBoxLeaveEvents(self.AddTabFame)
        self.AddVendorCarrierComboBox.setGeometry(
            QtCore.QRect(696, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorCarrierComboBox.setFont(font)
        self.AddVendorCarrierComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorCarrierComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorCarrierComboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddVendorCarrierComboBox.setStyleSheet("QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorCarrierComboBox.setEditable(True)
        self.AddVendorCarrierComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddVendorCarrierComboBox.setObjectName("AddVendorCarrierComboBox")
        self.AddVendorCarrierLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorCarrierLabel.setGeometry(QtCore.QRect(591, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorCarrierLabel.setFont(font)
        self.AddVendorCarrierLabel.setObjectName("AddVendorCarrierLabel")
        self.AddVendorPaymentMethodComboBox = ComboBoxLeaveEvents(
            self.AddTabFame)
        self.AddVendorPaymentMethodComboBox.setGeometry(
            QtCore.QRect(696, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorPaymentMethodComboBox.setFont(font)
        self.AddVendorPaymentMethodComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorPaymentMethodComboBox.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddVendorPaymentMethodComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddVendorPaymentMethodComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddVendorPaymentMethodComboBox.setEditable(True)
        self.AddVendorPaymentMethodComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddVendorPaymentMethodComboBox.setObjectName(
            "AddVendorPaymentMethodComboBox")
        self.AddVendorPaymentMethodLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorPaymentMethodLabel.setGeometry(
            QtCore.QRect(591, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorPaymentMethodLabel.setFont(font)
        self.AddVendorPaymentMethodLabel.setObjectName(
            "AddVendorPaymentMethodLabel")
        self.AddVendorAddressLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorAddressLineEdit.setGeometry(
            QtCore.QRect(405, 53, 461, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorAddressLineEdit.setFont(font)
        self.AddVendorAddressLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorAddressLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorAddressLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddVendorAddressLineEdit.setText("")
        self.AddVendorAddressLineEdit.setFrame(True)
        self.AddVendorAddressLineEdit.setObjectName("AddVendorAddressLineEdit")
        self.AddVendorIDLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorIDLineEdit.setGeometry(QtCore.QRect(20, 20, 250, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorIDLineEdit.setFont(font)
        self.AddVendorIDLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddVendorIDLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorIDLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddVendorIDLineEdit.setFrame(True)
        self.AddVendorIDLineEdit.setReadOnly(True)
        self.AddVendorIDLineEdit.setObjectName("AddVendorIDLineEdit")
        self.AddVendorNameLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorNameLineEdit.setGeometry(QtCore.QRect(405, 17, 461, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorNameLineEdit.setFont(font)
        self.AddVendorNameLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorNameLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorNameLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddVendorNameLineEdit.setText("")
        self.AddVendorNameLineEdit.setFrame(True)
        self.AddVendorNameLineEdit.setObjectName("AddVendorNameLineEdit")
        self.AddVendorRemarksLineEdit = QtWidgets.QLineEdit(self.AddTabFame)
        self.AddVendorRemarksLineEdit.setGeometry(
            QtCore.QRect(696, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddVendorRemarksLineEdit.setFont(font)
        self.AddVendorRemarksLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorRemarksLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorRemarksLineEdit.setFrame(True)
        self.AddVendorRemarksLineEdit.setObjectName("AddVendorRemarksLineEdit")
        self.AddVendorRemarksLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorRemarksLabel.setGeometry(QtCore.QRect(591, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorRemarksLabel.setFont(font)
        self.AddVendorRemarksLabel.setObjectName("AddVendorRemarksLabel")
        self.AddVendorIDLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorIDLabel.setGeometry(QtCore.QRect(20, 50, 250, 16))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorIDLabel.setFont(font)
        self.AddVendorIDLabel.setObjectName("AddVendorIDLabel")
        self.AddVendorNameLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorNameLabel.setGeometry(QtCore.QRect(300, 17, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorNameLabel.setFont(font)
        self.AddVendorNameLabel.setObjectName("AddVendorNameLabel")
        self.AddVendorAddressLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorAddressLabel.setGeometry(QtCore.QRect(300, 53, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorAddressLabel.setFont(font)
        self.AddVendorAddressLabel.setObjectName("AddVendorAddressLabel")
        self.AddVendorIDAndPictureLabel = QtWidgets.QLabel(self.AddTabFame)
        self.AddVendorIDAndPictureLabel.setGeometry(
            QtCore.QRect(10, 10, 861, 81))
        self.AddVendorIDAndPictureLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddVendorIDAndPictureLabel.setText("")
        self.AddVendorIDAndPictureLabel.setObjectName(
            "AddVendorIDAndPictureLabel")
        self.AddVendorNameAndIDSplitterLabel = QtWidgets.QLabel(
            self.AddTabFame)
        self.AddVendorNameAndIDSplitterLabel.setGeometry(
            QtCore.QRect(10, 10, 281, 81))
        self.AddVendorNameAndIDSplitterLabel.setText("")
        self.AddVendorNameAndIDSplitterLabel.setObjectName(
            "AddVendorNameAndIDSplitterLabel")
        self.AddVendorProductPushButton = QtWidgets.QPushButton(
            self.AddTabFame)
        self.AddVendorProductPushButton.setGeometry(
            QtCore.QRect(12, 226, 28, 23))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorProductPushButton.setFont(font)
        self.AddVendorProductPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorProductPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorProductPushButton.setObjectName(
            "AddVendorProductPushButton")
        self.AddVendorProductPushButton.clicked.connect(
            self.ShowProductWidgets)
        self.AddVendorSavePushButton = QtWidgets.QPushButton(self.AddTabFame)
        self.AddVendorSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AddVendorSavePushButton.setFont(font)
        self.AddVendorSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddVendorSavePushButton.setObjectName("AddVendorSavePushButton")
        self.AddVendorSavePushButton.clicked.connect(self.SaveButton)
        self.AddVendorNameAndIDSplitterLabel.raise_()
        self.AddVendorRemarksLabel.raise_()
        self.AddVendorCarrierLabel.raise_()
        self.AddVendorPaymentMethodLabel.raise_()
        self.AddVendorPaymentTermLabel.raise_()
        self.AddVendorIDAndPictureLabel.raise_()
        self.AddVendorProductTableWidget.raise_()
        self.AddVendorPhoneLabel.raise_()
        self.AddVendorPhoneLineEdit.raise_()
        self.AddVendorEmailLabel.raise_()
        self.AddVendorEmailLineEdit.raise_()
        self.AddVendorPaymentTermComboBox.raise_()
        self.AddVendorDiscountLabel.raise_()
        self.AddVendorCurrencyLabel.raise_()
        self.AddVendorCurrencyComboBox.raise_()
        self.AddVendorTaxingLabel.raise_()
        self.AddVendorTaxingComboBox.raise_()
        self.AddVendorDiscountComboBox.raise_()
        self.AddVendorCarrierComboBox.raise_()
        self.AddVendorPaymentMethodComboBox.raise_()
        self.AddVendorAddressLineEdit.raise_()
        self.AddVendorNameLineEdit.raise_()
        self.AddVendorIDLineEdit.raise_()
        self.AddVendorRemarksLineEdit.raise_()
        self.AddVendorIDLabel.raise_()
        self.AddVendorNameLabel.raise_()
        self.AddVendorAddressLabel.raise_()
        self.AddVendorProductPushButton.raise_()
        self.AddVendorSavePushButton.raise_()
        self.VendorTabWidget.addTab(self.AddVendorTab, "")
        self.ListVendorTab = QtWidgets.QWidget()
        self.ListVendorTab.setObjectName("ListVendorTab")
        self.VendorListTableWidget = QtWidgets.QTableWidget(self.ListVendorTab)
        self.VendorListTableWidget.setGeometry(QtCore.QRect(10, 50, 861, 391))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.VendorListTableWidget.sizePolicy().hasHeightForWidth())
        self.VendorListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.VendorListTableWidget.setFont(font)
        self.VendorListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.VendorListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.VendorListTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.VendorListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.VendorListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.VendorListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.VendorListTableWidget.setAlternatingRowColors(True)
        self.VendorListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.VendorListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.VendorListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.VendorListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.VendorListTableWidget.setShowGrid(False)
        self.VendorListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.VendorListTableWidget.setWordWrap(False)
        self.VendorListTableWidget.setCornerButtonEnabled(False)
        self.VendorListTableWidget.setRowCount(0)
        self.VendorListTableWidget.setObjectName("VendorListTableWidget")
        self.VendorListTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.VendorListTableWidget.setContextMenuPolicy(Qt.CustomContextMenu)
        self.VendorListTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.VendorListTableWidget.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.VendorListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.VendorListTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.VendorListTableWidget.setItem(5, 3, item)
        self.VendorListTableWidget.horizontalHeader().setDefaultSectionSize(147)
        self.VendorListTableWidget.horizontalHeader().setMinimumSectionSize(147)
        self.VendorListTableWidget.verticalHeader().setVisible(False)
        self.VendorListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SearchVendorFrame = QtWidgets.QFrame(self.ListVendorTab)
        self.SearchVendorFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
        self.SearchVendorFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchVendorFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchVendorFrame.setObjectName("SearchVendorFrame")
        self.SearchVendorLineEdit = QtWidgets.QLineEdit(self.SearchVendorFrame)
        self.SearchVendorLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchVendorLineEdit.setFont(font)
        self.SearchVendorLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchVendorLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchVendorLineEdit.setFrame(False)
        self.SearchVendorLineEdit.setObjectName("SearchVendorLineEdit")
        self.SearchVendorLineEdit.textChanged.connect(self.ClearSearch)
        self.VendorSearchPushButton = QtWidgets.QPushButton(
            self.SearchVendorFrame)
        self.VendorSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
        self.VendorSearchPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.VendorSearchPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.VendorSearchPushButton.setText("")
        self.VendorSearchPushButton.setToolTip("Search Vendor")
        self.VendorSearchPushButton.setStyleSheet(
            "QPushButton#VendorSearchPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#VendorSearchPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.VendorSearchPushButton.setObjectName("VendorSearchPushButton")
        self.VendorSearchPushButton.clicked.connect(self.SearchEvents)
        self.VendorListFrame = QtWidgets.QFrame(self.ListVendorTab)
        self.VendorListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.VendorListFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.VendorListFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.VendorListFrame.setObjectName("VendorListFrame")
        self.VendorListFrame.raise_()
        self.VendorListTableWidget.raise_()
        self.SearchVendorFrame.raise_()
        self.VendorTabWidget.addTab(self.ListVendorTab, "")
        self.VendorFrameTitle = QtWidgets.QFrame(self.VendorFrame)
        self.VendorFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
        self.VendorFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.VendorFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.VendorFrameTitle.setObjectName("VendorFrameTitle")
        self.VendorLabelTitle = QtWidgets.QLabel(self.VendorFrameTitle)
        self.VendorLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.VendorLabelTitle.setFont(font)
        self.VendorLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.VendorLabelTitle.setObjectName("VendorLabelTitle")
        self.PurchasesFrame = QtWidgets.QFrame(self.MainFrame)
        self.PurchasesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.PurchasesFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.PurchasesFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.PurchasesFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PurchasesFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PurchasesFrame.setObjectName("PurchasesFrame")
        self.PurchaseTabWidget = QtWidgets.QTabWidget(self.PurchasesFrame)
        self.PurchaseTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.PurchaseTabWidget.setFont(font)
        self.PurchaseTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.PurchaseTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.PurchaseTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.PurchaseTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.PurchaseTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}")
        self.PurchaseTabWidget.setObjectName("PurchaseTabWidget")
        self.PurchaseTabWidget.tabBarClicked.connect(
            self.PurchaseTabWidgetTabBarEvent)
        self.NewPurchaseTab = QtWidgets.QWidget()
        self.NewPurchaseTab.setObjectName("NewPurchaseTab")
        self.AddPurchaseTabFrame = QtWidgets.QFrame(self.NewPurchaseTab)
        self.AddPurchaseTabFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.AddPurchaseTabFrame.setStyleSheet("")
        self.AddPurchaseTabFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AddPurchaseTabFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddPurchaseTabFrame.setObjectName("AddPurchaseTabFrame")
        self.AddVendorProductToPurchasePushButton = QtWidgets.QPushButton(
            self.AddPurchaseTabFrame)
        self.AddVendorProductToPurchasePushButton.setGeometry(
            QtCore.QRect(12, 106, 28, 23))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddVendorProductToPurchasePushButton.setFont(font)
        self.AddVendorProductToPurchasePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddVendorProductToPurchasePushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddVendorProductToPurchasePushButton.setObjectName(
            "AddVendorProductToPurchasePushButton")
        self.AddVendorProductToPurchasePushButton.clicked.connect(
            self.ShowProductWidgets)
        self.AddPurchaseVendorNameComboBox = ComboBoxLeaveEvents(
            self.AddPurchaseTabFrame)
        self.AddPurchaseVendorNameComboBox.setGeometry(
            QtCore.QRect(20, 53, 401, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseVendorNameComboBox.setFont(font)
        self.AddPurchaseVendorNameComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseVendorNameComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseVendorNameComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseVendorNameComboBox.setStyleSheet(
            "QComboBox {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddPurchaseVendorNameComboBox.setEditable(True)
        self.AddPurchaseVendorNameComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddPurchaseVendorNameComboBox.setObjectName(
            "AddPurchaseVendorNameComboBox")
        self.AddPurchaseVendorNameComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddPurchaseVendorNameComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddPurchaseStatusComboBox = QtWidgets.QComboBox(
            self.AddPurchaseTabFrame)
        self.AddPurchaseStatusComboBox.setGeometry(
            QtCore.QRect(729, 50, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseStatusComboBox.setFont(font)
        self.AddPurchaseStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseStatusComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseStatusComboBox.setStyleSheet("QComboBox {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddPurchaseStatusComboBox.setEditable(True)
        self.ledit = self.AddPurchaseStatusComboBox.lineEdit()
        self.ledit.setAlignment(QtCore.Qt.AlignCenter)
        self.ledit.setReadOnly(True)
        self.AddPurchaseStatusComboBox.addItem("New")
        self.AddPurchaseStatusComboBox.setCurrentText("New")
        self.AddPurchaseStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddPurchaseStatusComboBox.setObjectName(
            "AddPurchaseVendorNameComboBox")
        self.AddPurchaseVendorIDLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseVendorIDLineEdit.setGeometry(
            QtCore.QRect(20, 15, 401, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseVendorIDLineEdit.setFont(font)
        self.AddPurchaseVendorIDLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseVendorIDLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseVendorIDLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseVendorIDLineEdit.setFrame(True)
        self.AddPurchaseVendorIDLineEdit.setReadOnly(True)
        self.AddPurchaseVendorIDLineEdit.setObjectName(
            "AddPurchaseVendorIDLineEdit")
        self.AddPurchaseStatusTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseStatusTextLabel.setGeometry(
            QtCore.QRect(723, 10, 147, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseStatusTextLabel.setFont(font)
        self.AddPurchaseStatusTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseStatusTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseStatusTextLabel.setObjectName(
            "AddPurchaseStatusTextLabel")
        self.AddPurchaseSavePushButton = QtWidgets.QPushButton(
            self.AddPurchaseTabFrame)
        self.AddPurchaseSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AddPurchaseSavePushButton.setFont(font)
        self.AddPurchaseSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseSavePushButton.setObjectName(
            "AddPurchaseSavePushButton")
        self.AddPurchaseSavePushButton.clicked.connect(self.SaveButton)
        self.AddPurchaseProductTableWidget = QtWidgets.QTableWidget(
            self.AddPurchaseTabFrame)
        self.AddPurchaseProductTableWidget.setGeometry(
            QtCore.QRect(10, 100, 861, 171))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.AddPurchaseProductTableWidget.sizePolicy().hasHeightForWidth())
        self.AddPurchaseProductTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseProductTableWidget.setFont(font)
        self.AddPurchaseProductTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseProductTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseProductTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseProductTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.AddPurchaseProductTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.AddPurchaseProductTableWidget.setAlternatingRowColors(True)
        self.AddPurchaseProductTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.AddPurchaseProductTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.AddPurchaseProductTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.AddPurchaseProductTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddPurchaseProductTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddPurchaseProductTableWidget.setShowGrid(False)
        self.AddPurchaseProductTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.AddPurchaseProductTableWidget.setWordWrap(False)
        self.AddPurchaseProductTableWidget.setCornerButtonEnabled(False)
        self.AddPurchaseProductTableWidget.setRowCount(0)
        self.AddPurchaseProductTableWidget.setObjectName(
            "AddPurchaseProductTableWidget")
        self.AddPurchaseProductTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.AddPurchaseProductTableWidget.setContextMenuPolicy(
            Qt.CustomContextMenu)
        self.AddPurchaseProductTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.AddPurchaseProductTableWidget.setColumnCount(8)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.AddPurchaseProductTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseProductTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddPurchaseProductTableWidget.setItem(5, 3, item)
        self.AddPurchaseProductTableWidget.horizontalHeader().setDefaultSectionSize(215)
        self.AddPurchaseProductTableWidget.horizontalHeader().setMinimumSectionSize(215)
        self.AddPurchaseProductTableWidget.verticalHeader().setVisible(False)
        self.AddPurchaseProductTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.AddPurchaseDateTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseDateTextLabel.setGeometry(
            QtCore.QRect(577, 10, 145, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseDateTextLabel.setFont(font)
        self.AddPurchaseDateTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseDateTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseDateTextLabel.setObjectName("AddPurchaseDateTextLabel")
        self.AddPurchaseOrderNumberTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseOrderNumberTextLabel.setGeometry(
            QtCore.QRect(430, 10, 147, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseOrderNumberTextLabel.setFont(font)
        self.AddPurchaseOrderNumberTextLabel.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddPurchaseOrderNumberTextLabel.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddPurchaseOrderNumberTextLabel.setObjectName(
            "AddPurchaseOrderNumberTextLabel")
        self.AddPurchaseInfoLabel = QtWidgets.QLabel(self.AddPurchaseTabFrame)
        self.AddPurchaseInfoLabel.setGeometry(QtCore.QRect(10, 10, 861, 81))
        self.AddPurchaseInfoLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseInfoLabel.setToolTip("")
        self.AddPurchaseInfoLabel.setText("")
        self.AddPurchaseInfoLabel.setObjectName("AddPurchaseInfoLabel")
        self.AddPurchaseInfoSplitterLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseInfoSplitterLabel.setGeometry(
            QtCore.QRect(10, 10, 421, 81))
        self.AddPurchaseInfoSplitterLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseInfoSplitterLabel.setText("")
        self.AddPurchaseInfoSplitterLabel.setObjectName(
            "AddPurchaseInfoSplitterLabel")
        self.AddPurchaseOrderNumberInfoSplitterLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseOrderNumberInfoSplitterLabel.setGeometry(
            QtCore.QRect(430, 10, 147, 81))
        self.AddPurchaseOrderNumberInfoSplitterLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseOrderNumberInfoSplitterLabel.setText("")
        self.AddPurchaseOrderNumberInfoSplitterLabel.setObjectName(
            "AddPurchaseOrderNumberInfoSplitterLabel")
        self.AddPurchaseDateInfoSplitterLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseDateInfoSplitterLabel.setGeometry(
            QtCore.QRect(576, 10, 147, 81))
        self.AddPurchaseDateInfoSplitterLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseDateInfoSplitterLabel.setText("")
        self.AddPurchaseDateInfoSplitterLabel.setObjectName(
            "AddPurchaseDateInfoSplitterLabel")
        self.AddPurchaseStatusInfoSplitterLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseStatusInfoSplitterLabel.setGeometry(
            QtCore.QRect(722, 10, 149, 81))
        self.AddPurchaseStatusInfoSplitterLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseStatusInfoSplitterLabel.setText("")
        self.AddPurchaseStatusInfoSplitterLabel.setObjectName(
            "AddPurchaseStatusInfoSplitterLabel")
        self.AddPurchaseOrderNumberLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseOrderNumberLineEdit.setGeometry(
            QtCore.QRect(435, 50, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseOrderNumberLineEdit.setFont(font)
        self.AddPurchaseOrderNumberLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseOrderNumberLineEdit.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddPurchaseOrderNumberLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseOrderNumberLineEdit.setFrame(True)
        self.AddPurchaseOrderNumberLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseOrderNumberLineEdit.setReadOnly(True)
        self.AddPurchaseOrderNumberLineEdit.setObjectName(
            "AddPurchaseOrderNumberLineEdit")
        self.AddPurchaseDateLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseDateLineEdit.setGeometry(
            QtCore.QRect(582, 50, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseDateLineEdit.setFont(font)
        self.AddPurchaseDateLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseDateLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseDateLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddPurchaseDateLineEdit.setFrame(True)
        self.AddPurchaseDateLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseDateLineEdit.setReadOnly(True)
        self.AddPurchaseDateLineEdit.setObjectName("AddPurchaseDateLineEdit")
        self.AddPurchaseDueDateTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseDueDateTextLabel.setGeometry(
            QtCore.QRect(10, 320, 147, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseDueDateTextLabel.setFont(font)
        self.AddPurchaseDueDateTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseDueDateTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseDueDateTextLabel.setObjectName(
            "AddPurchaseDueDateTextLabel")
        self.AddPurchaseDueDateDateEdit = QtWidgets.QDateEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseDueDateDateEdit.setGeometry(
            QtCore.QRect(157, 320, 151, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseDueDateDateEdit.setFont(font)
        self.AddPurchaseDueDateDateEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseDueDateDateEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseDueDateDateEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseDueDateDateEdit.setStyleSheet("QDateEdit {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignCenter;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.AddPurchaseDueDateDateEdit.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.AddPurchaseDueDateDateEdit.setCalendarPopup(True)
        self.AddPurchaseDueDateDateEdit.setObjectName(
            "AddPurchaseDueDateDateEdit")
        self.AddPurchaseRequestShipDateTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseRequestShipDateTextLabel.setGeometry(
            QtCore.QRect(10, 360, 147, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseRequestShipDateTextLabel.setFont(font)
        self.AddPurchaseRequestShipDateTextLabel.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddPurchaseRequestShipDateTextLabel.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddPurchaseRequestShipDateTextLabel.setObjectName(
            "AddPurchaseRequestShipDateTextLabel")
        self.AddPurchaseRequestShipDateDateEdit = QtWidgets.QDateEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseRequestShipDateDateEdit.setGeometry(
            QtCore.QRect(157, 360, 151, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseRequestShipDateDateEdit.setFont(font)
        self.AddPurchaseRequestShipDateDateEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseRequestShipDateDateEdit.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddPurchaseRequestShipDateDateEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseRequestShipDateDateEdit.setStyleSheet("QDateEdit {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignCenter;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.AddPurchaseRequestShipDateDateEdit.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.AddPurchaseRequestShipDateDateEdit.setCalendarPopup(True)
        self.AddPurchaseRequestShipDateDateEdit.setObjectName(
            "AddPurchaseRequestShipDateDateEdit")
        self.AddPurchaseRemarksTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseRemarksTextLabel.setGeometry(
            QtCore.QRect(320, 280, 291, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseRemarksTextLabel.setFont(font)
        self.AddPurchaseRemarksTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseRemarksTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseRemarksTextLabel.setObjectName(
            "AddPurchaseRemarksTextLabel")
        self.AddPurchaseTotalLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseTotalLineEdit.setGeometry(
            QtCore.QRect(730, 285, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseTotalLineEdit.setFont(font)
        self.AddPurchaseTotalLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseTotalLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseTotalLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddPurchaseTotalLineEdit.setFrame(True)
        self.AddPurchaseTotalLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseTotalLineEdit.setReadOnly(True)
        self.AddPurchaseTotalLineEdit.setObjectName("AddPurchaseTotalLineEdit")
        self.AddPurchaseTotalTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseTotalTextLabel.setGeometry(
            QtCore.QRect(625, 285, 105, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseTotalTextLabel.setFont(font)
        self.AddPurchaseTotalTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseTotalTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseTotalTextLabel.setObjectName(
            "AddPurchaseTotalTextLabel")
        self.AddPurchasePaidTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchasePaidTextLabel.setGeometry(
            QtCore.QRect(625, 320, 105, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchasePaidTextLabel.setFont(font)
        self.AddPurchasePaidTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchasePaidTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchasePaidTextLabel.setObjectName("AddPurchasePaidTextLabel")
        self.AddPurchasePaidLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchasePaidLineEdit.setGeometry(
            QtCore.QRect(730, 320, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchasePaidLineEdit.setFont(font)
        self.AddPurchasePaidLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchasePaidLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchasePaidLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddPurchasePaidLineEdit.setFrame(True)
        self.AddPurchasePaidLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchasePaidLineEdit.setReadOnly(False)
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.AddPurchasePaidLineEdit.setValidator(validator)
        self.AddPurchasePaidLineEdit.setObjectName("AddPurchasePaidLineEdit")
        self.AddPurchasePaidLineEdit.textChanged.connect(self.PurchaseBalance)
        self.AddPurchaseRemarksLineEdit = QtWidgets.QTextEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseRemarksLineEdit.setGeometry(
            QtCore.QRect(320, 310, 291, 81))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseRemarksLineEdit.setFont(font)
        self.AddPurchaseRemarksLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddPurchaseRemarksLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseRemarksLineEdit.setObjectName(
            "AddPurchaseRemarksLineEdit")
        self.AddPurchaseCurrencyTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseCurrencyTextLabel.setGeometry(
            QtCore.QRect(10, 280, 147, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseCurrencyTextLabel.setFont(font)
        self.AddPurchaseCurrencyTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseCurrencyTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseCurrencyTextLabel.setObjectName(
            "AddPurchaseCurrencyTextLabel")
        self.AddPurchaseCurrencyLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseCurrencyLineEdit.setGeometry(
            QtCore.QRect(157, 280, 151, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseCurrencyLineEdit.setFont(font)
        self.AddPurchaseCurrencyLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseCurrencyLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseCurrencyLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseCurrencyLineEdit.setText("")
        self.AddPurchaseCurrencyLineEdit.setFrame(True)
        self.AddPurchaseCurrencyLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseCurrencyLineEdit.setReadOnly(True)
        self.AddPurchaseCurrencyLineEdit.setObjectName(
            "AddPurchaseCurrencyLineEdit")
        self.AddPurchaseBalanceLineEdit = QtWidgets.QLineEdit(
            self.AddPurchaseTabFrame)
        self.AddPurchaseBalanceLineEdit.setGeometry(
            QtCore.QRect(730, 355, 135, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddPurchaseBalanceLineEdit.setFont(font)
        self.AddPurchaseBalanceLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchaseBalanceLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseBalanceLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddPurchaseBalanceLineEdit.setFrame(True)
        self.AddPurchaseBalanceLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseBalanceLineEdit.setReadOnly(True)
        self.AddPurchaseBalanceLineEdit.setObjectName(
            "AddPurchaseBalanceLineEdit")
        self.AddPurchaseBalanceTextLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchaseBalanceTextLabel.setGeometry(
            QtCore.QRect(625, 355, 105, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddPurchaseBalanceTextLabel.setFont(font)
        self.AddPurchaseBalanceTextLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddPurchaseBalanceTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddPurchaseBalanceTextLabel.setObjectName(
            "AddPurchaseBalanceTextLabel")
        self.AddPurchasePaymentInfoLabel = QtWidgets.QLabel(
            self.AddPurchaseTabFrame)
        self.AddPurchasePaymentInfoLabel.setGeometry(
            QtCore.QRect(620, 280, 251, 111))
        self.AddPurchasePaymentInfoLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddPurchasePaymentInfoLabel.setText("")
        self.AddPurchasePaymentInfoLabel.setObjectName(
            "AddPurchasePaymentInfoLabel")
        self.AddPurchasePaymentInfoLabel.raise_()
        self.AddPurchaseStatusInfoSplitterLabel.raise_()
        self.AddPurchaseDateInfoSplitterLabel.raise_()
        self.AddPurchaseOrderNumberInfoSplitterLabel.raise_()
        self.AddPurchaseInfoSplitterLabel.raise_()
        self.AddPurchaseInfoLabel.raise_()
        self.AddPurchaseVendorNameComboBox.raise_()
        self.AddPurchaseVendorIDLineEdit.raise_()
        self.AddPurchaseStatusTextLabel.raise_()
        self.AddPurchaseSavePushButton.raise_()
        self.AddPurchaseProductTableWidget.raise_()
        self.AddPurchaseDateTextLabel.raise_()
        self.AddPurchaseOrderNumberTextLabel.raise_()
        self.AddPurchaseOrderNumberLineEdit.raise_()
        self.AddPurchaseDateLineEdit.raise_()
        self.AddPurchaseStatusComboBox.raise_()
        self.AddPurchaseDueDateTextLabel.raise_()
        self.AddPurchaseDueDateDateEdit.raise_()
        self.AddPurchaseRequestShipDateTextLabel.raise_()
        self.AddPurchaseRequestShipDateDateEdit.raise_()
        self.AddPurchaseRemarksTextLabel.raise_()
        self.AddPurchaseTotalLineEdit.raise_()
        self.AddPurchaseTotalTextLabel.raise_()
        self.AddPurchasePaidTextLabel.raise_()
        self.AddPurchasePaidLineEdit.raise_()
        self.AddPurchaseRemarksLineEdit.raise_()
        self.AddPurchaseCurrencyTextLabel.raise_()
        self.AddPurchaseCurrencyLineEdit.raise_()
        self.AddPurchaseBalanceLineEdit.raise_()
        self.AddPurchaseBalanceTextLabel.raise_()
        self.AddVendorProductToPurchasePushButton.raise_()
        self.PurchaseTabWidget.addTab(self.NewPurchaseTab, "")
        self.ListPurchaseTab = QtWidgets.QWidget()
        self.ListPurchaseTab.setObjectName("ListPurchaseTab")
        self.PurchaseListTableWidget = QtWidgets.QTableWidget(
            self.ListPurchaseTab)
        self.PurchaseListTableWidget.setGeometry(
            QtCore.QRect(10, 50, 861, 391))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.PurchaseListTableWidget.sizePolicy().hasHeightForWidth())
        self.PurchaseListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        self.PurchaseListTableWidget.setFont(font)
        self.PurchaseListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PurchaseListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.PurchaseListTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.PurchaseListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.PurchaseListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.PurchaseListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.PurchaseListTableWidget.setAlternatingRowColors(True)
        self.PurchaseListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.PurchaseListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.PurchaseListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.PurchaseListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.PurchaseListTableWidget.setShowGrid(False)
        self.PurchaseListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.PurchaseListTableWidget.setWordWrap(False)
        self.PurchaseListTableWidget.setCornerButtonEnabled(False)
        self.PurchaseListTableWidget.setRowCount(0)
        self.PurchaseListTableWidget.setObjectName("PurchaseListTableWidget")
        self.PurchaseListTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.PurchaseListTableWidget.setContextMenuPolicy(Qt.CustomContextMenu)
        self.PurchaseListTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.PurchaseListTableWidget.setColumnCount(9)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        item.setFont(font)
        self.PurchaseListTableWidget.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.PurchaseListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.PurchaseListTableWidget.setItem(4, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.PurchaseListTableWidget.setItem(5, 2, item)
        self.PurchaseListTableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.PurchaseListTableWidget.horizontalHeader().setMinimumSectionSize(150)
        self.PurchaseListTableWidget.verticalHeader().setVisible(False)
        self.PurchaseListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SearchPurchaseFrame = QtWidgets.QFrame(self.ListPurchaseTab)
        self.SearchPurchaseFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
        self.SearchPurchaseFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchPurchaseFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchPurchaseFrame.setObjectName("SearchPurchaseFrame")
        self.SearchPurchaseLineEdit = QtWidgets.QLineEdit(
            self.SearchPurchaseFrame)
        self.SearchPurchaseLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchPurchaseLineEdit.setFont(font)
        self.SearchPurchaseLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchPurchaseLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchPurchaseLineEdit.setFrame(False)
        self.SearchPurchaseLineEdit.setObjectName("SearchPurchaseLineEdit")
        self.SearchPurchaseLineEdit.textChanged.connect(self.ClearSearch)
        self.PurchaseSearchPushButton = QtWidgets.QPushButton(
            self.SearchPurchaseFrame)
        self.PurchaseSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
        self.PurchaseSearchPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PurchaseSearchPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.PurchaseSearchPushButton.setText("")
        self.PurchaseSearchPushButton.setToolTip("Search Purchase")
        self.PurchaseSearchPushButton.setStyleSheet(
            "QPushButton#PurchaseSearchPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#PurchaseSearchPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.PurchaseSearchPushButton.setObjectName("PurchaseSearchPushButton")
        self.PurchaseSearchPushButton.clicked.connect(self.SearchEvents)
        self.PurchaseListFrame = QtWidgets.QFrame(self.ListPurchaseTab)
        self.PurchaseListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.PurchaseListFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PurchaseListFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PurchaseListFrame.setObjectName("PurchaseListFrame")
        self.PurchaseListFrame.raise_()
        self.PurchaseListTableWidget.raise_()
        self.SearchPurchaseFrame.raise_()
        self.PurchaseTabWidget.addTab(self.ListPurchaseTab, "")
        self.PurchaseFrameTitle = QtWidgets.QFrame(self.PurchasesFrame)
        self.PurchaseFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
        self.PurchaseFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PurchaseFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PurchaseFrameTitle.setObjectName("PurchaseFrameTitle")
        self.PurchaseLabelTitle = QtWidgets.QLabel(self.PurchaseFrameTitle)
        self.PurchaseLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.PurchaseLabelTitle.setFont(font)
        self.PurchaseLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseLabelTitle.setObjectName("PurchaseLabelTitle")
        self.SalesFrame = QtWidgets.QFrame(self.MainFrame)
        self.SalesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.SalesFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.SalesFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.SalesFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SalesFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SalesFrame.setObjectName("SalesFrame")
        self.SaleTabWidget = QtWidgets.QTabWidget(self.SalesFrame)
        self.SaleTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SaleTabWidget.setFont(font)
        self.SaleTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SaleTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SaleTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.SaleTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.SaleTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}")
        self.SaleTabWidget.setObjectName("SaleTabWidget")
        self.NewSaleTab = QtWidgets.QWidget()
        self.NewSaleTab.setObjectName("NewSaleTab")
        self.AddSaleTabFrame = QtWidgets.QFrame(self.NewSaleTab)
        self.AddSaleTabFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.AddSaleTabFrame.setStyleSheet("")
        self.AddSaleTabFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AddSaleTabFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddSaleTabFrame.setObjectName("AddSaleTabFrame")
        self.AddSaleChargePushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSaleChargePushButton.setGeometry(
            QtCore.QRect(290, 390, 571, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AddSaleChargePushButton.setFont(font)
        self.AddSaleChargePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleChargePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleChargePushButton.setObjectName("AddSaleChargePushButton")
        self.AddSaleChargePushButton.clicked.connect(self.SaveButton)
        self.AddSaleProductTableWidget = QtWidgets.QTableWidget(
            self.AddSaleTabFrame)
        self.AddSaleProductTableWidget.setGeometry(
            QtCore.QRect(10, 60, 261, 281))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.AddSaleProductTableWidget.sizePolicy().hasHeightForWidth())
        self.AddSaleProductTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddSaleProductTableWidget.setFont(font)
        self.AddSaleProductTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleProductTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.AddSaleProductTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.AddSaleProductTableWidget.setHorizontalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.AddSaleProductTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.AddSaleProductTableWidget.setAlternatingRowColors(True)
        self.AddSaleProductTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.ExtendedSelection)
        self.AddSaleProductTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.AddSaleProductTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddSaleProductTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.AddSaleProductTableWidget.setShowGrid(False)
        self.AddSaleProductTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.AddSaleProductTableWidget.setWordWrap(True)
        self.AddSaleProductTableWidget.setCornerButtonEnabled(False)
        self.AddSaleProductTableWidget.setRowCount(0)
        self.AddSaleProductTableWidget.setObjectName(
            "AddSaleProductTableWidget")
        self.AddSaleProductTableWidget.setContextMenuPolicy(
            Qt.CustomContextMenu)
        self.AddSaleProductTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.AddSaleProductTableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.AddSaleProductTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.AddSaleProductTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddSaleProductTableWidget.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddSaleProductTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddSaleProductTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.AddSaleProductTableWidget.setItem(4, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.AddSaleProductTableWidget.setItem(5, 1, item)
        self.AddSaleProductTableWidget.horizontalHeader().setVisible(False)
        self.AddSaleProductTableWidget.horizontalHeader().setDefaultSectionSize(100)
        self.AddSaleProductTableWidget.horizontalHeader().setHighlightSections(False)
        self.AddSaleProductTableWidget.horizontalHeader().setMinimumSectionSize(100)
        self.AddSaleProductTableWidget.horizontalHeader().setSortIndicatorShown(False)
        self.AddSaleProductTableWidget.verticalHeader().setVisible(False)
        self.AddSaleProductTableWidget.verticalHeader().setMinimumSectionSize(60)
        self.AddSaleCustomerNameFrame = QtWidgets.QFrame(self.AddSaleTabFrame)
        self.AddSaleCustomerNameFrame.setGeometry(
            QtCore.QRect(10, 10, 261, 51))
        self.AddSaleCustomerNameFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.AddSaleCustomerNameFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddSaleCustomerNameFrame.setObjectName("AddSaleCustomerNameFrame")
        self.AddSaleCustomerNameComboBox = ComboBoxLeaveEvents(
            self.AddSaleCustomerNameFrame)
        self.AddSaleCustomerNameComboBox.setGeometry(
            QtCore.QRect(50, 10, 201, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddSaleCustomerNameComboBox.setFont(font)
        self.AddSaleCustomerNameComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleCustomerNameComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleCustomerNameComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleCustomerNameComboBox.setStyleSheet("QComboBox {font-size: 12pt;border: 1px solid rgb(135,206,250);background: rgb(255,255,255);color: black;padding: 1px 18px 1px 3px;min-width: 6em;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddSaleCustomerNameComboBox.setEditable(True)
        self.AddSaleCustomerNameComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddSaleCustomerNameComboBox.addItem("Walk In")
        self.AddSaleCustomerNameComboBox.setCurrentText("Walk In")
        self.AddSaleCustomerNameComboBox.setObjectName(
            "AddSaleCustomerNameComboBox")
        self.AddSaleCustomerNameComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddSaleCustomerNameComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddSaleCustomerImageLabel = QtWidgets.QLabel(
            self.AddSaleCustomerNameFrame)
        self.AddSaleCustomerImageLabel.setGeometry(QtCore.QRect(10, 8, 35, 35))
        self.AddSaleCustomerImageLabel.setText("")
        self.AddSaleCustomerImageLabel.setObjectName(
            "AddSaleCustomerImageLabel")
        self.AddSaleTotalFrame = QtWidgets.QFrame(self.AddSaleTabFrame)
        self.AddSaleTotalFrame.setGeometry(QtCore.QRect(10, 350, 261, 91))
        self.AddSaleTotalFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AddSaleTotalFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddSaleTotalFrame.setObjectName("AddSaleTotalFrame")
        self.AddSaleProductPayMethodComboBox = QtWidgets.QComboBox(
            self.AddSaleTotalFrame)
        self.AddSaleProductPayMethodComboBox.setGeometry(
            QtCore.QRect(120, 50, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddSaleProductPayMethodComboBox.setFont(font)
        self.AddSaleProductPayMethodComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductPayMethodComboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.AddSaleProductPayMethodComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductPayMethodComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: rgb(255,255,255);padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddSaleProductPayMethodComboBox.setEditable(False)
        self.AddSaleProductPayMethodComboBox.setObjectName(
            "AddSaleProductPayMethodComboBox")
        self.AddSaleProductCurrencyComboBox = QtWidgets.QComboBox(
            self.AddSaleTotalFrame)
        self.AddSaleProductCurrencyComboBox.setGeometry(
            QtCore.QRect(120, 10, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddSaleProductCurrencyComboBox.setFont(font)
        self.AddSaleProductCurrencyComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductCurrencyComboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.AddSaleProductCurrencyComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductCurrencyComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: rgb(255,255,255);padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddSaleProductCurrencyComboBox.setEditable(False)
        self.AddSaleProductCurrencyComboBox.setObjectName(
            "AddSaleProductCurrencyComboBox")
        self.AddSaleProductPayMethodLabelLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTotalFrame)
        self.AddSaleProductPayMethodLabelLineEdit.setGeometry(
            QtCore.QRect(0, 50, 120, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductPayMethodLabelLineEdit.setFont(font)
        self.AddSaleProductPayMethodLabelLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductPayMethodLabelLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductPayMethodLabelLineEdit.setFrame(True)
        self.AddSaleProductPayMethodLabelLineEdit.setAlignment(
            QtCore.Qt.AlignLeading)
        self.AddSaleProductPayMethodLabelLineEdit.setReadOnly(True)
        self.AddSaleProductPayMethodLabelLineEdit.setObjectName(
            "AddSaleProductPayMethodLabelLineEdit")
        self.AddSaleProductCurrencyLabelLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTotalFrame)
        self.AddSaleProductCurrencyLabelLineEdit.setGeometry(
            QtCore.QRect(0, 10, 120, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductCurrencyLabelLineEdit.setFont(font)
        self.AddSaleProductCurrencyLabelLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductCurrencyLabelLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductCurrencyLabelLineEdit.setFrame(True)
        self.AddSaleProductCurrencyLabelLineEdit.setAlignment(
            QtCore.Qt.AlignLeading)
        self.AddSaleProductCurrencyLabelLineEdit.setReadOnly(True)
        self.AddSaleProductCurrencyLabelLineEdit.setObjectName(
            "AddSaleProductCurrencyLabelLineEdit")
        self.AddSale1CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale1CalPushButton.setGeometry(QtCore.QRect(618, 220, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale1CalPushButton.setFont(font)
        self.AddSale1CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale1CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale1CalPushButton.setObjectName("AddSale1CalPushButton")
        self.AddSale1CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale2CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale2CalPushButton.setGeometry(QtCore.QRect(699, 220, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale2CalPushButton.setFont(font)
        self.AddSale2CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale2CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale2CalPushButton.setObjectName("AddSale2CalPushButton")
        self.AddSale2CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale3CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale3CalPushButton.setGeometry(QtCore.QRect(780, 220, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale3CalPushButton.setFont(font)
        self.AddSale3CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale3CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale3CalPushButton.setObjectName("AddSale3CalPushButton")
        self.AddSale3CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale4CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale4CalPushButton.setGeometry(QtCore.QRect(618, 261, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale4CalPushButton.setFont(font)
        self.AddSale4CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale4CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale4CalPushButton.setObjectName("AddSale4CalPushButton")
        self.AddSale4CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale5CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale5CalPushButton.setGeometry(QtCore.QRect(699, 261, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale5CalPushButton.setFont(font)
        self.AddSale5CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale5CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale5CalPushButton.setObjectName("AddSale5CalPushButton")
        self.AddSale5CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale6CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale6CalPushButton.setGeometry(QtCore.QRect(780, 261, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale6CalPushButton.setFont(font)
        self.AddSale6CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale6CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale6CalPushButton.setObjectName("AddSale6CalPushButton")
        self.AddSale6CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale8CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale8CalPushButton.setGeometry(QtCore.QRect(699, 302, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale8CalPushButton.setFont(font)
        self.AddSale8CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale8CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale8CalPushButton.setObjectName("AddSale8CalPushButton")
        self.AddSale8CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale7CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale7CalPushButton.setGeometry(QtCore.QRect(618, 302, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale7CalPushButton.setFont(font)
        self.AddSale7CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale7CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale7CalPushButton.setObjectName("AddSale7CalPushButton")
        self.AddSale7CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale9CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale9CalPushButton.setGeometry(QtCore.QRect(780, 302, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale9CalPushButton.setFont(font)
        self.AddSale9CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale9CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale9CalPushButton.setObjectName("AddSale9CalPushButton")
        self.AddSale9CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSale00CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale00CalPushButton.setGeometry(QtCore.QRect(699, 343, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale00CalPushButton.setFont(font)
        self.AddSale00CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale00CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale00CalPushButton.setObjectName("AddSale00CalPushButton")
        self.AddSale00CalPushButton.clicked.connect(self.DecimalPressed)
        self.AddSale0CalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSale0CalPushButton.setGeometry(QtCore.QRect(618, 343, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddSale0CalPushButton.setFont(font)
        self.AddSale0CalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSale0CalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSale0CalPushButton.setObjectName("AddSale0CalPushButton")
        self.AddSale0CalPushButton.clicked.connect(self.DigitPressed)
        self.AddSaleDeleteCalPushButton = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSaleDeleteCalPushButton.setGeometry(
            QtCore.QRect(780, 343, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleDeleteCalPushButton.setFont(font)
        self.AddSaleDeleteCalPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleDeleteCalPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleDeleteCalPushButton.setObjectName(
            "AddSaleDeleteCalPushButton")
        self.AddSaleDeleteCalPushButton.clicked.connect(self.ClearPressed)
        self.AddSaleProductInfoFrameLabel = QtWidgets.QLabel(
            self.AddSaleTabFrame)
        self.AddSaleProductInfoFrameLabel.setGeometry(
            QtCore.QRect(280, 10, 591, 141))
        self.AddSaleProductInfoFrameLabel.setText("")
        self.AddSaleProductInfoFrameLabel.setObjectName(
            "AddSaleProductInfoFrameLabel")
        self.AddSaleProductImageLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleProductImageLabel.setGeometry(
            QtCore.QRect(290, 15, 131, 91))
        self.AddSaleProductImageLabel.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleProductImageLabel.setText("")
        self.AddSaleProductImageLabel.setObjectName("AddSaleProductImageLabel")
        self.AddSaleProductCodeComboBox = ComboBoxLeaveEvents(
            self.AddSaleTabFrame)
        self.AddSaleProductCodeComboBox.setGeometry(
            QtCore.QRect(410, 110, 200, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddSaleProductCodeComboBox.setFont(font)
        self.AddSaleProductCodeComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductCodeComboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.AddSaleProductCodeComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductCodeComboBox.setStyleSheet("QComboBox {font-size: 12pt;border: 1px solid rgb(135,206,250);background: rgb(255,255,255);text-align: center;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddSaleProductCodeComboBox.setEditable(True)
        self.AddSaleProductCodeComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.LEdit = self.AddSaleProductCodeComboBox.lineEdit()
        self.LEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.AddSaleProductCodeComboBox.setObjectName(
            "AddSaleProductCodeComboBox")
        self.AddSaleProductCodeComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddSaleProductCodeComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.AddSaleProductNameLineEdit = QtWidgets.QLabel(
            self.AddSaleTabFrame)
        self.AddSaleProductNameLineEdit.setGeometry(
            QtCore.QRect(435, 20, 300, 50))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductNameLineEdit.setFont(font)
        self.AddSaleProductNameLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductNameLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleProductNameLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductNameLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleProductNameLineEdit.setWordWrap(True)
        self.AddSaleProductNameLineEdit.setObjectName(
            "AddSaleProductNameLineEdit")
        self.AddSaleProductCodeLabelLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleProductCodeLabelLineEdit.setGeometry(
            QtCore.QRect(290, 110, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductCodeLabelLineEdit.setFont(font)
        self.AddSaleProductCodeLabelLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductCodeLabelLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductCodeLabelLineEdit.setFrame(True)
        self.AddSaleProductCodeLabelLineEdit.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddSaleProductCodeLabelLineEdit.setReadOnly(True)
        self.AddSaleProductCodeLabelLineEdit.setObjectName(
            "AddSaleProductCodeLabelLineEdit")
        self.AddSaleProductPriceLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleProductPriceLineEdit.setGeometry(
            QtCore.QRect(435, 70, 300, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductPriceLineEdit.setFont(font)
        self.AddSaleProductPriceLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductPriceLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleProductPriceLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductPriceLineEdit.setFrame(True)
        self.AddSaleProductPriceLineEdit.setAlignment(QtCore.Qt.AlignLeading)
        self.AddSaleProductPriceLineEdit.setReadOnly(True)
        self.AddSaleProductPriceLineEdit.setObjectName(
            "AddSaleProductPriceLineEdit")
        self.AddSaleProductAddToCart = QtWidgets.QPushButton(
            self.AddSaleTabFrame)
        self.AddSaleProductAddToCart.setGeometry(QtCore.QRect(760, 3, 91, 100))
        self.AddSaleProductAddToCart.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductAddToCart.setToolTip("Add To Cart")
        self.AddSaleProductAddToCart.setObjectName("AddSaleProductAddToCart")
        self.AddSaleProductAddToCart.clicked.connect(self.ButtonEvents)
        self.AddSaleProductAddToCart.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleProductQuantityLabelLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleProductQuantityLabelLineEdit.setGeometry(
            QtCore.QRect(620, 110, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductQuantityLabelLineEdit.setFont(font)
        self.AddSaleProductQuantityLabelLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleProductQuantityLabelLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddSaleProductQuantityLabelLineEdit.setFrame(True)
        self.AddSaleProductQuantityLabelLineEdit.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddSaleProductQuantityLabelLineEdit.setReadOnly(True)
        self.AddSaleProductQuantityLabelLineEdit.setObjectName(
            "AddSaleProductQuantityLabelLineEdit")
        self.AddSaleProductQuantityLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleProductQuantityLineEdit.setGeometry(
            QtCore.QRect(720, 110, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleProductQuantityLineEdit.setFont(font)
        self.AddSaleProductQuantityLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddSaleProductQuantityLineEdit.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddSaleProductQuantityLineEdit.setToolTip("")
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.AddSaleProductQuantityLineEdit.setValidator(validator)
        self.AddSaleProductQuantityLineEdit.setObjectName(
            "AddSaleProductQuantityLineEdit")
        self.AddSaleTaxLineEdit = QtWidgets.QLineEdit(self.AddSaleTabFrame)
        self.AddSaleTaxLineEdit.setGeometry(QtCore.QRect(420, 230, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleTaxLineEdit.setFont(font)
        self.AddSaleTaxLineEdit.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleTaxLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleTaxLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleTaxLineEdit.setFrame(True)
        self.AddSaleTaxLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleTaxLineEdit.setReadOnly(True)
        self.AddSaleTaxLineEdit.setObjectName("AddSaleTaxLineEdit")
        self.AddSaleSubTotalLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleSubTotalLineEdit.setGeometry(
            QtCore.QRect(420, 170, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleSubTotalLineEdit.setFont(font)
        self.AddSaleSubTotalLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleSubTotalLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleSubTotalLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleSubTotalLineEdit.setFrame(True)
        self.AddSaleSubTotalLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleSubTotalLineEdit.setReadOnly(True)
        self.AddSaleSubTotalLineEdit.setObjectName("AddSaleSubTotalLineEdit")
        self.AddSaleTotalTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleTotalTextLabel.setGeometry(QtCore.QRect(310, 260, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleTotalTextLabel.setFont(font)
        self.AddSaleTotalTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleTotalTextLabel.setObjectName("AddSaleTotalTextLabel")
        self.AddSaleSubTotalTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleSubTotalTextLabel.setGeometry(
            QtCore.QRect(310, 170, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        self.AddSaleSubTotalTextLabel.setFont(font)
        self.AddSaleSubTotalTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleSubTotalTextLabel.setObjectName("AddSaleSubTotalTextLabel")
        self.AddSaleDiscountLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleDiscountLineEdit.setGeometry(
            QtCore.QRect(420, 200, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleDiscountLineEdit.setFont(font)
        self.AddSaleDiscountLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleDiscountLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleDiscountLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleDiscountLineEdit.setFrame(True)
        self.AddSaleDiscountLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleDiscountLineEdit.setReadOnly(True)
        self.AddSaleDiscountLineEdit.setObjectName("AddSaleDiscountLineEdit")
        self.AddSaleDiscountTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleDiscountTextLabel.setGeometry(
            QtCore.QRect(310, 200, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        self.AddSaleDiscountTextLabel.setFont(font)
        self.AddSaleDiscountTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleDiscountTextLabel.setObjectName("AddSaleDiscountTextLabel")
        self.AddSaleTotalLineEdit = QtWidgets.QLineEdit(self.AddSaleTabFrame)
        self.AddSaleTotalLineEdit.setGeometry(QtCore.QRect(420, 260, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleTotalLineEdit.setFont(font)
        self.AddSaleTotalLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleTotalLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleTotalLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleTotalLineEdit.setFrame(True)
        self.AddSaleTotalLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleTotalLineEdit.setReadOnly(True)
        self.AddSaleTotalLineEdit.setObjectName("AddSaleTotalLineEdit")
        self.AddSaleTaxTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleTaxTextLabel.setGeometry(QtCore.QRect(310, 230, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        self.AddSaleTaxTextLabel.setFont(font)
        self.AddSaleTaxTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleTaxTextLabel.setObjectName("AddSaleTaxTextLabel")
        self.AddSaleBalanceTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleBalanceTextLabel.setGeometry(
            QtCore.QRect(310, 320, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        self.AddSaleBalanceTextLabel.setFont(font)
        self.AddSaleBalanceTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleBalanceTextLabel.setObjectName("AddSaleBalanceTextLabel")
        self.AddSaleBalanceLineEdit = QtWidgets.QLineEdit(self.AddSaleTabFrame)
        self.AddSaleBalanceLineEdit.setGeometry(
            QtCore.QRect(420, 320, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleBalanceLineEdit.setFont(font)
        self.AddSaleBalanceLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleBalanceLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleBalanceLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleBalanceLineEdit.setFrame(True)
        self.AddSaleBalanceLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleBalanceLineEdit.setReadOnly(True)
        self.AddSaleBalanceLineEdit.setObjectName("AddSaleBalanceLineEdit")
        self.AddSaleChangeLineEdit = QtWidgets.QLineEdit(self.AddSaleTabFrame)
        self.AddSaleChangeLineEdit.setGeometry(QtCore.QRect(420, 350, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleChangeLineEdit.setFont(font)
        self.AddSaleChangeLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleChangeLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleChangeLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSaleChangeLineEdit.setFrame(True)
        self.AddSaleChangeLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleChangeLineEdit.setReadOnly(True)
        self.AddSaleChangeLineEdit.setObjectName("AddSaleChangeLineEdit")
        self.AddSaleChangeTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSaleChangeTextLabel.setGeometry(
            QtCore.QRect(310, 350, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(13)
        self.AddSaleChangeTextLabel.setFont(font)
        self.AddSaleChangeTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSaleChangeTextLabel.setObjectName("AddSaleChangeTextLabel")
        self.AddSaleTotalInfoFrameLabel = QtWidgets.QLabel(
            self.AddSaleTabFrame)
        self.AddSaleTotalInfoFrameLabel.setGeometry(
            QtCore.QRect(280, 150, 591, 291))
        self.AddSaleTotalInfoFrameLabel.setText("")
        self.AddSaleTotalInfoFrameLabel.setObjectName(
            "AddSaleTotalInfoFrameLabel")
        self.AddSaleCalcPaidLineEdit = QtWidgets.QLineEdit(
            self.AddSaleTabFrame)
        self.AddSaleCalcPaidLineEdit.setGeometry(
            QtCore.QRect(618, 160, 242, 51))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(20)
        font.setBold(False)
        font.setWeight(50)
        self.AddSaleCalcPaidLineEdit.setFont(font)
        self.AddSaleCalcPaidLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSaleCalcPaidLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSaleCalcPaidLineEdit.setToolTip("")
        self.AddSaleCalcPaidLineEdit.setReadOnly(True)
        self.AddSaleCalcPaidLineEdit.setObjectName("AddSaleCalcPaidLineEdit")
        self.AddSalePaidLineEdit = QtWidgets.QLineEdit(self.AddSaleTabFrame)
        self.AddSalePaidLineEdit.setGeometry(QtCore.QRect(420, 290, 171, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.AddSalePaidLineEdit.setFont(font)
        self.AddSalePaidLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddSalePaidLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddSalePaidLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddSalePaidLineEdit.setFrame(True)
        self.AddSalePaidLineEdit.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSalePaidLineEdit.setReadOnly(True)
        self.AddSalePaidLineEdit.setObjectName("AddSalePaidLineEdit")
        self.AddSalePaidTextLabel = QtWidgets.QLabel(self.AddSaleTabFrame)
        self.AddSalePaidTextLabel.setGeometry(QtCore.QRect(310, 290, 111, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.AddSalePaidTextLabel.setFont(font)
        self.AddSalePaidTextLabel.setAlignment(
            QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AddSalePaidTextLabel.setObjectName("AddSalePaidTextLabel")
        self.AddSaleInvoiceInfoFrameLabel = QtWidgets.QLabel(
            self.AddSaleTabFrame)
        self.AddSaleInvoiceInfoFrameLabel.setGeometry(
            QtCore.QRect(290, 160, 321, 221))
        self.AddSaleInvoiceInfoFrameLabel.setText("")
        self.AddSaleInvoiceInfoFrameLabel.setObjectName(
            "AddSaleInvoiceInfoFrameLabel")
        self.AddSaleInvoiceInfoFrameLabel.raise_()
        self.AddSaleTotalInfoFrameLabel.raise_()
        self.AddSaleChargePushButton.raise_()
        self.AddSaleProductTableWidget.raise_()
        self.AddSaleCustomerNameFrame.raise_()
        self.AddSaleTotalFrame.raise_()
        self.AddSale1CalPushButton.raise_()
        self.AddSale2CalPushButton.raise_()
        self.AddSale3CalPushButton.raise_()
        self.AddSale4CalPushButton.raise_()
        self.AddSale5CalPushButton.raise_()
        self.AddSale6CalPushButton.raise_()
        self.AddSale8CalPushButton.raise_()
        self.AddSale7CalPushButton.raise_()
        self.AddSale9CalPushButton.raise_()
        self.AddSale00CalPushButton.raise_()
        self.AddSale0CalPushButton.raise_()
        self.AddSaleDeleteCalPushButton.raise_()
        self.AddSaleProductInfoFrameLabel.raise_()
        self.AddSaleProductImageLabel.raise_()
        self.AddSaleProductCodeComboBox.raise_()
        self.AddSaleProductNameLineEdit.raise_()
        self.AddSaleProductCodeLabelLineEdit.raise_()
        self.AddSaleProductPriceLineEdit.raise_()
        self.AddSaleProductQuantityLabelLineEdit.raise_()
        self.AddSaleProductQuantityLineEdit.raise_()
        self.AddSaleTaxLineEdit.raise_()
        self.AddSaleSubTotalLineEdit.raise_()
        self.AddSaleTotalTextLabel.raise_()
        self.AddSaleSubTotalTextLabel.raise_()
        self.AddSaleDiscountLineEdit.raise_()
        self.AddSaleDiscountTextLabel.raise_()
        self.AddSaleTotalLineEdit.raise_()
        self.AddSaleTaxTextLabel.raise_()
        self.AddSaleBalanceTextLabel.raise_()
        self.AddSaleBalanceLineEdit.raise_()
        self.AddSaleChangeLineEdit.raise_()
        self.AddSaleChangeTextLabel.raise_()
        self.AddSaleCalcPaidLineEdit.raise_()
        self.AddSalePaidLineEdit.raise_()
        self.AddSalePaidTextLabel.raise_()
        self.SaleTabWidget.addTab(self.NewSaleTab, "")
        self.ListSaleTab = QtWidgets.QWidget()
        self.ListSaleTab.setObjectName("ListSaleTab")
        self.SaleListTableWidget = QtWidgets.QTableWidget(self.ListSaleTab)
        self.SaleListTableWidget.setGeometry(QtCore.QRect(10, 50, 861, 391))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SaleListTableWidget.sizePolicy().hasHeightForWidth())
        self.SaleListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SaleListTableWidget.setFont(font)
        self.SaleListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaleListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SaleListTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SaleListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SaleListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SaleListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.SaleListTableWidget.setAlternatingRowColors(True)
        self.SaleListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SaleListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SaleListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SaleListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SaleListTableWidget.setShowGrid(False)
        self.SaleListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SaleListTableWidget.setWordWrap(False)
        self.SaleListTableWidget.setCornerButtonEnabled(False)
        self.SaleListTableWidget.setRowCount(0)
        self.SaleListTableWidget.setObjectName("SaleListTableWidget")
        self.SaleListTableWidget.setColumnCount(7)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SaleListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.SaleListTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.SaleListTableWidget.setItem(5, 3, item)
        self.SaleListTableWidget.horizontalHeader().setDefaultSectionSize(161)
        self.SaleListTableWidget.horizontalHeader().setMinimumSectionSize(161)
        self.SaleListTableWidget.verticalHeader().setVisible(False)
        self.SaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SaleListFrame = QtWidgets.QFrame(self.ListSaleTab)
        self.SaleListFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.SaleListFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SaleListFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SaleListFrame.setObjectName("SaleListFrame")
        self.SearchSaleFrame = QtWidgets.QFrame(self.SaleListFrame)
        self.SearchSaleFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
        self.SearchSaleFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchSaleFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchSaleFrame.setObjectName("SearchSaleFrame")
        self.SearchSaleLineEdit = QtWidgets.QLineEdit(self.SearchSaleFrame)
        self.SearchSaleLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchSaleLineEdit.setFont(font)
        self.SearchSaleLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchSaleLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchSaleLineEdit.setFrame(False)
        self.SearchSaleLineEdit.setObjectName("SearchSaleLineEdit")
        self.SearchSaleLineEdit.textChanged.connect(self.ClearSearch)
        self.SaleSearchPushButton = QtWidgets.QPushButton(self.SearchSaleFrame)
        self.SaleSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
        self.SaleSearchPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaleSearchPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SaleSearchPushButton.setText("")
        self.SaleSearchPushButton.setToolTip("Search Vendor")
        self.SaleSearchPushButton.setStyleSheet(
            "QPushButton#SaleSearchPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#SaleSearchPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.SaleSearchPushButton.setObjectName("SaleSearchPushButton")
        self.SaleSearchPushButton.clicked.connect(self.SearchEvents)
        self.SaleListFrame.raise_()
        self.SaleListTableWidget.raise_()
        self.SaleTabWidget.addTab(self.ListSaleTab, "")
        self.SaleFrameTitle = QtWidgets.QFrame(self.SalesFrame)
        self.SaleFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
        self.SaleFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SaleFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SaleFrameTitle.setObjectName("SaleFrameTitle")
        self.SaleLabelTitle = QtWidgets.QLabel(self.SaleFrameTitle)
        self.SaleLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SaleLabelTitle.setFont(font)
        self.SaleLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.SaleLabelTitle.setObjectName("SaleLabelTitle")
        self.DashboardFrame = QtWidgets.QFrame(self.MainFrame)
        self.DashboardFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.DashboardFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.DashboardFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.DashboardFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.DashboardFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.DashboardFrame.setObjectName("DashboardFrame")
        self.CustomerFrame = QtWidgets.QFrame(self.MainFrame)
        self.CustomerFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.CustomerFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.CustomerFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.CustomerFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.CustomerFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.CustomerFrame.setObjectName("CustomerFrame")
        self.CustomerTabWidget = QtWidgets.QTabWidget(self.CustomerFrame)
        self.CustomerTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.CustomerTabWidget.setFont(font)
        self.CustomerTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.CustomerTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.CustomerTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.CustomerTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.CustomerTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}")
        self.CustomerTabWidget.setObjectName("CustomerTabWidget")
        self.CustomerTabWidget.tabBarClicked.connect(
            self.CustomerTabWidgetTabBarEvent)
        self.AddCustomerTab = QtWidgets.QWidget()
        self.AddCustomerTab.setObjectName("AddCustomerTab")
        self.AddCustomerTabFame = QtWidgets.QFrame(self.AddCustomerTab)
        self.AddCustomerTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.AddCustomerTabFame.setStyleSheet("")
        self.AddCustomerTabFame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AddCustomerTabFame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AddCustomerTabFame.setObjectName("AddCustomerTabFame")
        self.AddCustomerPhoneLabel = QtWidgets.QLabel(self.AddCustomerTabFame)
        self.CustomerSaleListTableWidget = QtWidgets.QTableWidget(
            self.AddCustomerTabFame)
        self.CustomerSaleListTableWidget.setGeometry(
            QtCore.QRect(10, 220, 861, 171))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.CustomerSaleListTableWidget.sizePolicy().hasHeightForWidth())
        self.CustomerSaleListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.CustomerSaleListTableWidget.setFont(font)
        self.CustomerSaleListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CustomerSaleListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.CustomerSaleListTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.CustomerSaleListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.CustomerSaleListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.CustomerSaleListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.CustomerSaleListTableWidget.setAlternatingRowColors(True)
        self.CustomerSaleListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.CustomerSaleListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.CustomerSaleListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CustomerSaleListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CustomerSaleListTableWidget.setShowGrid(False)
        self.CustomerSaleListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.CustomerSaleListTableWidget.setWordWrap(False)
        self.CustomerSaleListTableWidget.setCornerButtonEnabled(False)
        self.CustomerSaleListTableWidget.setRowCount(0)
        self.CustomerSaleListTableWidget.setObjectName(
            "CustomerSaleListTableWidget")
        self.CustomerSaleListTableWidget.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerSaleListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.CustomerSaleListTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerSaleListTableWidget.setItem(5, 3, item)
        self.CustomerSaleListTableWidget.horizontalHeader().setDefaultSectionSize(150)
        self.CustomerSaleListTableWidget.horizontalHeader().setMinimumSectionSize(100)
        self.CustomerSaleListTableWidget.verticalHeader().setVisible(False)
        self.CustomerSaleListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.CustomerSaleListTableWidget.raise_()
        self.AddCustomerPhoneLabel.setGeometry(QtCore.QRect(10, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPhoneLabel.setFont(font)
        self.AddCustomerPhoneLabel.setObjectName("AddCustomerPhoneLabel")
        self.AddCustomerPhoneLineEdit = QtWidgets.QLineEdit(
            self.AddCustomerTabFame)
        self.AddCustomerPhoneLineEdit.setGeometry(
            QtCore.QRect(115, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPhoneLineEdit.setFont(font)
        self.AddCustomerPhoneLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerPhoneLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerPhoneLineEdit.setFrame(True)
        self.AddCustomerPhoneLineEdit.setObjectName("AddCustomerPhoneLineEdit")
        self.AddCustomerEmailLabel = QtWidgets.QLabel(self.AddCustomerTabFame)
        self.AddCustomerEmailLabel.setGeometry(QtCore.QRect(10, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerEmailLabel.setFont(font)
        self.AddCustomerEmailLabel.setObjectName("AddCustomerEmailLabel")
        self.AddCustomerEmailLineEdit = QtWidgets.QLineEdit(
            self.AddCustomerTabFame)
        self.AddCustomerEmailLineEdit.setGeometry(
            QtCore.QRect(115, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerEmailLineEdit.setFont(font)
        self.AddCustomerEmailLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerEmailLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerEmailLineEdit.setFrame(True)
        self.AddCustomerEmailLineEdit.setObjectName("AddCustomerEmailLineEdit")
        self.AddCustomerPaymentTermComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerPaymentTermComboBox.setGeometry(
            QtCore.QRect(115, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPaymentTermComboBox.setFont(font)
        self.AddCustomerPaymentTermComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerPaymentTermComboBox.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddCustomerPaymentTermComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerPaymentTermComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerPaymentTermComboBox.setEditable(False)
        self.AddCustomerPaymentTermComboBox.setObjectName(
            "AddCustomerPaymentTermComboBox")
        self.AddCustomerPaymentTermLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerPaymentTermLabel.setGeometry(
            QtCore.QRect(10, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPaymentTermLabel.setFont(font)
        self.AddCustomerPaymentTermLabel.setObjectName(
            "AddCustomerPaymentTermLabel")
        self.AddCustomerDiscountLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerDiscountLabel.setGeometry(
            QtCore.QRect(300, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerDiscountLabel.setFont(font)
        self.AddCustomerDiscountLabel.setObjectName("AddCustomerDiscountLabel")
        self.AddCustomerCurrencyLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerCurrencyLabel.setGeometry(
            QtCore.QRect(300, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerCurrencyLabel.setFont(font)
        self.AddCustomerCurrencyLabel.setObjectName("AddCustomerCurrencyLabel")
        self.AddCustomerCurrencyComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerCurrencyComboBox.setGeometry(
            QtCore.QRect(405, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerCurrencyComboBox.setFont(font)
        self.AddCustomerCurrencyComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerCurrencyComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerCurrencyComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerCurrencyComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerCurrencyComboBox.setEditable(False)
        self.AddCustomerCurrencyComboBox.setObjectName(
            "AddCustomerCurrencyComboBox")
        self.AddCustomerTaxingLabel = QtWidgets.QLabel(self.AddCustomerTabFame)
        self.AddCustomerTaxingLabel.setGeometry(
            QtCore.QRect(300, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerTaxingLabel.setFont(font)
        self.AddCustomerTaxingLabel.setObjectName("AddCustomerTaxingLabel")
        self.AddCustomerTaxingComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerTaxingComboBox.setGeometry(
            QtCore.QRect(405, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerTaxingComboBox.setFont(font)
        self.AddCustomerTaxingComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerTaxingComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerTaxingComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerTaxingComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerTaxingComboBox.setEditable(False)
        self.AddCustomerTaxingComboBox.setObjectName(
            "AddCustomerTaxingComboBox")
        self.AddCustomerDiscountComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerDiscountComboBox.setGeometry(
            QtCore.QRect(405, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerDiscountComboBox.setFont(font)
        self.AddCustomerDiscountComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerDiscountComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerDiscountComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerDiscountComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerDiscountComboBox.setEditable(False)
        self.AddCustomerDiscountComboBox.setObjectName(
            "AddCustomerDiscountComboBox")
        self.AddCustomerCarrierComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerCarrierComboBox.setGeometry(
            QtCore.QRect(696, 140, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerCarrierComboBox.setFont(font)
        self.AddCustomerCarrierComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerCarrierComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerCarrierComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerCarrierComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerCarrierComboBox.setEditable(False)
        self.AddCustomerCarrierComboBox.setObjectName(
            "AddCustomerCarrierComboBox")
        self.AddCustomerCarrierLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerCarrierLabel.setGeometry(
            QtCore.QRect(591, 140, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerCarrierLabel.setFont(font)
        self.AddCustomerCarrierLabel.setObjectName("AddCustomerCarrierLabel")
        self.AddCustomerPaymentMethodComboBox = QtWidgets.QComboBox(
            self.AddCustomerTabFame)
        self.AddCustomerPaymentMethodComboBox.setGeometry(
            QtCore.QRect(696, 100, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPaymentMethodComboBox.setFont(font)
        self.AddCustomerPaymentMethodComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerPaymentMethodComboBox.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddCustomerPaymentMethodComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerPaymentMethodComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddCustomerPaymentMethodComboBox.setEditable(False)
        self.AddCustomerPaymentMethodComboBox.setObjectName(
            "AddCustomerPaymentMethodComboBox")
        self.AddCustomerPaymentMethodLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerPaymentMethodLabel.setGeometry(
            QtCore.QRect(591, 100, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerPaymentMethodLabel.setFont(font)
        self.AddCustomerPaymentMethodLabel.setObjectName(
            "AddCustomerPaymentMethodLabel")
        self.AddCustomerAddressLineEdit = QtWidgets.QLineEdit(
            self.AddCustomerTabFame)
        self.AddCustomerAddressLineEdit.setGeometry(
            QtCore.QRect(405, 53, 461, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerAddressLineEdit.setFont(font)
        self.AddCustomerAddressLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerAddressLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerAddressLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddCustomerAddressLineEdit.setText("")
        self.AddCustomerAddressLineEdit.setFrame(True)
        self.AddCustomerAddressLineEdit.setObjectName(
            "AddCustomerAddressLineEdit")
        self.AddCustomerIDLineEdit = QtWidgets.QLineEdit(
            self.AddCustomerTabFame)
        self.AddCustomerIDLineEdit.setGeometry(QtCore.QRect(20, 20, 250, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.AddCustomerIDLineEdit.setFont(font)
        self.AddCustomerIDLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.AddCustomerIDLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerIDLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddCustomerIDLineEdit.setFrame(True)
        self.AddCustomerIDLineEdit.setReadOnly(True)
        self.AddCustomerIDLineEdit.setObjectName("AddCustomerIDLineEdit")
        self.AddCustomerNameLineEdit = QtWidgets.QLineEdit(
            self.AddCustomerTabFame)
        self.AddCustomerNameLineEdit.setGeometry(
            QtCore.QRect(405, 17, 461, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddCustomerNameLineEdit.setFont(font)
        self.AddCustomerNameLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerNameLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerNameLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddCustomerNameLineEdit.setText("")
        self.AddCustomerNameLineEdit.setFrame(True)
        self.AddCustomerNameLineEdit.setObjectName("AddCustomerNameLineEdit")
        self.AddCustomerRemarksLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerRemarksLabel.setGeometry(
            QtCore.QRect(591, 180, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerRemarksLabel.setFont(font)
        self.AddCustomerRemarksLabel.setObjectName("AddCustomerRemarksLabel")
        self.AddCustomerIDLabel = QtWidgets.QLabel(self.AddCustomerTabFame)
        self.AddCustomerIDLabel.setGeometry(QtCore.QRect(20, 50, 250, 16))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerIDLabel.setFont(font)
        self.AddCustomerIDLabel.setObjectName("AddCustomerIDLabel")
        self.AddCustomerNameLabel = QtWidgets.QLabel(self.AddCustomerTabFame)
        self.AddCustomerNameLabel.setGeometry(QtCore.QRect(300, 17, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerNameLabel.setFont(font)
        self.AddCustomerNameLabel.setObjectName("AddCustomerNameLabel")
        self.AddCustomerAddressLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerAddressLabel.setGeometry(
            QtCore.QRect(300, 53, 105, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerAddressLabel.setFont(font)
        self.AddCustomerAddressLabel.setObjectName("AddCustomerAddressLabel")
        self.AddCustomerIDAndPictureLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerIDAndPictureLabel.setGeometry(
            QtCore.QRect(10, 10, 861, 81))
        self.AddCustomerIDAndPictureLabel.setText("")
        self.AddCustomerIDAndPictureLabel.setObjectName(
            "AddCustomerIDAndPictureLabel")
        self.AddCustomerNameAndIDSplitterLabel = QtWidgets.QLabel(
            self.AddCustomerTabFame)
        self.AddCustomerNameAndIDSplitterLabel.setGeometry(
            QtCore.QRect(10, 10, 281, 81))
        self.AddCustomerNameAndIDSplitterLabel.setText("")
        self.AddCustomerNameAndIDSplitterLabel.setObjectName(
            "AddCustomerNameAndIDSplitterLabel")
        self.AddCustomerSavePushButton = QtWidgets.QPushButton(
            self.AddCustomerTabFame)
        self.AddCustomerSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AddCustomerSavePushButton.setFont(font)
        self.AddCustomerSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerSavePushButton.setObjectName(
            "AddCustomerSavePushButton")
        self.AddCustomerSavePushButton.clicked.connect(self.SaveButton)
        self.AddCustomerRemarksLineEdit = QtWidgets.QTextEdit(
            self.AddCustomerTabFame)
        self.AddCustomerRemarksLineEdit.setGeometry(
            QtCore.QRect(696, 180, 175, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddCustomerRemarksLineEdit.setFont(font)
        self.AddCustomerRemarksLineEdit.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddCustomerRemarksLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddCustomerRemarksLineEdit.setObjectName(
            "AddCustomerRemarksLineEdit")
        self.AddCustomerRemarksLineEdit.raise_()
        self.AddCustomerIDAndPictureLabel.raise_()
        self.AddCustomerNameAndIDSplitterLabel.raise_()
        self.AddCustomerPhoneLabel.raise_()
        self.AddCustomerPhoneLineEdit.raise_()
        self.AddCustomerEmailLabel.raise_()
        self.AddCustomerEmailLineEdit.raise_()
        self.AddCustomerPaymentTermComboBox.raise_()
        self.AddCustomerPaymentTermLabel.raise_()
        self.AddCustomerDiscountLabel.raise_()
        self.AddCustomerCurrencyLabel.raise_()
        self.AddCustomerCurrencyComboBox.raise_()
        self.AddCustomerTaxingLabel.raise_()
        self.AddCustomerTaxingComboBox.raise_()
        self.AddCustomerDiscountComboBox.raise_()
        self.AddCustomerCarrierComboBox.raise_()
        self.AddCustomerCarrierLabel.raise_()
        self.AddCustomerPaymentMethodComboBox.raise_()
        self.AddCustomerPaymentMethodLabel.raise_()
        self.AddCustomerAddressLineEdit.raise_()
        self.AddCustomerIDLineEdit.raise_()
        self.AddCustomerNameLineEdit.raise_()
        self.AddCustomerRemarksLabel.raise_()
        self.AddCustomerIDLabel.raise_()
        self.AddCustomerNameLabel.raise_()
        self.AddCustomerAddressLabel.raise_()
        self.AddCustomerSavePushButton.raise_()
        self.CustomerTabWidget.addTab(self.AddCustomerTab, "")
        self.ListCustomerTab = QtWidgets.QWidget()
        self.ListCustomerTab.setObjectName("ListCustomerTab")
        self.CustomerListTableWidget = QtWidgets.QTableWidget(
            self.ListCustomerTab)
        self.CustomerListTableWidget.setGeometry(
            QtCore.QRect(10, 50, 861, 391))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.CustomerListTableWidget.sizePolicy().hasHeightForWidth())
        self.CustomerListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.CustomerListTableWidget.setFont(font)
        self.CustomerListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CustomerListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.CustomerListTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.CustomerListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.CustomerListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.CustomerListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.CustomerListTableWidget.setAlternatingRowColors(True)
        self.CustomerListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.CustomerListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.CustomerListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CustomerListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CustomerListTableWidget.setShowGrid(False)
        self.CustomerListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.CustomerListTableWidget.setWordWrap(False)
        self.CustomerListTableWidget.setCornerButtonEnabled(False)
        self.CustomerListTableWidget.setRowCount(0)
        self.CustomerListTableWidget.setObjectName("CustomerListTableWidget")
        self.CustomerListTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.CustomerListTableWidget.setContextMenuPolicy(Qt.CustomContextMenu)
        self.CustomerListTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.CustomerListTableWidget.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.CustomerListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.CustomerListTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.CustomerListTableWidget.setItem(5, 3, item)
        self.CustomerListTableWidget.horizontalHeader().setDefaultSectionSize(188)
        self.CustomerListTableWidget.horizontalHeader().setMinimumSectionSize(188)
        self.CustomerListTableWidget.verticalHeader().setVisible(False)
        self.CustomerListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SearchCustomerFrame = QtWidgets.QFrame(self.ListCustomerTab)
        self.SearchCustomerFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
        self.SearchCustomerFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchCustomerFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchCustomerFrame.setObjectName("SearchCustomerFrame")
        self.SearchCustomerLineEdit = QtWidgets.QLineEdit(
            self.SearchCustomerFrame)
        self.SearchCustomerLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchCustomerLineEdit.setFont(font)
        self.SearchCustomerLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchCustomerLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchCustomerLineEdit.setFrame(False)
        self.SearchCustomerLineEdit.setObjectName("SearchCustomerLineEdit")
        self.SearchCustomerLineEdit.textChanged.connect(self.ClearSearch)
        self.CustomerSearchPushButton = QtWidgets.QPushButton(
            self.SearchCustomerFrame)
        self.CustomerSearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
        self.CustomerSearchPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CustomerSearchPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.CustomerSearchPushButton.setText("")
        self.CustomerSearchPushButton.setToolTip("Search Customer")
        self.CustomerSearchPushButton.setStyleSheet(
            "QPushButton#CustomerSearchPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#VendorSearchPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.CustomerSearchPushButton.setObjectName("CustomerSearchPushButton")
        self.CustomerSearchPushButton.clicked.connect(self.SearchEvents)
        self.CustomerListFame = QtWidgets.QFrame(self.ListCustomerTab)
        self.CustomerListFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.CustomerListFame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.CustomerListFame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.CustomerListFame.setObjectName("CustomerListFame")
        self.CustomerListFame.raise_()
        self.CustomerListTableWidget.raise_()
        self.SearchCustomerFrame.raise_()
        self.CustomerTabWidget.addTab(self.ListCustomerTab, "")
        self.CustomerFrameTitle = QtWidgets.QFrame(self.CustomerFrame)
        self.CustomerFrameTitle.setGeometry(QtCore.QRect(10, 9, 699, 35))
        self.CustomerFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.CustomerFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.CustomerFrameTitle.setObjectName("CustomerFrameTitle")
        self.CustomerLabelTitle = QtWidgets.QLabel(self.CustomerFrameTitle)
        self.CustomerLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.CustomerLabelTitle.setFont(font)
        self.CustomerLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.CustomerLabelTitle.setObjectName("CustomerLabelTitle")
        self.InventoryFrame = QtWidgets.QFrame(self.MainFrame)
        self.InventoryFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.InventoryFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.InventoryFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.InventoryFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.InventoryFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.InventoryFrame.setObjectName("InventoryFrame")
        self.InventoryTabWidget = QtWidgets.QTabWidget(self.InventoryFrame)
        self.InventoryTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.InventoryTabWidget.setFont(font)
        self.InventoryTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.InventoryTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.InventoryTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.InventoryTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.InventoryTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}\n""QTabBar::tab:first{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 105px;image: url(:/AddImg/Res/add.png);image-position: left center;background-repeat: no;}\n""QTabBar::tab:first:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}\n""QTabBar::tab:middle{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width:105px;image: url(:/AdjustStockImg/Res/adjuststock.png);image-position: center left;background-repeat: no;}\n""QTabBar::tab:middle:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}\n""QTabBar::tab:last{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 105px;image: url(:/CurrentStockImg/Res/currentstock.png);image-position: center left;background-repeat: no;}\n""QTabBar::tab:last:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}")
        self.InventoryTabWidget.setIconSize(QtCore.QSize(16, 16))
        self.InventoryTabWidget.setObjectName("InventoryTabWidget")
        self.InventoryTabWidget.tabBarClicked.connect(
            self.InventoryTabWidgetTabBarEvent)
        self.AddInventoryTab = QtWidgets.QWidget()
        self.AddInventoryTab.setObjectName("AddInventoryTab")
        self.InventoryNewProductFrame = QtWidgets.QFrame(self.AddInventoryTab)
        self.InventoryNewProductFrame.setGeometry(QtCore.QRect(0, 0, 880, 451))
        self.InventoryNewProductFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.InventoryNewProductFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.InventoryNewProductFrame.setObjectName("InventoryNewProductFrame")
        self.AddStockItemNameLineEdit = QtWidgets.QLineEdit(
            self.InventoryNewProductFrame)
        self.AddStockItemNameLineEdit.setGeometry(
            QtCore.QRect(241, 80, 621, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddStockItemNameLineEdit.setFont(font)
        self.AddStockItemNameLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemNameLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemNameLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddStockItemNameLineEdit.setText("")
        self.AddStockItemNameLineEdit.setFrame(True)
        self.AddStockItemNameLineEdit.setAlignment(QtCore.Qt.AlignLeading)
        self.AddStockItemNameLineEdit.setReadOnly(False)
        self.AddStockItemNameLineEdit.setObjectName("AddStockItemNameLineEdit")
        self.AddStockItemNameTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemNameTextLabel.setGeometry(
            QtCore.QRect(160, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemNameTextLabel.setFont(font)
        self.AddStockItemNameTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemNameTextLabel.setObjectName(
            "AddStockItemNameTextLabel")
        self.AddStockItemCodeLineEdit = QtWidgets.QLineEdit(
            self.InventoryNewProductFrame)
        self.AddStockItemCodeLineEdit.setGeometry(
            QtCore.QRect(241, 40, 621, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddStockItemCodeLineEdit.setFont(font)
        self.AddStockItemCodeLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemCodeLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemCodeLineEdit.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.AddStockItemCodeLineEdit.setText("")
        self.AddStockItemCodeLineEdit.setFrame(True)
        self.AddStockItemCodeLineEdit.setAlignment(QtCore.Qt.AlignLeading)
        self.AddStockItemCodeLineEdit.setReadOnly(True)
        self.AddStockItemCodeLineEdit.setObjectName("AddStockItemCodeLineEdit")
        self.AddStockItemCodeTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemCodeTextLabel.setGeometry(
            QtCore.QRect(160, 40, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemCodeTextLabel.setFont(font)
        self.AddStockItemCodeTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemCodeTextLabel.setObjectName(
            "AddStockItemCodeTextLabel")
        self.AddStockItemCategoryTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemCategoryTextLabel.setGeometry(
            QtCore.QRect(10, 140, 861, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemCategoryTextLabel.setFont(font)
        self.AddStockItemCategoryTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemCategoryTextLabel.setObjectName(
            "AddStockItemCategoryTextLabel")
        self.AddStockItemPriceTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemPriceTextLabel.setGeometry(
            QtCore.QRect(10, 220, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemPriceTextLabel.setFont(font)
        self.AddStockItemPriceTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemPriceTextLabel.setObjectName(
            "AddStockItemPriceTextLabel")
        self.AddStockItemPriceLineEdit = QtWidgets.QLineEdit(
            self.InventoryNewProductFrame)
        self.AddStockItemPriceLineEdit.setGeometry(
            QtCore.QRect(121, 220, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddStockItemPriceLineEdit.setFont(font)
        self.AddStockItemPriceLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemPriceLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemPriceLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddStockItemPriceLineEdit.setText("0.00")
        self.AddStockItemPriceLineEdit.setFrame(True)
        self.AddStockItemPriceLineEdit.setAlignment(QtCore.Qt.AlignLeading)
        self.AddStockItemPriceLineEdit.setReadOnly(True)
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.AddStockItemPriceLineEdit.setValidator(validator)
        self.AddStockItemPriceLineEdit.setObjectName(
            "AddStockItemPriceLineEdit")
        self.AddStockItemPictureFrameTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemPictureFrameTextLabel.setGeometry(
            QtCore.QRect(10, 10, 861, 121))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(11)
        self.AddStockItemPictureFrameTextLabel.setFont(font)
        self.AddStockItemPictureFrameTextLabel.setText("")
        self.AddStockItemPictureFrameTextLabel.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddStockItemPictureFrameTextLabel.setObjectName(
            "AddStockItemPictureFrameTextLabel")
        self.AddStockItemLocationTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemLocationTextLabel.setGeometry(
            QtCore.QRect(10, 260, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemLocationTextLabel.setFont(font)
        self.AddStockItemLocationTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemLocationTextLabel.setObjectName(
            "AddStockItemLocationTextLabel")
        self.AddStockItemLocationComboBox = ComboBoxLeaveEvents(
            self.InventoryNewProductFrame)
        self.AddStockItemLocationComboBox.setGeometry(
            QtCore.QRect(121, 260, 291, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemLocationComboBox.setFont(font)
        self.AddStockItemLocationComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemLocationComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemLocationComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddStockItemLocationComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddStockItemLocationComboBox.setEditable(True)
        self.AddStockItemLocationComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddStockItemLocationComboBox.setObjectName(
            "AddStockItemLocationComboBox")
        self.AddStockItemReorderPointTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemReorderPointTextLabel.setGeometry(
            QtCore.QRect(420, 220, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemReorderPointTextLabel.setFont(font)
        self.AddStockItemReorderPointTextLabel.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddStockItemReorderPointTextLabel.setObjectName(
            "AddStockItemReorderPointTextLabel")
        self.AddStockItemReorderPointLineEdit = QtWidgets.QLineEdit(
            self.InventoryNewProductFrame)
        self.AddStockItemReorderPointLineEdit.setGeometry(
            QtCore.QRect(591, 220, 281, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AddStockItemReorderPointLineEdit.setFont(font)
        self.AddStockItemReorderPointLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemReorderPointLineEdit.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddStockItemReorderPointLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddStockItemReorderPointLineEdit.setText("")
        self.AddStockItemReorderPointLineEdit.setFrame(True)
        self.AddStockItemReorderPointLineEdit.setAlignment(
            QtCore.Qt.AlignLeading)
        self.AddStockItemReorderPointLineEdit.setReadOnly(False)
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.AddStockItemReorderPointLineEdit.setValidator(validator)
        self.AddStockItemReorderPointLineEdit.setObjectName(
            "AddStockItemReorderPointLineEdit")
        self.AddStockItemMeasurementTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemMeasurementTextLabel.setGeometry(
            QtCore.QRect(420, 260, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemMeasurementTextLabel.setFont(font)
        self.AddStockItemMeasurementTextLabel.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AddStockItemMeasurementTextLabel.setObjectName(
            "AddStockItemMeasurementTextLabel")
        self.AddStockItemMeasurementComboBox = ComboBoxLeaveEvents(
            self.InventoryNewProductFrame)
        self.AddStockItemMeasurementComboBox.setGeometry(
            QtCore.QRect(591, 260, 281, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemMeasurementComboBox.setFont(font)
        self.AddStockItemMeasurementComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemMeasurementComboBox.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AddStockItemMeasurementComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddStockItemMeasurementComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddStockItemMeasurementComboBox.setEditable(True)
        self.AddStockItemMeasurementComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddStockItemMeasurementComboBox.setObjectName(
            "AddStockItemMeasurementComboBox")
        self.AddStockItemCategoryComboBox = ComboBoxLeaveEvents(
            self.InventoryNewProductFrame)
        self.AddStockItemCategoryComboBox.setGeometry(
            QtCore.QRect(10, 170, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemCategoryComboBox.setFont(font)
        self.AddStockItemCategoryComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemCategoryComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemCategoryComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.AddStockItemCategoryComboBox.setStyleSheet(
            "QComboBox {border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.AddStockItemCategoryComboBox.setEditable(True)
        self.AddStockItemCategoryComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.AddStockItemCategoryComboBox.setObjectName(
            "AddStockItemCategoryComboBox")
        self.AddStockItemRemarksTextLabel = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemRemarksTextLabel.setGeometry(
            QtCore.QRect(10, 300, 861, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockItemRemarksTextLabel.setFont(font)
        self.AddStockItemRemarksTextLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemRemarksTextLabel.setObjectName(
            "AddStockItemRemarksTextLabel")
        self.AddStockRemarksLineEdit = QtWidgets.QTextEdit(
            self.InventoryNewProductFrame)
        self.AddStockRemarksLineEdit.setGeometry(
            QtCore.QRect(10, 330, 861, 61))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AddStockRemarksLineEdit.setFont(font)
        self.AddStockRemarksLineEdit.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockRemarksLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockRemarksLineEdit.setObjectName("AddStockRemarksLineEdit")
        self.AddItemStockSavePushButton = QtWidgets.QPushButton(
            self.InventoryNewProductFrame)
        self.AddItemStockSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AddItemStockSavePushButton.setFont(font)
        self.AddItemStockSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddItemStockSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddItemStockSavePushButton.setObjectName(
            "AddItemStockSavePushButton")
        self.AddItemStockSavePushButton.clicked.connect(self.SaveButton)
        self.AddStockItemPictureFrameImage = QtWidgets.QLabel(
            self.InventoryNewProductFrame)
        self.AddStockItemPictureFrameImage.setGeometry(
            QtCore.QRect(30, 20, 100, 100))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(11)
        self.AddStockItemPictureFrameImage.setFont(font)
        self.AddStockItemPictureFrameImage.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AddStockItemPictureFrameImage.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.AddStockItemPictureFrameImage.setText("")
        self.AddStockItemPictureFrameImage.setAlignment(QtCore.Qt.AlignCenter)
        self.AddStockItemPictureFrameImage.setObjectName(
            "AddStockItemPictureFrameImage")
        self.AddStockItemPictureFrameTextLabel.raise_()
        self.AddStockItemNameLineEdit.raise_()
        self.AddStockItemNameTextLabel.raise_()
        self.AddStockItemCodeLineEdit.raise_()
        self.AddStockItemCodeTextLabel.raise_()
        self.AddStockItemCategoryTextLabel.raise_()
        self.AddStockItemPriceTextLabel.raise_()
        self.AddStockItemPriceLineEdit.raise_()
        self.AddStockItemLocationTextLabel.raise_()
        self.AddStockItemReorderPointTextLabel.raise_()
        self.AddStockItemReorderPointLineEdit.raise_()
        self.AddStockItemMeasurementTextLabel.raise_()
        self.AddStockItemMeasurementComboBox.raise_()
        self.AddStockItemLocationComboBox.raise_()
        self.AddStockItemRemarksTextLabel.raise_()
        self.AddStockRemarksLineEdit.raise_()
        self.AddItemStockSavePushButton.raise_()
        self.AddStockItemPictureFrameImage.raise_()
        self.InventoryTabWidget.addTab(self.AddInventoryTab, "")
        self.ReceiveInventoryTab = QtWidgets.QWidget()
        self.ReceiveInventoryTab.setObjectName("ReceiveInventoryTab")
        self.ReceiveStockFrame = QtWidgets.QFrame(self.ReceiveInventoryTab)
        self.ReceiveStockFrame.setGeometry(QtCore.QRect(0, 0, 880, 451))
        self.ReceiveStockFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReceiveStockFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReceiveStockFrame.setObjectName("ReceiveStockFrame")
        self.SearchReceiveOrderNumberFrame = QtWidgets.QFrame(
            self.ReceiveStockFrame)
        self.SearchReceiveOrderNumberFrame.setGeometry(
            QtCore.QRect(10, 10, 861, 35))
        self.SearchReceiveOrderNumberFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.SearchReceiveOrderNumberFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.SearchReceiveOrderNumberFrame.setObjectName(
            "SearchReceiveOrderNumberFrame")
        self.SearchReceiveOrderNumberComboBox = ComboBoxLeaveEvents(
            self.SearchReceiveOrderNumberFrame)
        self.SearchReceiveOrderNumberComboBox.setGeometry(
            QtCore.QRect(10, 2, 841, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchReceiveOrderNumberComboBox.setFont(font)
        self.SearchReceiveOrderNumberComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchReceiveOrderNumberComboBox.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SearchReceiveOrderNumberComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SearchReceiveOrderNumberComboBox.setStyleSheet(
            "QComboBox {font-size: 12pt;border: 0px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.SearchReceiveOrderNumberComboBox.setEditable(True)
        self.SearchReceiveOrderNumberComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.SearchReceiveOrderNumberComboBox.setCurrentText(
            "Select Purchase Order")
        self.SearchReceiveOrderNumberComboBox.setObjectName(
            "SearchReceiveOrderNumberComboBox")
        self.SearchReceiveOrderNumberComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.SearchReceiveOrderNumberComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))
        self.SearchReceiveOrderNumberComboBox.raise_()
        self.SearchReceiveOrderNumberTableWidget = QtWidgets.QTableWidget(
            self.ReceiveStockFrame)
        self.SearchReceiveOrderNumberTableWidget.setGeometry(
            QtCore.QRect(10, 50, 861, 341))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SearchReceiveOrderNumberTableWidget.sizePolicy().hasHeightForWidth())
        self.SearchReceiveOrderNumberTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchReceiveOrderNumberTableWidget.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchReceiveOrderNumberTableWidget.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SearchReceiveOrderNumberTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SearchReceiveOrderNumberTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SearchReceiveOrderNumberTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SearchReceiveOrderNumberTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.SearchReceiveOrderNumberTableWidget.setAlternatingRowColors(True)
        self.SearchReceiveOrderNumberTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SearchReceiveOrderNumberTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SearchReceiveOrderNumberTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SearchReceiveOrderNumberTableWidget.setShowGrid(False)
        self.SearchReceiveOrderNumberTableWidget.setGridStyle(
            QtCore.Qt.SolidLine)
        self.SearchReceiveOrderNumberTableWidget.setWordWrap(False)
        self.SearchReceiveOrderNumberTableWidget.setCornerButtonEnabled(False)
        self.SearchReceiveOrderNumberTableWidget.setRowCount(0)
        self.SearchReceiveOrderNumberTableWidget.setObjectName(
            "SearchReceiveOrderNumberTableWidget")
        self.SearchReceiveOrderNumberTableWidget.clicked.connect(
            self.SingleClickedCellItem)
        self.SearchReceiveOrderNumberTableWidget.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setHorizontalHeaderItem(
            5, item)
        item = QtWidgets.QTableWidgetItem()
        self.SearchReceiveOrderNumberTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SearchReceiveOrderNumberTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.SearchReceiveOrderNumberTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.SearchReceiveOrderNumberTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SearchReceiveOrderNumberTableWidget.setItem(2, 0, item)
        self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setDefaultSectionSize(144)
        self.SearchReceiveOrderNumberTableWidget.horizontalHeader().setMinimumSectionSize(144)
        self.SearchReceiveOrderNumberTableWidget.verticalHeader().setVisible(False)
        self.SearchReceiveOrderNumberTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SearchReceiveOrderNumberSavePushButton = QtWidgets.QPushButton(
            self.ReceiveStockFrame)
        self.SearchReceiveOrderNumberSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SearchReceiveOrderNumberSavePushButton.setFont(font)
        self.SearchReceiveOrderNumberSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchReceiveOrderNumberSavePushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SearchReceiveOrderNumberSavePushButton.setObjectName(
            "SearchReceiveOrderNumberSavePushButton")
        self.SearchReceiveOrderNumberSavePushButton.clicked.connect(
            self.SaveButton)
        self.InventoryTabWidget.addTab(self.ReceiveInventoryTab, "")
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        self.CurrentInventoryTab = QtWidgets.QWidget()
        self.CurrentInventoryTab.setObjectName("CurrentInventoryTab")
        self.CurrentInventoryListTableWidget = QtWidgets.QTableWidget(
            self.CurrentInventoryTab)
        self.CurrentInventoryListTableWidget.setGeometry(
            QtCore.QRect(10, 50, 861, 391))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.CurrentInventoryListTableWidget.sizePolicy().hasHeightForWidth())
        self.CurrentInventoryListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.CurrentInventoryListTableWidget.setFont(font)
        self.CurrentInventoryListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CurrentInventoryListTableWidget.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.CurrentInventoryListTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.CurrentInventoryListTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.CurrentInventoryListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.CurrentInventoryListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.CurrentInventoryListTableWidget.setAlternatingRowColors(True)
        self.CurrentInventoryListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.CurrentInventoryListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.CurrentInventoryListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CurrentInventoryListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.CurrentInventoryListTableWidget.setShowGrid(False)
        self.CurrentInventoryListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.CurrentInventoryListTableWidget.setWordWrap(False)
        self.CurrentInventoryListTableWidget.setCornerButtonEnabled(False)
        self.CurrentInventoryListTableWidget.setRowCount(0)
        self.CurrentInventoryListTableWidget.setObjectName(
            "CurrentInventoryListTableWidget")
        self.CurrentInventoryListTableWidget.doubleClicked.connect(
            self.DoubleClickedCellItem)
        self.CurrentInventoryListTableWidget.setContextMenuPolicy(
            Qt.CustomContextMenu)
        self.CurrentInventoryListTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.CurrentInventoryListTableWidget.setColumnCount(8)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(1, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(1, 5, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.CurrentInventoryListTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        self.CurrentInventoryListTableWidget.setItem(4, 4, item)
        item = QtWidgets.QTableWidgetItem()
        self.CurrentInventoryListTableWidget.setItem(5, 4, item)
        self.CurrentInventoryListTableWidget.horizontalHeader().setDefaultSectionSize(161)
        self.CurrentInventoryListTableWidget.horizontalHeader().setMinimumSectionSize(161)
        self.CurrentInventoryListTableWidget.verticalHeader().setVisible(False)
        self.CurrentInventoryListTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.CurrentStockFrame = QtWidgets.QFrame(self.CurrentInventoryTab)
        self.CurrentStockFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.CurrentStockFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.CurrentStockFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.CurrentStockFrame.setObjectName("CurrentStockFrame")
        self.SearchInventoryFrame = QtWidgets.QFrame(self.CurrentStockFrame)
        self.SearchInventoryFrame.setGeometry(QtCore.QRect(10, 10, 861, 35))
        self.SearchInventoryFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchInventoryFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchInventoryFrame.setObjectName("SearchInventoryFrame")
        self.SearchInventoryLineEdit = QtWidgets.QLineEdit(
            self.SearchInventoryFrame)
        self.SearchInventoryLineEdit.setGeometry(QtCore.QRect(46, 3, 811, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SearchInventoryLineEdit.setFont(font)
        self.SearchInventoryLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchInventoryLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchInventoryLineEdit.setFrame(False)
        self.SearchInventoryLineEdit.setObjectName("SearchInventoryLineEdit")
        self.SearchInventoryLineEdit.textChanged.connect(self.ClearSearch)
        self.InventorySearchPushButton = QtWidgets.QPushButton(
            self.SearchInventoryFrame)
        self.InventorySearchPushButton.setGeometry(QtCore.QRect(10, 5, 24, 24))
        self.InventorySearchPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.InventorySearchPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.InventorySearchPushButton.setText("")
        self.InventorySearchPushButton.setToolTip("Search Product")
        self.InventorySearchPushButton.setStyleSheet(
            "QPushButton#InventorySearchPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#InventorySearchPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.InventorySearchPushButton.setObjectName(
            "InventorySearchPushButton")
        self.InventorySearchPushButton.clicked.connect(self.SearchEvents)
        self.CurrentStockFrame.raise_()
        self.CurrentInventoryListTableWidget.raise_()
        self.InventoryTabWidget.addTab(self.CurrentInventoryTab, "")
        self.InventoryFrameTitle = QtWidgets.QFrame(self.InventoryFrame)
        self.InventoryFrameTitle.setGeometry(QtCore.QRect(10, 9, 363, 35))
        self.InventoryFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.InventoryFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.InventoryFrameTitle.setObjectName("InventoryFrameTitle")
        self.InventoryLabelTitle = QtWidgets.QLabel(self.InventoryFrameTitle)
        self.InventoryLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.InventoryLabelTitle.setFont(font)
        self.InventoryLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.InventoryLabelTitle.setObjectName("InventoryLabelTitle")
        self.MessagesFrame = QtWidgets.QFrame(self.MainFrame)
        self.MessagesFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.MessagesFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.MessagesFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.MessagesFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MessagesFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MessagesFrame.setObjectName("MessagesFrame")
        self.MessagesFrameTitle = QtWidgets.QFrame(self.MessagesFrame)
        self.MessagesFrameTitle.setGeometry(QtCore.QRect(10, 9, 879, 38))
        self.MessagesFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MessagesFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MessagesFrameTitle.setObjectName("MessagesFrameTitle")
        self.MessagesLabelTitle = QtWidgets.QLabel(self.MessagesFrameTitle)
        self.MessagesLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.MessagesLabelTitle.setFont(font)
        self.MessagesLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.MessagesLabelTitle.setObjectName("MessagesLabelTitle")
        self.MessagesShowFrame = QtWidgets.QFrame(self.MessagesFrame)
        self.MessagesShowFrame.setGeometry(QtCore.QRect(10, 47, 881, 450))
        self.MessagesShowFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MessagesShowFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MessagesShowFrame.setObjectName("MessagesShowFrame")
        self.NotificationsTableWidget = QtWidgets.QTableWidget(
            self.MessagesShowFrame)
        self.NotificationsTableWidget.setGeometry(
            QtCore.QRect(10, 10, 861, 431))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.NotificationsTableWidget.sizePolicy().hasHeightForWidth())
        self.NotificationsTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.NotificationsTableWidget.setFont(font)
        self.NotificationsTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.NotificationsTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.NotificationsTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.NotificationsTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}\n""QTableWidget::item {border: 0px;padding: 30px;}")
        self.NotificationsTableWidget.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.NotificationsTableWidget.setLineWidth(1)
        self.NotificationsTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.NotificationsTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.NotificationsTableWidget.setAlternatingRowColors(True)
        self.NotificationsTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.NotificationsTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectItems)
        self.NotificationsTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.NotificationsTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.NotificationsTableWidget.setShowGrid(False)
        self.NotificationsTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.NotificationsTableWidget.setWordWrap(True)
        self.NotificationsTableWidget.setCornerButtonEnabled(False)
        self.NotificationsTableWidget.setRowCount(0)
        self.NotificationsTableWidget.setObjectName("NotificationsTableWidget")
        self.NotificationsTableWidget.setContextMenuPolicy(
            Qt.CustomContextMenu)
        self.NotificationsTableWidget.customContextMenuRequested.connect(
            self.CustomContextMenus)
        self.NotificationsTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.NotificationsTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.NotificationsTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.NotificationsTableWidget.setItem(2, 0, item)
        self.NotificationsTableWidget.horizontalHeader().setDefaultSectionSize(860)
        self.NotificationsTableWidget.horizontalHeader().setMinimumSectionSize(860)
        self.NotificationsTableWidget.verticalHeader().setVisible(False)
        self.NotificationsTableWidget.verticalHeader().setDefaultSectionSize(150)
        self.NotificationsTableWidget.verticalHeader().setMinimumSectionSize(150)
        self.SettingsFrame = QtWidgets.QFrame(self.MainFrame)
        self.SettingsFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.SettingsFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.SettingsFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.SettingsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsFrame.setObjectName("SettingsFrame")
        self.SettingsTabWidget = QtWidgets.QTabWidget(self.SettingsFrame)
        self.SettingsTabWidget.setGeometry(QtCore.QRect(10, 7, 881, 490))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsTabWidget.setFont(font)
        self.SettingsTabWidget.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SettingsTabWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsTabWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.SettingsTabWidget.tabBar().setCursor(QtCore.Qt.PointingHandCursor)
        self.SettingsTabWidget.setStyleSheet("QTabWidget::tab-bar{left: 0px;}\n""QTabBar::tab:first{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 150px;image: url(:/ProfileImg/Res/profile.png);image-position: left center;background-repeat: no;}\n""QTabBar::tab:first:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}\n""QTabBar::tab:last{color: rgb(255,255,255);background-color: rgb(52,152,219);padding: 10px;border: 2px solid rgb(255,255,255);height: 15px; width: 150px;image: url(:/SettingImg/Res/setting.png);image-position: center left;background-repeat: no;}\n""QTabBar::tab:last:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);}")
        self.SettingsTabWidget.setObjectName("SettingsTabWidget")
        self.UsersSettingsTab = QtWidgets.QWidget()
        self.UsersSettingsTab.setObjectName("UsersSettingsTab")
        self.UserTabFame = QtWidgets.QFrame(self.UsersSettingsTab)
        self.UserTabFame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.UserTabFame.setStyleSheet("")
        self.UserTabFame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.UserTabFame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.UserTabFame.setObjectName("UserTabFame")
        self.SettingsUsersAddMinusFrame = QtWidgets.QFrame(self.UserTabFame)
        self.SettingsUsersAddMinusFrame.setGeometry(
            QtCore.QRect(10, 360, 861, 31))
        self.SettingsUsersAddMinusFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.SettingsUsersAddMinusFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsUsersAddMinusFrame.setObjectName(
            "SettingsUsersAddMinusFrame")
        self.SettingsUsersMinusPushButton = QtWidgets.QPushButton(
            self.SettingsUsersAddMinusFrame)
        self.SettingsUsersMinusPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsUsersMinusPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsUsersMinusPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsUsersMinusPushButton.setText("")
        self.SettingsUsersMinusPushButton.setObjectName(
            "SettingsUsersMinusPushButton")
        self.SettingsUsersMinusPushButton.clicked.connect(self.SettingsModule)
        self.SettingsUsersAddPushButton = QtWidgets.QPushButton(
            self.SettingsUsersAddMinusFrame)
        self.SettingsUsersAddPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsUsersAddPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsUsersAddPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsUsersAddPushButton.setText("")
        self.SettingsUsersAddPushButton.setObjectName(
            "SettingsUsersAddPushButton")
        self.SettingsUsersAddPushButton.clicked.connect(self.SettingsModule)
        self.DisableRegisteringNewAccountCheckBox = QtWidgets.QCheckBox(
            self.SettingsUsersAddMinusFrame)
        self.DisableRegisteringNewAccountCheckBox.setEnabled(True)
        self.DisableRegisteringNewAccountCheckBox.setGeometry(
            QtCore.QRect(445, 10, 410, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.DisableRegisteringNewAccountCheckBox.setFont(font)
        self.DisableRegisteringNewAccountCheckBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.DisableRegisteringNewAccountCheckBox.setCheckable(True)
        self.DisableRegisteringNewAccountCheckBox.setChecked(False)
        self.DisableRegisteringNewAccountCheckBox.setObjectName(
            "DisableRegisteringNewAccountCheckBox")
        self.SettingsUserSavePushButton = QtWidgets.QPushButton(
            self.UserTabFame)
        self.SettingsUserSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SettingsUserSavePushButton.setFont(font)
        self.SettingsUserSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsUserSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsUserSavePushButton.setObjectName(
            "SettingsUserSavePushButton")
        self.SettingsUserSavePushButton.clicked.connect(self.SaveButton)
        self.SettingsUserTableWidget = QtWidgets.QTableWidget(self.UserTabFame)
        self.SettingsUserTableWidget.setGeometry(
            QtCore.QRect(10, 10, 861, 351))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsUserTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsUserTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsUserTableWidget.setFont(font)
        self.SettingsUserTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsUserTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsUserTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SettingsUserTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsUserTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsUserTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsUserTableWidget.setAlternatingRowColors(True)
        self.SettingsUserTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsUserTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsUserTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsUserTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsUserTableWidget.setShowGrid(False)
        self.SettingsUserTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsUserTableWidget.setWordWrap(False)
        self.SettingsUserTableWidget.setCornerButtonEnabled(False)
        self.SettingsUserTableWidget.setRowCount(0)
        self.SettingsUserTableWidget.setColumnCount(4)
        self.SettingsUserTableWidget.setObjectName("SettingsUserTableWidget")
        self.SettingsUserTableWidget.doubleClicked.connect(
            self.CallUserAccountCategoryComboBoxMenu)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsUserTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsUserTableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsUserTableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsUserTableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(1, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(1, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(1, 3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsUserTableWidget.setItem(2, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(4, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsUserTableWidget.setItem(5, 3, item)
        self.SettingsUserTableWidget.horizontalHeader().setDefaultSectionSize(215)
        self.SettingsUserTableWidget.horizontalHeader().setMinimumSectionSize(215)
        self.SettingsUserTableWidget.verticalHeader().setVisible(False)
        self.SettingsUserTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsTabWidget.addTab(self.UsersSettingsTab, "")
        self.PreferencesSettingsTab = QtWidgets.QWidget()
        self.PreferencesSettingsTab.setObjectName("PreferencesSettingsTab")
        self.PreferencesFrame = QtWidgets.QFrame(self.PreferencesSettingsTab)
        self.PreferencesFrame.setGeometry(QtCore.QRect(0, 0, 881, 451))
        self.PreferencesFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.PreferencesFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.PreferencesFrame.setObjectName("PreferencesFrame")
        self.SettingsPreferencesAToolBox = QtWidgets.QToolBox(
            self.PreferencesFrame)
        self.SettingsPreferencesAToolBox.setGeometry(
            QtCore.QRect(10, 10, 420, 381))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SettingsPreferencesAToolBox.setFont(font)
        self.SettingsPreferencesAToolBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsPreferencesAToolBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsPreferencesAToolBox.setStyleSheet(
            "QToolBox::tab {background-color: rgb(135,206,250);border-radius: 0px;color: white;}\n""QToolBox::tab:selected {color: white;}")
        self.SettingsPreferencesAToolBox.setObjectName(
            "SettingsPreferencesAToolBox")
        self.CarrierPage = QtWidgets.QWidget()
        self.CarrierPage.setGeometry(QtCore.QRect(0, 0, 420, 253))
        self.CarrierPage.setObjectName("CarrierPage")
        self.SettingsCarrierFrame = QtWidgets.QFrame(self.CarrierPage)
        self.SettingsCarrierFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsCarrierFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsCarrierFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsCarrierFrame.setObjectName("SettingsCarrierFrame")
        self.SettingsMinusCarrierPushButton = QtWidgets.QPushButton(
            self.SettingsCarrierFrame)
        self.SettingsMinusCarrierPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusCarrierPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusCarrierPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusCarrierPushButton.setText("")
        self.SettingsMinusCarrierPushButton.setObjectName(
            "SettingsMinusCarrierPushButton")
        self.SettingsMinusCarrierPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddCarrierPushButton = QtWidgets.QPushButton(
            self.SettingsCarrierFrame)
        self.SettingsAddCarrierPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddCarrierPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddCarrierPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddCarrierPushButton.setText("")
        self.SettingsAddCarrierPushButton.setObjectName(
            "SettingsAddCarrierPushButton")
        self.SettingsAddCarrierPushButton.clicked.connect(self.SettingsModule)
        self.SettingsCarrierTableWidget = QtWidgets.QTableWidget(
            self.CarrierPage)
        self.SettingsCarrierTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsCarrierTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsCarrierTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsCarrierTableWidget.setFont(font)
        self.SettingsCarrierTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsCarrierTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsCarrierTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsCarrierTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsCarrierTableWidget.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.SettingsCarrierTableWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.SettingsCarrierTableWidget.setLineWidth(1)
        self.SettingsCarrierTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsCarrierTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsCarrierTableWidget.setAlternatingRowColors(True)
        self.SettingsCarrierTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsCarrierTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsCarrierTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsCarrierTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsCarrierTableWidget.setShowGrid(False)
        self.SettingsCarrierTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsCarrierTableWidget.setWordWrap(False)
        self.SettingsCarrierTableWidget.setCornerButtonEnabled(False)
        self.SettingsCarrierTableWidget.setRowCount(0)
        self.SettingsCarrierTableWidget.setObjectName(
            "SettingsCarrierTableWidget")
        self.SettingsCarrierTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsCarrierTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsCarrierTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsCarrierTableWidget.setItem(2, 0, item)
        self.SettingsCarrierTableWidget.horizontalHeader().setVisible(False)
        self.SettingsCarrierTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsCarrierTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsCarrierTableWidget.verticalHeader().setVisible(False)
        self.SettingsCarrierTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesAToolBox.addItem(self.CarrierPage, "")
        self.LocationPage = QtWidgets.QWidget()
        self.LocationPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.LocationPage.setObjectName("LocationPage")
        self.SettingsLocationFrame = QtWidgets.QFrame(self.LocationPage)
        self.SettingsLocationFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsLocationFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsLocationFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsLocationFrame.setObjectName("SettingsLocationFrame")
        self.SettingsMinusLocationPushButton = QtWidgets.QPushButton(
            self.SettingsLocationFrame)
        self.SettingsMinusLocationPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusLocationPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusLocationPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusLocationPushButton.setText("")
        self.SettingsMinusLocationPushButton.setObjectName(
            "SettingsMinusLocationPushButton")
        self.SettingsMinusLocationPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddLocationPushButton = QtWidgets.QPushButton(
            self.SettingsLocationFrame)
        self.SettingsAddLocationPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddLocationPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddLocationPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddLocationPushButton.setText("")
        self.SettingsAddLocationPushButton.setObjectName(
            "SettingsAddLocationPushButton")
        self.SettingsAddLocationPushButton.clicked.connect(self.SettingsModule)
        self.SettingsLocationTableWidget = QtWidgets.QTableWidget(
            self.LocationPage)
        self.SettingsLocationTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsLocationTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsLocationTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsLocationTableWidget.setFont(font)
        self.SettingsLocationTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsLocationTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsLocationTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsLocationTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsLocationTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsLocationTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsLocationTableWidget.setAlternatingRowColors(True)
        self.SettingsLocationTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsLocationTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsLocationTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsLocationTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsLocationTableWidget.setShowGrid(False)
        self.SettingsLocationTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsLocationTableWidget.setWordWrap(False)
        self.SettingsLocationTableWidget.setCornerButtonEnabled(False)
        self.SettingsLocationTableWidget.setRowCount(0)
        self.SettingsLocationTableWidget.setObjectName(
            "SettingsLocationTableWidget")
        self.SettingsLocationTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsLocationTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsLocationTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsLocationTableWidget.setItem(2, 0, item)
        self.SettingsLocationTableWidget.horizontalHeader().setVisible(False)
        self.SettingsLocationTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsLocationTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsLocationTableWidget.verticalHeader().setVisible(False)
        self.SettingsLocationTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesAToolBox.addItem(self.LocationPage, "")
        self.DiscountPage = QtWidgets.QWidget()
        self.DiscountPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.DiscountPage.setObjectName("DiscountPage")
        self.SettingsDiscountFrame = QtWidgets.QFrame(self.DiscountPage)
        self.SettingsDiscountFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsDiscountFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsDiscountFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsDiscountFrame.setObjectName("SettingsDiscountFrame")
        self.SettingsMinusDiscountPushButton = QtWidgets.QPushButton(
            self.SettingsDiscountFrame)
        self.SettingsMinusDiscountPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusDiscountPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusDiscountPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusDiscountPushButton.setText("")
        self.SettingsMinusDiscountPushButton.setObjectName(
            "SettingsMinusDiscountPushButton")
        self.SettingsMinusDiscountPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddDiscountPushButton = QtWidgets.QPushButton(
            self.SettingsDiscountFrame)
        self.SettingsAddDiscountPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddDiscountPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddDiscountPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddDiscountPushButton.setText("")
        self.SettingsAddDiscountPushButton.setObjectName(
            "SettingsAddDiscountPushButton")
        self.SettingsAddDiscountPushButton.clicked.connect(self.SettingsModule)
        self.SettingsDiscountTableWidget = QtWidgets.QTableWidget(
            self.DiscountPage)
        self.SettingsDiscountTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsDiscountTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsDiscountTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsDiscountTableWidget.setFont(font)
        self.SettingsDiscountTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsDiscountTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsDiscountTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsDiscountTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsDiscountTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsDiscountTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsDiscountTableWidget.setAlternatingRowColors(True)
        self.SettingsDiscountTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsDiscountTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsDiscountTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsDiscountTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsDiscountTableWidget.setShowGrid(False)
        self.SettingsDiscountTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsDiscountTableWidget.setWordWrap(False)
        self.SettingsDiscountTableWidget.setCornerButtonEnabled(False)
        self.SettingsDiscountTableWidget.setRowCount(0)
        self.SettingsDiscountTableWidget.setObjectName(
            "SettingsDiscountTableWidget")
        self.SettingsDiscountTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsDiscountTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsDiscountTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsDiscountTableWidget.setItem(2, 0, item)
        self.SettingsDiscountTableWidget.horizontalHeader().setVisible(False)
        self.SettingsDiscountTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsDiscountTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsDiscountTableWidget.verticalHeader().setVisible(False)
        self.SettingsDiscountTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesAToolBox.addItem(self.DiscountPage, "")
        self.MeasurementPage = QtWidgets.QWidget()
        self.MeasurementPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.MeasurementPage.setObjectName("MeasurementPage")
        self.SettingsMeasurementFrame = QtWidgets.QFrame(self.MeasurementPage)
        self.SettingsMeasurementFrame.setGeometry(
            QtCore.QRect(0, 210, 420, 65))
        self.SettingsMeasurementFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.SettingsMeasurementFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsMeasurementFrame.setObjectName("SettingsMeasurementFrame")
        self.SettingsMinusMeasurementPushButton = QtWidgets.QPushButton(
            self.SettingsMeasurementFrame)
        self.SettingsMinusMeasurementPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusMeasurementPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusMeasurementPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusMeasurementPushButton.setText("")
        self.SettingsMinusMeasurementPushButton.setObjectName(
            "SettingsMinusMeasurementPushButton")
        self.SettingsMinusMeasurementPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddMeasurementPushButton = QtWidgets.QPushButton(
            self.SettingsMeasurementFrame)
        self.SettingsAddMeasurementPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddMeasurementPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddMeasurementPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsAddMeasurementPushButton.setText("")
        self.SettingsAddMeasurementPushButton.setObjectName(
            "SettingsAddMeasurementPushButton")
        self.SettingsAddMeasurementPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsMeasurementTableWidget = QtWidgets.QTableWidget(
            self.MeasurementPage)
        self.SettingsMeasurementTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsMeasurementTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsMeasurementTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsMeasurementTableWidget.setFont(font)
        self.SettingsMeasurementTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMeasurementTableWidget.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMeasurementTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsMeasurementTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsMeasurementTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsMeasurementTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsMeasurementTableWidget.setAlternatingRowColors(True)
        self.SettingsMeasurementTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsMeasurementTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsMeasurementTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsMeasurementTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsMeasurementTableWidget.setShowGrid(False)
        self.SettingsMeasurementTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsMeasurementTableWidget.setWordWrap(False)
        self.SettingsMeasurementTableWidget.setCornerButtonEnabled(False)
        self.SettingsMeasurementTableWidget.setRowCount(0)
        self.SettingsMeasurementTableWidget.setObjectName(
            "SettingsMeasurementTableWidget")
        self.SettingsMeasurementTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsMeasurementTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsMeasurementTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsMeasurementTableWidget.setItem(2, 0, item)
        self.SettingsMeasurementTableWidget.horizontalHeader().setVisible(False)
        self.SettingsMeasurementTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsMeasurementTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsMeasurementTableWidget.verticalHeader().setVisible(False)
        self.SettingsMeasurementTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesAToolBox.addItem(self.MeasurementPage, "")
        self.SettingsPreferencesBToolBox = QtWidgets.QToolBox(
            self.PreferencesFrame)
        self.SettingsPreferencesBToolBox.setGeometry(
            QtCore.QRect(450, 10, 420, 381))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SettingsPreferencesBToolBox.setFont(font)
        self.SettingsPreferencesBToolBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsPreferencesBToolBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsPreferencesBToolBox.setStyleSheet(
            "QToolBox::tab {background-color: rgb(135,206,250);border-radius: 0px;color: white;}\n""QToolBox::tab:selected {color: white;}")
        self.SettingsPreferencesBToolBox.setObjectName(
            "SettingsPreferencesBToolBox")
        self.PaymentMethodPage = QtWidgets.QWidget()
        self.PaymentMethodPage.setGeometry(QtCore.QRect(0, 0, 420, 253))
        self.PaymentMethodPage.setObjectName("PaymentMethodPage")
        self.SettingsPayMethodFrame = QtWidgets.QFrame(self.PaymentMethodPage)
        self.SettingsPayMethodFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsPayMethodFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsPayMethodFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsPayMethodFrame.setObjectName("SettingsPayMethodFrame")
        self.SettingsMinusPayMethodPushButton = QtWidgets.QPushButton(
            self.SettingsPayMethodFrame)
        self.SettingsMinusPayMethodPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusPayMethodPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusPayMethodPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusPayMethodPushButton.setText("")
        self.SettingsMinusPayMethodPushButton.setObjectName(
            "SettingsMinusPayMethodPushButton")
        self.SettingsMinusPayMethodPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddPayMethodPushButton = QtWidgets.QPushButton(
            self.SettingsPayMethodFrame)
        self.SettingsAddPayMethodPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddPayMethodPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddPayMethodPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsAddPayMethodPushButton.setText("")
        self.SettingsAddPayMethodPushButton.setObjectName(
            "SettingsAddPayMethodPushButton")
        self.SettingsAddPayMethodPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsPayMethodTableWidget = QtWidgets.QTableWidget(
            self.PaymentMethodPage)
        self.SettingsPayMethodTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsPayMethodTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsPayMethodTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsPayMethodTableWidget.setFont(font)
        self.SettingsPayMethodTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsPayMethodTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsPayMethodTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsPayMethodTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsPayMethodTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsPayMethodTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsPayMethodTableWidget.setAlternatingRowColors(True)
        self.SettingsPayMethodTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsPayMethodTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsPayMethodTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsPayMethodTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsPayMethodTableWidget.setShowGrid(False)
        self.SettingsPayMethodTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsPayMethodTableWidget.setWordWrap(False)
        self.SettingsPayMethodTableWidget.setCornerButtonEnabled(False)
        self.SettingsPayMethodTableWidget.setRowCount(0)
        self.SettingsPayMethodTableWidget.setObjectName(
            "SettingsPayMethodTableWidget")
        self.SettingsPayMethodTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsPayMethodTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsPayMethodTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsPayMethodTableWidget.setItem(2, 0, item)
        self.SettingsPayMethodTableWidget.horizontalHeader().setVisible(False)
        self.SettingsPayMethodTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsPayMethodTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsPayMethodTableWidget.verticalHeader().setVisible(False)
        self.SettingsPayMethodTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesBToolBox.addItem(self.PaymentMethodPage, "")
        self.PaymentTermPage = QtWidgets.QWidget()
        self.PaymentTermPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.PaymentTermPage.setObjectName("PaymentTermPage")
        self.SettingsPayTermFrame = QtWidgets.QFrame(self.PaymentTermPage)
        self.SettingsPayTermFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsPayTermFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsPayTermFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsPayTermFrame.setObjectName("SettingsPayTermFrame")
        self.SettingsMinusPayTermPushButton = QtWidgets.QPushButton(
            self.SettingsPayTermFrame)
        self.SettingsMinusPayTermPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusPayTermPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusPayTermPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusPayTermPushButton.setText("")
        self.SettingsMinusPayTermPushButton.setObjectName(
            "SettingsMinusPayTermPushButton")
        self.SettingsMinusPayTermPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddPayTermPushButton = QtWidgets.QPushButton(
            self.SettingsPayTermFrame)
        self.SettingsAddPayTermPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddPayTermPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddPayTermPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddPayTermPushButton.setText("")
        self.SettingsAddPayTermPushButton.setObjectName(
            "SettingsAddPayTermPushButton")
        self.SettingsAddPayTermPushButton.clicked.connect(self.SettingsModule)
        self.SettingsPayTermTableWidget = QtWidgets.QTableWidget(
            self.PaymentTermPage)
        self.SettingsPayTermTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsPayTermTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsPayTermTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsPayTermTableWidget.setFont(font)
        self.SettingsPayTermTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsPayTermTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsPayTermTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsPayTermTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsPayTermTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsPayTermTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsPayTermTableWidget.setAlternatingRowColors(True)
        self.SettingsPayTermTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsPayTermTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsPayTermTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsPayTermTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsPayTermTableWidget.setShowGrid(False)
        self.SettingsPayTermTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsPayTermTableWidget.setWordWrap(False)
        self.SettingsPayTermTableWidget.setCornerButtonEnabled(False)
        self.SettingsPayTermTableWidget.setRowCount(0)
        self.SettingsPayTermTableWidget.setObjectName(
            "SettingsPayTermTableWidget")
        self.SettingsPayTermTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsPayTermTableWidget.setHorizontalHeaderItem(0, item)
        self.SettingsPayTermTableWidget.horizontalHeader().setVisible(False)
        self.SettingsPayTermTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsPayTermTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsPayTermTableWidget.verticalHeader().setVisible(False)
        self.SettingsPayTermTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesBToolBox.addItem(self.PaymentTermPage, "")
        self.CategoryPage = QtWidgets.QWidget()
        self.CategoryPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.CategoryPage.setObjectName("CategoryPage")
        self.SettingsCategoryFrame = QtWidgets.QFrame(self.CategoryPage)
        self.SettingsCategoryFrame.setGeometry(QtCore.QRect(0, 210, 420, 60))
        self.SettingsCategoryFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsCategoryFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsCategoryFrame.setObjectName("SettingsCategoryFrame")
        self.SettingsMinusCategoryPushButton = QtWidgets.QPushButton(
            self.SettingsCategoryFrame)
        self.SettingsMinusCategoryPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusCategoryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusCategoryPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsMinusCategoryPushButton.setText("")
        self.SettingsMinusCategoryPushButton.setObjectName(
            "SettingsMinusCategoryPushButton")
        self.SettingsMinusCategoryPushButton.clicked.connect(
            self.SettingsModule)
        self.SettingsAddCategoryPushButton = QtWidgets.QPushButton(
            self.SettingsCategoryFrame)
        self.SettingsAddCategoryPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddCategoryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddCategoryPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddCategoryPushButton.setText("")
        self.SettingsAddCategoryPushButton.setObjectName(
            "SettingsAddCategoryPushButton")
        self.SettingsAddCategoryPushButton.clicked.connect(self.SettingsModule)
        self.SettingsCategoryTableWidget = QtWidgets.QTableWidget(
            self.CategoryPage)
        self.SettingsCategoryTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsCategoryTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsCategoryTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsCategoryTableWidget.setFont(font)
        self.SettingsCategoryTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsCategoryTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsCategoryTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsCategoryTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsCategoryTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsCategoryTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsCategoryTableWidget.setAlternatingRowColors(True)
        self.SettingsCategoryTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsCategoryTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsCategoryTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsCategoryTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsCategoryTableWidget.setShowGrid(False)
        self.SettingsCategoryTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsCategoryTableWidget.setWordWrap(False)
        self.SettingsCategoryTableWidget.setCornerButtonEnabled(False)
        self.SettingsCategoryTableWidget.setRowCount(0)
        self.SettingsCategoryTableWidget.setObjectName(
            "SettingsCategoryTableWidget")
        self.SettingsCategoryTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsCategoryTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsCategoryTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsCategoryTableWidget.setItem(2, 0, item)
        self.SettingsCategoryTableWidget.horizontalHeader().setVisible(False)
        self.SettingsCategoryTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsCategoryTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsCategoryTableWidget.verticalHeader().setVisible(False)
        self.SettingsCategoryTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesBToolBox.addItem(self.CategoryPage, "")
        self.TaxingPage = QtWidgets.QWidget()
        self.TaxingPage.setGeometry(QtCore.QRect(0, 0, 100, 30))
        self.TaxingPage.setObjectName("TaxingPage")
        self.SettingsTaxingFrame = QtWidgets.QFrame(self.TaxingPage)
        self.SettingsTaxingFrame.setGeometry(QtCore.QRect(0, 210, 420, 65))
        self.SettingsTaxingFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsTaxingFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsTaxingFrame.setObjectName("SettingsTaxingFrame")
        self.SettingsMinusTaxingPushButton = QtWidgets.QPushButton(
            self.SettingsTaxingFrame)
        self.SettingsMinusTaxingPushButton.setGeometry(
            QtCore.QRect(40, 5, 20, 20))
        self.SettingsMinusTaxingPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsMinusTaxingPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsMinusTaxingPushButton.setText("")
        self.SettingsMinusTaxingPushButton.setObjectName(
            "SettingsMinusTaxingPushButton")
        self.SettingsMinusTaxingPushButton.clicked.connect(self.SettingsModule)
        self.SettingsAddTaxingPushButton = QtWidgets.QPushButton(
            self.SettingsTaxingFrame)
        self.SettingsAddTaxingPushButton.setGeometry(
            QtCore.QRect(10, 5, 20, 20))
        self.SettingsAddTaxingPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsAddTaxingPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsAddTaxingPushButton.setText("")
        self.SettingsAddTaxingPushButton.setObjectName(
            "SettingsAddTaxingPushButton")
        self.SettingsAddTaxingPushButton.clicked.connect(self.SettingsModule)
        self.SettingsTaxingTableWidget = QtWidgets.QTableWidget(
            self.TaxingPage)
        self.SettingsTaxingTableWidget.setGeometry(
            QtCore.QRect(0, 0, 420, 211))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SettingsTaxingTableWidget.sizePolicy().hasHeightForWidth())
        self.SettingsTaxingTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SettingsTaxingTableWidget.setFont(font)
        self.SettingsTaxingTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsTaxingTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingsTaxingTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SettingsTaxingTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SettingsTaxingTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SettingsTaxingTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.DoubleClicked)
        self.SettingsTaxingTableWidget.setAlternatingRowColors(True)
        self.SettingsTaxingTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SettingsTaxingTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SettingsTaxingTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsTaxingTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SettingsTaxingTableWidget.setShowGrid(False)
        self.SettingsTaxingTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SettingsTaxingTableWidget.setWordWrap(False)
        self.SettingsTaxingTableWidget.setCornerButtonEnabled(False)
        self.SettingsTaxingTableWidget.setRowCount(0)
        self.SettingsTaxingTableWidget.setObjectName(
            "SettingsTaxingTableWidget")
        self.SettingsTaxingTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SettingsTaxingTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SettingsTaxingTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SettingsTaxingTableWidget.setItem(2, 0, item)
        self.SettingsTaxingTableWidget.horizontalHeader().setVisible(False)
        self.SettingsTaxingTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SettingsTaxingTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SettingsTaxingTableWidget.verticalHeader().setVisible(False)
        self.SettingsTaxingTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SettingsPreferencesBToolBox.addItem(self.TaxingPage, "")
        self.SettingsReferenceSavePushButton = QtWidgets.QPushButton(
            self.PreferencesFrame)
        self.SettingsReferenceSavePushButton.setGeometry(
            QtCore.QRect(10, 400, 861, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SettingsReferenceSavePushButton.setFont(font)
        self.SettingsReferenceSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingsReferenceSavePushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SettingsReferenceSavePushButton.setObjectName(
            "SettingsReferenceSavePushButton")
        self.SettingsReferenceSavePushButton.clicked.connect(self.SaveButton)
        self.SettingsTabWidget.addTab(self.PreferencesSettingsTab, "")
        self.SettingsFrameTitle = QtWidgets.QFrame(self.SettingsFrame)
        self.SettingsFrameTitle.setGeometry(QtCore.QRect(10, 9, 531, 35))
        self.SettingsFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SettingsFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SettingsFrameTitle.setObjectName("SettingsFrameTitle")
        self.SettingsLabelTitle = QtWidgets.QLabel(self.SettingsFrameTitle)
        self.SettingsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SettingsLabelTitle.setFont(font)
        self.SettingsLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.SettingsLabelTitle.setObjectName("SettingsLabelTitle")
        self.AdminLoginAccountSettingsFrame = QtWidgets.QFrame(
            self.SettingsFrame)
        self.AdminLoginAccountSettingsFrame.setGeometry(
            QtCore.QRect(10, 9, 881, 488))
        self.AdminLoginAccountSettingsFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.AdminLoginAccountSettingsFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.AdminLoginAccountSettingsFrame.setObjectName(
            "AdminLoginAccountSettingsFrame")
        self.AdminLoginPasswordFrameLoginUI = QtWidgets.QFrame(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginPasswordFrameLoginUI.setGeometry(
            QtCore.QRect(251, 220, 350, 50))
        self.AdminLoginPasswordFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.AdminLoginPasswordFrameLoginUI.setFrameShadow(
            QtWidgets.QFrame.Plain)
        self.AdminLoginPasswordFrameLoginUI.setObjectName(
            "AdminLoginPasswordFrameLoginUI")
        self.AdminLoginPasswordLineEditLoginUI = QtWidgets.QLineEdit(
            self.AdminLoginPasswordFrameLoginUI)
        self.AdminLoginPasswordLineEditLoginUI.setGeometry(
            QtCore.QRect(105, 7, 231, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AdminLoginPasswordLineEditLoginUI.setFont(font)
        self.AdminLoginPasswordLineEditLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AdminLoginPasswordLineEditLoginUI.setEchoMode(
            QtWidgets.QLineEdit.Password)
        self.AdminLoginPasswordLineEditLoginUI.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AdminLoginPasswordLineEditLoginUI.setObjectName(
            "AdminLoginPasswordLineEditLoginUI")
        self.AdminLoginPasswordLabelLoginUI = QtWidgets.QPushButton(
            self.AdminLoginPasswordFrameLoginUI)
        self.AdminLoginPasswordLabelLoginUI.setGeometry(
            QtCore.QRect(5, 8, 90, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AdminLoginPasswordLabelLoginUI.setFont(font)
        self.AdminLoginPasswordLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.AdminLoginPasswordLabelLoginUI.setObjectName(
            "AdminLoginPasswordLabelLoginUI")
        self.AdminLoginUsernameFrameLoginUI = QtWidgets.QFrame(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginUsernameFrameLoginUI.setGeometry(
            QtCore.QRect(251, 159, 350, 50))
        self.AdminLoginUsernameFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.AdminLoginUsernameFrameLoginUI.setFrameShadow(
            QtWidgets.QFrame.Plain)
        self.AdminLoginUsernameFrameLoginUI.setObjectName(
            "AdminLoginUsernameFrameLoginUI")
        self.AdminLoginUsernameLineEditLoginUI = QtWidgets.QLineEdit(
            self.AdminLoginUsernameFrameLoginUI)
        self.AdminLoginUsernameLineEditLoginUI.setGeometry(
            QtCore.QRect(105, 7, 231, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.AdminLoginUsernameLineEditLoginUI.setFont(font)
        self.AdminLoginUsernameLineEditLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AdminLoginUsernameLineEditLoginUI.setAlignment(
            QtCore.Qt.AlignCenter)
        self.AdminLoginUsernameLineEditLoginUI.setObjectName(
            "AdminLoginUsernameLineEditLoginUI")
        self.AdminLoginUsernameLabelLoginUI = QtWidgets.QPushButton(
            self.AdminLoginUsernameFrameLoginUI)
        self.AdminLoginUsernameLabelLoginUI.setGeometry(
            QtCore.QRect(5, 8, 90, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AdminLoginUsernameLabelLoginUI.setFont(font)
        self.AdminLoginUsernameLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.AdminLoginUsernameLabelLoginUI.setObjectName(
            "AdminLoginUsernameLabelLoginUI")
        self.AdminLoginUsernameIconLabelLoginUI = QtWidgets.QLabel(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginUsernameIconLabelLoginUI.setGeometry(
            QtCore.QRect(600, 159, 50, 50))
        self.AdminLoginUsernameIconLabelLoginUI.setText("")
        self.AdminLoginUsernameIconLabelLoginUI.setObjectName(
            "AdminLoginUsernameIconLabelLoginUI")
        self.AdminLoginPasswordIconLabelLoginUI = QtWidgets.QLabel(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginPasswordIconLabelLoginUI.setGeometry(
            QtCore.QRect(600, 220, 50, 50))
        self.AdminLoginPasswordIconLabelLoginUI.setText("")
        self.AdminLoginPasswordIconLabelLoginUI.setObjectName(
            "AdminLoginPasswordIconLabelLoginUI")
        self.AdminValidateLoginPushButtonLoginUI = QtWidgets.QPushButton(
            self.AdminLoginAccountSettingsFrame)
        self.AdminValidateLoginPushButtonLoginUI.setGeometry(
            QtCore.QRect(250, 298, 400, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.AdminValidateLoginPushButtonLoginUI.setFont(font)
        self.AdminValidateLoginPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.AdminValidateLoginPushButtonLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.AdminValidateLoginPushButtonLoginUI.setObjectName(
            "AdminValidateLoginPushButtonLoginUI")
        self.AdminValidateLoginPushButtonLoginUI.clicked.connect(
            self.MainGUIUserLogin)
        self.AdminLoginLabel = QtWidgets.QLabel(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginLabel.setGeometry(QtCore.QRect(250, 110, 391, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.AdminLoginLabel.setFont(font)
        self.AdminLoginLabel.setObjectName("AdminLoginLabel")
        self.AdminLoginErrorLabel = QtWidgets.QLabel(
            self.AdminLoginAccountSettingsFrame)
        self.AdminLoginErrorLabel.setGeometry(QtCore.QRect(250, 358, 540, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.AdminLoginErrorLabel.setFont(font)
        self.AdminLoginErrorLabel.setText("")
        self.AdminLoginErrorLabel.setObjectName("AdminLoginErrorLabel")
        self.ReportsFrame = QtWidgets.QFrame(self.MainFrame)
        self.ReportsFrame.setGeometry(QtCore.QRect(80, 73, 900, 506))
        self.ReportsFrame.setMinimumSize(QtCore.QSize(900, 506))
        self.ReportsFrame.setMaximumSize(QtCore.QSize(900, 506))
        self.ReportsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportsFrame.setObjectName("ReportsFrame")
        self.ReportsFrameTitle = QtWidgets.QFrame(self.ReportsFrame)
        self.ReportsFrameTitle.setGeometry(QtCore.QRect(10, 9, 879, 38))
        self.ReportsFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportsFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportsFrameTitle.setObjectName("ReportsFrameTitle")
        self.ReportsLabelTitle = QtWidgets.QLabel(self.ReportsFrameTitle)
        self.ReportsLabelTitle.setGeometry(QtCore.QRect(10, 7, 201, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsLabelTitle.setFont(font)
        self.ReportsLabelTitle.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.ReportsLabelTitle.setObjectName("ReportsLabelTitle")
        self.ReportsShowFrame = QtWidgets.QFrame(self.ReportsFrame)
        self.ReportsShowFrame.setGeometry(QtCore.QRect(10, 46, 881, 451))
        self.ReportsShowFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportsShowFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportsShowFrame.setObjectName("ReportsShowFrame")
        self.ReportsMenuFrame = QtWidgets.QFrame(self.ReportsShowFrame)
        self.ReportsMenuFrame.setGeometry(QtCore.QRect(10, 10, 861, 431))
        self.ReportsMenuFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportsMenuFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportsMenuFrame.setObjectName("ReportsMenuFrame")
        self.ReportsSalesOrderSummaryPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsSalesOrderSummaryPushButton.setGeometry(
            QtCore.QRect(0, 216, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderSummaryPushButton.setFont(font)
        self.ReportsSalesOrderSummaryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderSummaryPushButton.setObjectName(
            "ReportsSalesOrderSummaryPushButton")
        self.ReportsSalesOrderProfitPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsSalesOrderProfitPushButton.setGeometry(
            QtCore.QRect(0, 243, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderProfitPushButton.setFont(font)
        self.ReportsSalesOrderProfitPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderProfitPushButton.setObjectName(
            "ReportsSalesOrderProfitPushButton")
        self.ReportsCustomerPaymentSummaryPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsCustomerPaymentSummaryPushButton.setGeometry(
            QtCore.QRect(0, 270, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentSummaryPushButton.setFont(font)
        self.ReportsCustomerPaymentSummaryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentSummaryPushButton.setFlat(True)
        self.ReportsCustomerPaymentSummaryPushButton.setObjectName(
            "ReportsCustomerPaymentSummaryPushButton")
        self.ReportsCustomerPaymentDetailsPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsCustomerPaymentDetailsPushButton.setGeometry(
            QtCore.QRect(0, 297, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentDetailsPushButton.setFont(font)
        self.ReportsCustomerPaymentDetailsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentDetailsPushButton.setObjectName(
            "ReportsCustomerPaymentDetailsPushButton")
        self.ReportsProductOrderedByCustomerPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsProductOrderedByCustomerPushButton.setGeometry(
            QtCore.QRect(0, 108, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsProductOrderedByCustomerPushButton.setFont(font)
        self.ReportsProductOrderedByCustomerPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductOrderedByCustomerPushButton.setObjectName(
            "ReportsProductOrderedByCustomerPushButton")
        self.ReportsCustomerListPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsCustomerListPushButton.setGeometry(
            QtCore.QRect(0, 324, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerListPushButton.setFont(font)
        self.ReportsCustomerListPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerListPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ReportsCustomerListPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerListPushButton.setObjectName(
            "ReportsCustomerListPushButton")
        self.ReportsPurchaseOrderSummaryPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderSummaryPushButton.setGeometry(
            QtCore.QRect(0, 352, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderSummaryPushButton.setFont(font)
        self.ReportsPurchaseOrderSummaryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderSummaryPushButton.setObjectName(
            "ReportsPurchaseOrderSummaryPushButton")
        self.ReportsPurchaseOrderDetailsPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderDetailsPushButton.setGeometry(
            QtCore.QRect(0, 380, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderDetailsPushButton.setFont(font)
        self.ReportsPurchaseOrderDetailsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderDetailsPushButton.setObjectName(
            "ReportsPurchaseOrderDetailsPushButton")
        self.ReportsPurchaseOrderStatusPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderStatusPushButton.setGeometry(
            QtCore.QRect(0, 408, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderStatusPushButton.setFont(font)
        self.ReportsPurchaseOrderStatusPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderStatusPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderStatusPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderStatusPushButton.setObjectName(
            "ReportsPurchaseOrderStatusPushButton")
        self.ReportsVendorPaymentDetailsPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsVendorPaymentDetailsPushButton.setGeometry(
            QtCore.QRect(0, 135, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorPaymentDetailsPushButton.setFont(font)
        self.ReportsVendorPaymentDetailsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorPaymentDetailsPushButton.setObjectName(
            "ReportsVendorPaymentDetailsPushButton")
        self.ReportsVendorProductListPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsVendorProductListPushButton.setGeometry(
            QtCore.QRect(0, 162, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorProductListPushButton.setFont(font)
        self.ReportsVendorProductListPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorProductListPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorProductListPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorProductListPushButton.setCheckable(False)
        self.ReportsVendorProductListPushButton.setChecked(False)
        self.ReportsVendorProductListPushButton.setObjectName(
            "ReportsVendorProductListPushButton")
        self.ReportsVendorListPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsVendorListPushButton.setGeometry(
            QtCore.QRect(0, 189, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorListPushButton.setFont(font)
        self.ReportsVendorListPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorListPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ReportsVendorListPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorListPushButton.setObjectName(
            "ReportsVendorListPushButton")
        self.ReportsInventorySummaryPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsInventorySummaryPushButton.setGeometry(
            QtCore.QRect(0, 0, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventorySummaryPushButton.setFont(font)
        self.ReportsInventorySummaryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventorySummaryPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventorySummaryPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventorySummaryPushButton.setObjectName(
            "ReportsInventorySummaryPushButton")
        self.ReportsInventoryDetailsPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsInventoryDetailsPushButton.setGeometry(
            QtCore.QRect(0, 27, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryDetailsPushButton.setFont(font)
        self.ReportsInventoryDetailsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryDetailsPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryDetailsPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryDetailsPushButton.setObjectName(
            "ReportsInventoryDetailsPushButton")
        self.ReportsInventoryByLocationPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsInventoryByLocationPushButton.setGeometry(
            QtCore.QRect(0, 54, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryByLocationPushButton.setFont(font)
        self.ReportsInventoryByLocationPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryByLocationPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryByLocationPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryByLocationPushButton.setObjectName(
            "ReportsInventoryByLocationPushButton")
        self.ReportsProductPriceListPushButton = QtWidgets.QPushButton(
            self.ReportsMenuFrame)
        self.ReportsProductPriceListPushButton.setGeometry(
            QtCore.QRect(0, 81, 215, 24))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsProductPriceListPushButton.setFont(font)
        self.ReportsProductPriceListPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductPriceListPushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductPriceListPushButton.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductPriceListPushButton.setObjectName(
            "ReportsProductPriceListPushButton")
        self.ReportsInventorySummaryFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsInventorySummaryFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsInventorySummaryFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventorySummaryFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventorySummaryFilterFrame.setObjectName(
            "ReportsInventorySummaryFilterFrame")
        self.ReportsInventorySummaryFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 0, 24, 24))
        self.ReportsInventorySummaryFilterArrowPushButton.setText("")
        self.ReportsInventorySummaryFilterArrowPushButton.setObjectName(
            "ReportsInventorySummaryFilterArrowPushButton")
        self.ReportsInventorySummaryFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsInventorySummaryFilterTitleLabel.setFont(font)
        self.ReportsInventorySummaryFilterTitleLabel.setObjectName(
            "ReportsInventorySummaryFilterTitleLabel")
        self.ReportsInventorySummaryFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventorySummaryFilterCategoryLabel.setFont(font)
        self.ReportsInventorySummaryFilterCategoryLabel.setObjectName(
            "ReportsInventorySummaryFilterCategoryLabel")
        self.ReportsInventorySummaryFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventorySummaryFilterByProductsLabel.setFont(font)
        self.ReportsInventorySummaryFilterByProductsLabel.setObjectName(
            "ReportsInventorySummaryFilterByProductsLabel")
        self.ReportsInventorySummaryFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventorySummaryFilterByProductsComboBox.setFont(font)
        self.ReportsInventorySummaryFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventorySummaryFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventorySummaryFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventorySummaryFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsInventorySummaryFilterByProductsComboBox.setEditable(False)
        self.ReportsInventorySummaryFilterByProductsComboBox.clear()
        self.ReportsInventorySummaryFilterByProductsComboBox.addItem("")
        self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventorySummaryFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsInventorySummaryFilterByProductsComboBox.setMaximumWidth(
            195)
        self.ReportsInventorySummaryFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsInventorySummaryFilterByProductsComboBox.setObjectName(
            "ReportsInventorySummaryFilterByProductsComboBox")
        self.ReportsInventorySummaryFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventorySummaryFilterByProductsComboBox.currentText()))
        self.ReportsInventorySummaryFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventorySummaryFilterByProductsComboBox.currentText()))
        self.ReportsInventorySummaryFilterByLabel = QtWidgets.QLabel(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 110, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventorySummaryFilterByLabel.setFont(font)
        self.ReportsInventorySummaryFilterByLabel.setObjectName(
            "ReportsInventorySummaryFilterByLabel")
        self.ReportsInventorySummaryFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 200, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventorySummaryFilterGeneratePushButton.setFont(font)
        self.ReportsInventorySummaryFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventorySummaryFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventorySummaryFilterGeneratePushButton.setObjectName(
            "ReportsInventorySummaryFilterGeneratePushButton")
        self.ReportsInventorySummaryFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsInventorySummaryFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsInventorySummaryFilterFrame)
        self.ReportsInventorySummaryFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsInventorySummaryFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventorySummaryFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventorySummaryFilterSplitterFrame.setObjectName(
            "ReportsInventorySummaryFilterSplitterFrame")
        self.ReportsInventoryDetailsFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsInventoryDetailsFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsInventoryDetailsFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventoryDetailsFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventoryDetailsFilterFrame.setObjectName(
            "ReportsInventoryDetailsFilterFrame")
        self.ReportsInventoryDetailsFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 27, 24, 24))
        self.ReportsInventoryDetailsFilterArrowPushButton.setText("")
        self.ReportsInventoryDetailsFilterArrowPushButton.setObjectName(
            "ReportsInventoryDetailsFilterArrowPushButton")
        self.ReportsInventoryDetailsFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsInventoryDetailsFilterTitleLabel.setFont(font)
        self.ReportsInventoryDetailsFilterTitleLabel.setObjectName(
            "ReportsInventoryDetailsFilterTitleLabel")
        self.ReportsInventoryDetailsFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryDetailsFilterCategoryLabel.setFont(font)
        self.ReportsInventoryDetailsFilterCategoryLabel.setObjectName(
            "ReportsInventoryDetailsFilterCategoryLabel")
        self.ReportsInventoryDetailsFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryDetailsFilterByProductsLabel.setFont(font)
        self.ReportsInventoryDetailsFilterByProductsLabel.setObjectName(
            "ReportsInventoryDetailsFilterByProductsLabel")
        self.ReportsInventoryDetailsFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setFont(font)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryDetailsFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsInventoryDetailsFilterByProductsComboBox.setEditable(False)
        self.ReportsInventoryDetailsFilterByProductsComboBox.clear()
        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem("")
        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventoryDetailsFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsInventoryDetailsFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsInventoryDetailsFilterByProductsComboBox.setObjectName(
            "ReportsInventoryDetailsFilterByProductsComboBox")
        self.ReportsInventoryDetailsFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryDetailsFilterByProductsComboBox.currentText()))
        self.ReportsInventoryDetailsFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryDetailsFilterByProductsComboBox.currentText()))
        self.ReportsInventoryDetailsFilterByLabel = QtWidgets.QLabel(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryDetailsFilterByLabel.setFont(font)
        self.ReportsInventoryDetailsFilterByLabel.setObjectName(
            "ReportsInventoryDetailsFilterByLabel")
        self.ReportsInventoryDetailsFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 240, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryDetailsFilterGeneratePushButton.setFont(font)
        self.ReportsInventoryDetailsFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryDetailsFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryDetailsFilterGeneratePushButton.setObjectName(
            "ReportsInventoryDetailsFilterGeneratePushButton")
        self.ReportsInventoryDetailsFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsInventoryDetailsFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsInventoryDetailsFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventoryDetailsFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventoryDetailsFilterSplitterFrame.setObjectName(
            "ReportsInventoryDetailsFilterSplitterFrame")
        self.ReportsInventoryDetailsFilterByLocationComboBox = QtWidgets.QComboBox(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setFont(font)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryDetailsFilterByLocationComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsInventoryDetailsFilterByLocationComboBox.setEditable(False)
        self.ReportsInventoryDetailsFilterByLocationComboBox.clear()
        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem("")
        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
            "All Items")
        self.ReportsInventoryDetailsFilterByLocationComboBox.addItem(
            "Custom Select Items")
        self.ReportsInventoryDetailsFilterByLocationComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsInventoryDetailsFilterByLocationComboBox.setObjectName(
            "ReportsInventoryDetailsFilterByLocationComboBox")
        self.ReportsInventoryDetailsFilterByLocationComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryDetailsFilterByLocationComboBox.currentText()))
        self.ReportsInventoryDetailsFilterByLocationComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryDetailsFilterByLocationComboBox.currentText()))
        self.ReportsInventoryDetailsFilterByLocationLabel = QtWidgets.QLabel(
            self.ReportsInventoryDetailsFilterFrame)
        self.ReportsInventoryDetailsFilterByLocationLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryDetailsFilterByLocationLabel.setFont(font)
        self.ReportsInventoryDetailsFilterByLocationLabel.setObjectName(
            "ReportsInventoryDetailsFilterByLocationLabel")
        self.ReportsInventoryByLocationFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsInventoryByLocationFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsInventoryByLocationFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventoryByLocationFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventoryByLocationFilterFrame.setObjectName(
            "ReportsInventoryByLocationFilterFrame")
        self.ReportsInventoryByLocationFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 54, 24, 24))
        self.ReportsInventoryByLocationFilterArrowPushButton.setText("")
        self.ReportsInventoryByLocationFilterArrowPushButton.setObjectName(
            "ReportsInventoryByLocationFilterArrowPushButton")
        self.ReportsInventoryByLocationFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsInventoryByLocationFilterTitleLabel.setFont(font)
        self.ReportsInventoryByLocationFilterTitleLabel.setObjectName(
            "ReportsInventoryByLocationFilterTitleLabel")
        self.ReportsInventoryByLocationFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryByLocationFilterCategoryLabel.setFont(font)
        self.ReportsInventoryByLocationFilterCategoryLabel.setObjectName(
            "ReportsInventoryByLocationFilterCategoryLabel")
        self.ReportsInventoryByLocationFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryByLocationFilterByProductsLabel.setFont(font)
        self.ReportsInventoryByLocationFilterByProductsLabel.setObjectName(
            "ReportsInventoryByLocationFilterByProductsLabel")
        self.ReportsInventoryByLocationFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setFont(font)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryByLocationFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsInventoryByLocationFilterByProductsComboBox.setEditable(
            False)
        self.ReportsInventoryByLocationFilterByProductsComboBox.clear()
        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem("")
        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsInventoryByLocationFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsInventoryByLocationFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsInventoryByLocationFilterByProductsComboBox.setObjectName(
            "ReportsInventoryByLocationFilterByProductsComboBox")
        self.ReportsInventoryByLocationFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryByLocationFilterByProductsComboBox.currentText()))
        self.ReportsInventoryByLocationFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryByLocationFilterByProductsComboBox.currentText()))
        self.ReportsInventoryByLocationFilterByLabel = QtWidgets.QLabel(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryByLocationFilterByLabel.setFont(font)
        self.ReportsInventoryByLocationFilterByLabel.setObjectName(
            "ReportsInventoryByLocationFilterByLabel")
        self.ReportsInventoryByLocationFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 240, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryByLocationFilterGeneratePushButton.setFont(font)
        self.ReportsInventoryByLocationFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryByLocationFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryByLocationFilterGeneratePushButton.setObjectName(
            "ReportsInventoryByLocationFilterGeneratePushButton")
        self.ReportsInventoryByLocationFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsInventoryByLocationFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsInventoryByLocationFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsInventoryByLocationFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsInventoryByLocationFilterSplitterFrame.setObjectName(
            "ReportsInventoryByLocationFilterSplitterFrame")
        self.ReportsInventoryByLocationFilterByLocationComboBox = QtWidgets.QComboBox(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setFont(font)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsInventoryByLocationFilterByLocationComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsInventoryByLocationFilterByLocationComboBox.setEditable(
            False)
        self.ReportsInventoryByLocationFilterByLocationComboBox.clear()
        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem("")
        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
            "All Items")
        self.ReportsInventoryByLocationFilterByLocationComboBox.addItem(
            "Custom Select Items")
        self.ReportsInventoryByLocationFilterByLocationComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsInventoryByLocationFilterByLocationComboBox.setObjectName(
            "ReportsInventoryByLocationFilterByLocationComboBox")
        self.ReportsInventoryByLocationFilterByLocationComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryByLocationFilterByLocationComboBox.currentText()))
        self.ReportsInventoryByLocationFilterByLocationComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsInventoryByLocationFilterByLocationComboBox.currentText()))
        self.ReportsInventoryByLocationFilterByLocationLabel = QtWidgets.QLabel(
            self.ReportsInventoryByLocationFilterFrame)
        self.ReportsInventoryByLocationFilterByLocationLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsInventoryByLocationFilterByLocationLabel.setFont(font)
        self.ReportsInventoryByLocationFilterByLocationLabel.setObjectName(
            "ReportsInventoryByLocationFilterByLocationLabel")
        self.ReportsProductPriceListFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsProductPriceListFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsProductPriceListFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsProductPriceListFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsProductPriceListFilterFrame.setObjectName(
            "ReportsProductPriceListFilterFrame")
        self.ReportsProductPriceListFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 81, 24, 24))
        self.ReportsProductPriceListFilterArrowPushButton.setText("")
        self.ReportsProductPriceListFilterArrowPushButton.setObjectName(
            "ReportsProductPriceListFilterArrowPushButton")
        self.ReportsProductPriceListFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsProductPriceListFilterTitleLabel.setFont(font)
        self.ReportsProductPriceListFilterTitleLabel.setObjectName(
            "ReportsProductPriceListFilterTitleLabel")
        self.ReportsProductPriceListFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductPriceListFilterCategoryLabel.setFont(font)
        self.ReportsProductPriceListFilterCategoryLabel.setObjectName(
            "ReportsProductPriceListFilterCategoryLabel")
        self.ReportsProductPriceListFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductPriceListFilterByProductsLabel.setFont(font)
        self.ReportsProductPriceListFilterByProductsLabel.setObjectName(
            "ReportsProductPriceListFilterByProductsLabel")
        self.ReportsProductPriceListFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsProductPriceListFilterByProductsComboBox.setFont(font)
        self.ReportsProductPriceListFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductPriceListFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductPriceListFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductPriceListFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsProductPriceListFilterByProductsComboBox.setEditable(False)
        self.ReportsProductPriceListFilterByProductsComboBox.clear()
        self.ReportsProductPriceListFilterByProductsComboBox.addItem("")
        self.ReportsProductPriceListFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsProductPriceListFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsProductPriceListFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsProductPriceListFilterByProductsComboBox.setObjectName(
            "ReportsProductPriceListFilterByProductsComboBox")
        self.ReportsProductPriceListFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductPriceListFilterByProductsComboBox.currentText()))
        self.ReportsProductPriceListFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductPriceListFilterByProductsComboBox.currentText()))
        self.ReportsProductPriceListFilterByLabel = QtWidgets.QLabel(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductPriceListFilterByLabel.setFont(font)
        self.ReportsProductPriceListFilterByLabel.setObjectName(
            "ReportsProductPriceListFilterByLabel")
        self.ReportsProductPriceListFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 200, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductPriceListFilterGeneratePushButton.setFont(font)
        self.ReportsProductPriceListFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductPriceListFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductPriceListFilterGeneratePushButton.setObjectName(
            "ReportsProductPriceListFilterGeneratePushButton")
        self.ReportsProductPriceListFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsProductPriceListFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsProductPriceListFilterFrame)
        self.ReportsProductPriceListFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsProductPriceListFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsProductPriceListFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsProductPriceListFilterSplitterFrame.setObjectName(
            "ReportsProductPriceListFilterSplitterFrame")
        self.ReportsProductOrderedByCustomerFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsProductOrderedByCustomerFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsProductOrderedByCustomerFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsProductOrderedByCustomerFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsProductOrderedByCustomerFilterFrame.setObjectName(
            "ReportsProductOrderedByCustomerFilterFrame")
        self.ReportsProductOrderedByCustomerFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 108, 24, 24))
        self.ReportsProductOrderedByCustomerFilterArrowPushButton.setText("")
        self.ReportsProductOrderedByCustomerFilterArrowPushButton.setObjectName(
            "ReportsProductOrderedByCustomerFilterArrowPushButton")
        self.ReportsProductOrderedByCustomerFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsProductOrderedByCustomerFilterTitleLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterTitleLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterTitleLabel")
        self.ReportsProductOrderedByCustomerFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterCategoryLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterCategoryLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterCategoryLabel")
        self.ReportsProductOrderedByCustomerFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByProductsLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterByProductsLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterByProductsLabel")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setEditable(
            False)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.clear()
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.setObjectName(
            "ReportsProductOrderedByCustomerFilterByProductsComboBox")
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentText()))
        self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductOrderedByCustomerFilterByProductsComboBox.currentText()))
        self.ReportsProductOrderedByCustomerFilterByLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterByLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterByLabel")
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setObjectName(
            "ReportsProductOrderedByCustomerFilterGeneratePushButton")
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsProductOrderedByCustomerFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsProductOrderedByCustomerFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsProductOrderedByCustomerFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsProductOrderedByCustomerFilterSplitterFrame.setObjectName(
            "ReportsProductOrderedByCustomerFilterSplitterFrame")
        self.ReportsProductOrderedByCustomerFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterByDateFromLabel")
        self.ReportsProductOrderedByCustomerFilterByPayStatusLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterByPayStatusLabel")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox = QtWidgets.QComboBox(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setEditable(
            False)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.clear()
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.addItem(
            "Custom Select Items")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.setObjectName(
            "ReportsProductOrderedByCustomerFilterByPayStatusComboBox")
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentText()))
        self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsProductOrderedByCustomerFilterByPayStatusComboBox.currentText()))
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setObjectName(
            "ReportsProductOrderedByCustomerFilterByDateFromComboBox")
        self.ReportsProductOrderedByCustomerFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByDateToLabel.setFont(font)
        self.ReportsProductOrderedByCustomerFilterByDateToLabel.setObjectName(
            "ReportsProductOrderedByCustomerFilterByDateToLabel")
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsProductOrderedByCustomerFilterFrame)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setFont(
            font)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setMaximumDate(
            QtCore.QDate(7999, 12, 28))
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setMaximumTime(
            QtCore.QTime(23, 59, 59))
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setObjectName(
            "ReportsProductOrderedByCustomerFilterByDateToComboBox")
        self.ReportsVendorPaymentDetailsFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsVendorPaymentDetailsFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsVendorPaymentDetailsFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorPaymentDetailsFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorPaymentDetailsFilterFrame.setObjectName(
            "ReportsVendorPaymentDetailsFilterFrame")
        self.ReportsVendorPaymentDetailsArrowPushButton = QtWidgets.QPushButton(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsArrowPushButton.setGeometry(
            QtCore.QRect(0, 135, 24, 24))
        self.ReportsVendorPaymentDetailsArrowPushButton.setText("")
        self.ReportsVendorPaymentDetailsArrowPushButton.setObjectName(
            "ReportsVendorPaymentDetailsArrowPushButton")
        self.ReportsVendorPaymentDetailsFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsVendorPaymentDetailsFilterTitleLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterTitleLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterTitleLabel")
        self.ReportsVendorPaymentDetailsFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterCategoryLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterCategoryLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterCategoryLabel")
        self.ReportsVendorPaymentDetailsFilterByPayMethodLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterByPayMethodLabel")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox = QtWidgets.QComboBox(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setEditable(
            False)
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.clear()
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem("")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
            "All Items")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.addItem(
            "Custom Select Items")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.setObjectName(
            "ReportsVendorPaymentDetailsFilterByPayMethodComboBox")
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentText()))
        self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorPaymentDetailsFilterByPayMethodComboBox.currentText()))
        self.ReportsVendorPaymentDetailsFilterByLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterByLabel")
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setFont(font)
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setObjectName(
            "ReportsVendorPaymentDetailsFilterGeneratePushButton")
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsVendorPaymentDetailsFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsVendorPaymentDetailsFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorPaymentDetailsFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorPaymentDetailsFilterSplitterFrame.setObjectName(
            "ReportsVendorPaymentDetailsFilterSplitterFrame")
        self.ReportsVendorPaymentDetailsFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterByDateFromLabel")
        self.ReportsVendorPaymentDetailsFilterByVendorLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByVendorLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByVendorLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByVendorLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterByVendorLabel")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox = QtWidgets.QComboBox(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setEditable(
            False)
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.clear()
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem("")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.addItem(
            "Custom Select Items")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.setObjectName(
            "ReportsVendorPaymentDetailsFilterByVendorComboBox")
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentText()))
        self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorPaymentDetailsFilterByVendorComboBox.currentText()))
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setObjectName(
            "ReportsVendorPaymentDetailsFilterByDateFromComboBox")
        self.ReportsVendorPaymentDetailsFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByDateToLabel.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByDateToLabel.setObjectName(
            "ReportsVendorPaymentDetailsFilterByDateToLabel")
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsVendorPaymentDetailsFilterFrame)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setFont(font)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setObjectName(
            "ReportsVendorPaymentDetailsFilterByDateToComboBox")
        self.ReportsVendorProductListFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsVendorProductListFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsVendorProductListFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorProductListFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorProductListFilterFrame.setObjectName(
            "ReportsVendorProductListFilterFrame")
        self.ReportsVendorProductListFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 162, 24, 24))
        self.ReportsVendorProductListFilterArrowPushButton.setText("")
        self.ReportsVendorProductListFilterArrowPushButton.setObjectName(
            "ReportsVendorProductListFilterArrowPushButton")
        self.ReportsVendorProductListFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsVendorProductListFilterTitleLabel.setFont(font)
        self.ReportsVendorProductListFilterTitleLabel.setObjectName(
            "ReportsVendorProductListFilterTitleLabel")
        self.ReportsVendorProductListFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorProductListFilterCategoryLabel.setFont(font)
        self.ReportsVendorProductListFilterCategoryLabel.setObjectName(
            "ReportsVendorProductListFilterCategoryLabel")
        self.ReportsVendorProductListFilterByVendorLabel = QtWidgets.QLabel(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterByVendorLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorProductListFilterByVendorLabel.setFont(font)
        self.ReportsVendorProductListFilterByVendorLabel.setObjectName(
            "ReportsVendorProductListFilterByVendorLabel")
        self.ReportsVendorProductListFilterByVendorComboBox = QtWidgets.QComboBox(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterByVendorComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorProductListFilterByVendorComboBox.setFont(font)
        self.ReportsVendorProductListFilterByVendorComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorProductListFilterByVendorComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorProductListFilterByVendorComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorProductListFilterByVendorComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsVendorProductListFilterByVendorComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsVendorProductListFilterByVendorComboBox.setEditable(False)
        self.ReportsVendorProductListFilterByVendorComboBox.clear()
        self.ReportsVendorProductListFilterByVendorComboBox.addItem("")
        self.ReportsVendorProductListFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsVendorProductListFilterByVendorComboBox.addItem(
            "Custom Select Items")
        self.ReportsVendorProductListFilterByVendorComboBox.setObjectName(
            "ReportsVendorProductListFilterByVendorComboBox")
        self.ReportsVendorProductListFilterByVendorComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorProductListFilterByVendorComboBox.currentText()))
        self.ReportsVendorProductListFilterByVendorComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorProductListFilterByVendorComboBox.currentText()))
        self.ReportsVendorProductListFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorProductListFilterByProductsComboBox.setFont(font)
        self.ReportsVendorProductListFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorProductListFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorProductListFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorProductListFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsVendorProductListFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsVendorProductListFilterByProductsComboBox.setEditable(
            False)
        self.ReportsVendorProductListFilterByProductsComboBox.clear()
        self.ReportsVendorProductListFilterByProductsComboBox.addItem("")
        self.ReportsVendorProductListFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsVendorProductListFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsVendorProductListFilterByProductsComboBox.setObjectName(
            "ReportsVendorProductListFilterByProductsComboBox")
        self.ReportsVendorProductListFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorProductListFilterByProductsComboBox.currentText()))
        self.ReportsVendorProductListFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorProductListFilterByProductsComboBox.currentText()))
        self.ReportsVendorProductListFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorProductListFilterByProductsLabel.setFont(font)
        self.ReportsVendorProductListFilterByProductsLabel.setObjectName(
            "ReportsVendorProductListFilterByProductsLabel")
        self.ReportsVendorProductListFilterByLabel = QtWidgets.QLabel(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorProductListFilterByLabel.setFont(font)
        self.ReportsVendorProductListFilterByLabel.setObjectName(
            "ReportsVendorProductListFilterByLabel")
        self.ReportsVendorProductListFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 240, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorProductListFilterGeneratePushButton.setFont(font)
        self.ReportsVendorProductListFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorProductListFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorProductListFilterGeneratePushButton.setObjectName(
            "ReportsVendorProductListFilterGeneratePushButton")
        self.ReportsVendorProductListFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsVendorProductListFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsVendorProductListFilterFrame)
        self.ReportsVendorProductListFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsVendorProductListFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorProductListFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorProductListFilterSplitterFrame.setObjectName(
            "ReportsVendorProductListFilterSplitterFrame")
        self.ReportsVendorListFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsVendorListFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsVendorListFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorListFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorListFilterFrame.setObjectName(
            "ReportsVendorListFilterFrame")
        self.ReportsVendorListFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 190, 24, 24))
        self.ReportsVendorListFilterArrowPushButton.setText("")
        self.ReportsVendorListFilterArrowPushButton.setObjectName(
            "ReportsVendorListFilterArrowPushButton")
        self.ReportsVendorListFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsVendorListFilterTitleLabel.setFont(font)
        self.ReportsVendorListFilterTitleLabel.setObjectName(
            "ReportsVendorListFilterTitleLabel")
        self.ReportsVendorListFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorListFilterCategoryLabel.setFont(font)
        self.ReportsVendorListFilterCategoryLabel.setObjectName(
            "ReportsVendorListFilterCategoryLabel")
        self.ReportsVendorListFilterByVendorCodeLabel = QtWidgets.QLabel(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterByVendorCodeLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorListFilterByVendorCodeLabel.setFont(font)
        self.ReportsVendorListFilterByVendorCodeLabel.setObjectName(
            "ReportsVendorListFilterByVendorCodeLabel")
        self.ReportsVendorListFilterByVendorComboBox = QtWidgets.QComboBox(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterByVendorComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsVendorListFilterByVendorComboBox.setFont(font)
        self.ReportsVendorListFilterByVendorComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorListFilterByVendorComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorListFilterByVendorComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsVendorListFilterByVendorComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsVendorListFilterByVendorComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsVendorListFilterByVendorComboBox.setEditable(False)
        self.ReportsVendorListFilterByVendorComboBox.clear()
        self.ReportsVendorListFilterByVendorComboBox.addItem("")
        self.ReportsVendorListFilterByVendorComboBox.addItem("All Items")
        self.ReportsVendorListFilterByVendorComboBox.addItem(
            "Custom Select Items")
        self.ReportsVendorListFilterByVendorComboBox.setObjectName(
            "ReportsVendorListFilterByVendorComboBox")
        self.ReportsVendorListFilterByVendorComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorListFilterByVendorComboBox.currentText()))
        self.ReportsVendorListFilterByVendorComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsVendorListFilterByVendorComboBox.currentText()))
        self.ReportsVendorListFilterByLabel = QtWidgets.QLabel(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorListFilterByLabel.setFont(font)
        self.ReportsVendorListFilterByLabel.setObjectName(
            "ReportsVendorListFilterByLabel")
        self.ReportsVendorListFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 200, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsVendorListFilterGeneratePushButton.setFont(font)
        self.ReportsVendorListFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsVendorListFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsVendorListFilterGeneratePushButton.setObjectName(
            "ReportsVendorListFilterGeneratePushButton")
        self.ReportsVendorListFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsVendorListFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsVendorListFilterFrame)
        self.ReportsVendorListFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsVendorListFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsVendorListFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsVendorListFilterSplitterFrame.setObjectName(
            "ReportsVendorListFilterSplitterFrame")
        self.ReportsSalesOrderSummaryFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsSalesOrderSummaryFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsSalesOrderSummaryFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsSalesOrderSummaryFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsSalesOrderSummaryFilterFrame.setObjectName(
            "ReportsSalesOrderSummaryFilterFrame")
        self.ReportsSalesOrderSummaryFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 216, 24, 24))
        self.ReportsSalesOrderSummaryFilterArrowPushButton.setText("")
        self.ReportsSalesOrderSummaryFilterArrowPushButton.setObjectName(
            "ReportsSalesOrderSummaryFilterArrowPushButton")
        self.ReportsSalesOrderSummaryFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsSalesOrderSummaryFilterTitleLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterTitleLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterTitleLabel")
        self.ReportsSalesOrderSummaryFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 430, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterCategoryLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterCategoryLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterCategoryLabel")
        self.ReportsSalesOrderSummaryFilterByCustomerLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByCustomerLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByCustomerLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterByCustomerLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterByCustomerLabel")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox = QtWidgets.QComboBox(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setFont(font)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setEditable(
            False)
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.clear()
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem("")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.addItem(
            "Custom Select Items")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.setObjectName(
            "ReportsSalesOrderSummaryFilterByCustomerComboBox")
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentText()))
        self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderSummaryFilterByCustomerComboBox.currentText()))
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox = QtWidgets.QComboBox(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setFont(font)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setEditable(
            False)
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.clear()
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem("")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.addItem(
            "Custom Select Items")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.setObjectName(
            "ReportsSalesOrderSummaryFilterByPayStatusComboBox")
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentText()))
        self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderSummaryFilterByPayStatusComboBox.currentText()))
        self.ReportsSalesOrderSummaryFilterByPayStatusLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterByPayStatusLabel")
        self.ReportsSalesOrderSummaryFilterByLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterByLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterByLabel")
        self.ReportsSalesOrderSummaryFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setFont(font)
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setObjectName(
            "ReportsSalesOrderSummaryFilterGeneratePushButton")
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsSalesOrderSummaryFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsSalesOrderSummaryFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsSalesOrderSummaryFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsSalesOrderSummaryFilterSplitterFrame.setObjectName(
            "ReportsSalesOrderSummaryFilterSplitterFrame")
        self.ReportsSalesOrderSummaryFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByDateFromLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterByDateFromLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterByDateFromLabel")
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setFont(font)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setObjectName(
            "ReportsSalesOrderSummaryFilterByDateFromComboBox")
        self.ReportsSalesOrderSummaryFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByDateToLabel.setFont(font)
        self.ReportsSalesOrderSummaryFilterByDateToLabel.setObjectName(
            "ReportsSalesOrderSummaryFilterByDateToLabel")
        self.ReportsSalesOrderSummaryFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsSalesOrderSummaryFilterFrame)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setFont(font)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setObjectName(
            "ReportsSalesOrderSummaryFilterByDateToComboBox")
        self.ReportsSalesOrderProfitFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsSalesOrderProfitFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsSalesOrderProfitFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsSalesOrderProfitFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsSalesOrderProfitFilterFrame.setObjectName(
            "ReportsSalesOrderProfitFilterFrame")
        self.ReportsSalesOrderProfitFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 243, 24, 24))
        self.ReportsSalesOrderProfitFilterArrowPushButton.setText("")
        self.ReportsSalesOrderProfitFilterArrowPushButton.setObjectName(
            "ReportsSalesOrderProfitFilterArrowPushButton")
        self.ReportsSalesOrderProfitFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsSalesOrderProfitFilterTitleLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterTitleLabel.setObjectName(
            "ReportsSalesOrderProfitFilterTitleLabel")
        self.ReportsSalesOrderProfitFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterCategoryLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterCategoryLabel.setObjectName(
            "ReportsSalesOrderProfitFilterCategoryLabel")
        self.ReportsSalesOrderProfitFilterByCustomerLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByCustomerLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByCustomerLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterByCustomerLabel.setObjectName(
            "ReportsSalesOrderProfitFilterByCustomerLabel")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox = QtWidgets.QComboBox(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setFont(font)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setEditable(False)
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.clear()
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem("")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.addItem(
            "Custom Select Items")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.setObjectName(
            "ReportsSalesOrderProfitFilterByCustomerComboBox")
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentText()))
        self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderProfitFilterByCustomerComboBox.currentText()))
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox = QtWidgets.QComboBox(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setFont(font)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setEditable(
            False)
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.clear()
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem("")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.addItem(
            "Custom Select Items")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.setObjectName(
            "ReportsSalesOrderProfitFilterByPayStatusComboBox")
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentText()))
        self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsSalesOrderProfitFilterByPayStatusComboBox.currentText()))
        self.ReportsSalesOrderProfitFilterByPayStatusLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByPayStatusLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByPayStatusLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterByPayStatusLabel.setObjectName(
            "ReportsSalesOrderProfitFilterByPayStatusLabel")
        self.ReportsSalesOrderProfitFilterByLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterByLabel.setObjectName(
            "ReportsSalesOrderProfitFilterByLabel")
        self.ReportsSalesOrderProfitFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setFont(font)
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setObjectName(
            "ReportsSalesOrderProfitFilterGeneratePushButton")
        self.ReportsSalesOrderProfitFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsSalesOrderProfitFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsSalesOrderProfitFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsSalesOrderProfitFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsSalesOrderProfitFilterSplitterFrame.setObjectName(
            "ReportsSalesOrderProfitFilterSplitterFrame")
        self.ReportsSalesOrderProfitFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByDateFromLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterByDateFromLabel.setObjectName(
            "ReportsSalesOrderProfitFilterByDateFromLabel")
        self.ReportsSalesOrderProfitFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setFont(font)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setObjectName(
            "ReportsSalesOrderProfitFilterByDateFromComboBox")
        self.ReportsSalesOrderProfitFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByDateToLabel.setFont(font)
        self.ReportsSalesOrderProfitFilterByDateToLabel.setObjectName(
            "ReportsSalesOrderProfitFilterByDateToLabel")
        self.ReportsSalesOrderProfitFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsSalesOrderProfitFilterFrame)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setFont(font)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setObjectName(
            "ReportsSalesOrderProfitFilterByDateToComboBox")
        self.ReportsCustomerPaymentSummaryFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsCustomerPaymentSummaryFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsCustomerPaymentSummaryFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerPaymentSummaryFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerPaymentSummaryFilterFrame.setObjectName(
            "ReportsCustomerPaymentSummaryFilterFrame")
        self.ReportsCustomerPaymentSummaryFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 270, 24, 24))
        self.ReportsCustomerPaymentSummaryFilterArrowPushButton.setText("")
        self.ReportsCustomerPaymentSummaryFilterArrowPushButton.setObjectName(
            "ReportsCustomerPaymentSummaryFilterArrowPushButton")
        self.ReportsCustomerPaymentSummaryFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsCustomerPaymentSummaryFilterTitleLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterTitleLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterTitleLabel")
        self.ReportsCustomerPaymentSummaryFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterCategoryLabel")
        self.ReportsCustomerPaymentSummaryFilterByCustomerLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByCustomerLabel")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox = QtWidgets.QComboBox(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setFont(
            font)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setEditable(
            False)
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.clear()
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.addItem(
            "Custom Select Items")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByCustomerComboBox")
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentSummaryFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox = QtWidgets.QComboBox(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setFont(
            font)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setEditable(
            False)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.clear()
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem("")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.addItem(
            "Custom Select Items")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByPayStatusComboBox")
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentText()))
        self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentSummaryFilterByPayStatusComboBox.currentText()))
        self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByPayStatusLabel")
        self.ReportsCustomerPaymentSummaryFilterByLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByLabel")
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setFont(
            font)
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setObjectName(
            "ReportsCustomerPaymentSummaryFilterGeneratePushButton")
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsCustomerPaymentSummaryFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerPaymentSummaryFilterSplitterFrame.setObjectName(
            "ReportsCustomerPaymentSummaryFilterSplitterFrame")
        self.ReportsCustomerPaymentSummaryFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByDateFromLabel")
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setFont(
            font)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByDateFromComboBox")
        self.ReportsCustomerPaymentSummaryFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByDateToLabel")
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setFont(font)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setObjectName(
            "ReportsCustomerPaymentSummaryFilterByDateToComboBox")
        self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentSummaryFilterFrame)
        self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setGeometry(
            QtCore.QRect(190, 95, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setFont(
            font)
        self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setObjectName(
            "ReportsCustomerPaymentSummaryFilterCategoryContinueLabel")
        self.ReportsCustomerPaymentDetailsFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsCustomerPaymentDetailsFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsCustomerPaymentDetailsFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerPaymentDetailsFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerPaymentDetailsFilterFrame.setObjectName(
            "ReportsCustomerPaymentDetailsFilterFrame")
        self.ReportsCustomerPaymentDetailsFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 297, 24, 24))
        self.ReportsCustomerPaymentDetailsFilterArrowPushButton.setText("")
        self.ReportsCustomerPaymentDetailsFilterArrowPushButton.setObjectName(
            "ReportsCustomerPaymentDetailsFilterArrowPushButton")
        self.ReportsCustomerPaymentDetailsFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsCustomerPaymentDetailsFilterTitleLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterTitleLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterTitleLabel")
        self.ReportsCustomerPaymentDetailsFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterCategoryLabel")
        self.ReportsCustomerPaymentDetailsFilterByCustomerLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByCustomerLabel")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox = QtWidgets.QComboBox(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setFont(
            font)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setEditable(
            False)
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.clear()
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.addItem(
            "Custom Select Items")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByCustomerComboBox")
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentDetailsFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox = QtWidgets.QComboBox(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setFont(
            font)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setEditable(
            False)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.clear()
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem("")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
            "All Items")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.addItem(
            "Custom Select Items")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayMethodComboBox")
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentText()))
        self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerPaymentDetailsFilterByPayMethodComboBox.currentText()))
        self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayMethodLabel")
        self.ReportsCustomerPaymentDetailsFilterByLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByLabel")
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setFont(
            font)
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setObjectName(
            "ReportsCustomerPaymentDetailsFilterGeneratePushButton")
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsCustomerPaymentDetailsFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerPaymentDetailsFilterSplitterFrame.setObjectName(
            "ReportsCustomerPaymentDetailsFilterSplitterFrame")
        self.ReportsCustomerPaymentDetailsFilterByPayFromLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayFromLabel")
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox = QtWidgets.QDateEdit(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setCalendarPopup(
            True)
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayFromComboBox")
        self.ReportsCustomerPaymentDetailsFilterByPayToLabel = QtWidgets.QLabel(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayToLabel")
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox = QtWidgets.QDateEdit(
            self.ReportsCustomerPaymentDetailsFilterFrame)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setFont(font)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setCalendarPopup(
            True)
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setObjectName(
            "ReportsCustomerPaymentDetailsFilterByPayToComboBox")
        self.ReportsCustomerListFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsCustomerListFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsCustomerListFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerListFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerListFilterFrame.setObjectName(
            "ReportsCustomerListFilterFrame")
        self.ReportsCustomerListFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 324, 24, 24))
        self.ReportsCustomerListFilterArrowPushButton.setText("")
        self.ReportsCustomerListFilterArrowPushButton.setObjectName(
            "ReportsCustomerListFilterArrowPushButton")
        self.ReportsCustomerListFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsCustomerListFilterTitleLabel.setFont(font)
        self.ReportsCustomerListFilterTitleLabel.setObjectName(
            "ReportsCustomerListFilterTitleLabel")
        self.ReportsCustomerListFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerListFilterCategoryLabel.setFont(font)
        self.ReportsCustomerListFilterCategoryLabel.setObjectName(
            "ReportsCustomerListFilterCategoryLabel")
        self.ReportsCustomerListFilterByCustomerLabel = QtWidgets.QLabel(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterByCustomerLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerListFilterByCustomerLabel.setFont(font)
        self.ReportsCustomerListFilterByCustomerLabel.setObjectName(
            "ReportsCustomerListFilterByCustomerLabel")
        self.ReportsCustomerListFilterByCustomerComboBox = QtWidgets.QComboBox(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterByCustomerComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsCustomerListFilterByCustomerComboBox.setFont(font)
        self.ReportsCustomerListFilterByCustomerComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerListFilterByCustomerComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerListFilterByCustomerComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsCustomerListFilterByCustomerComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsCustomerListFilterByCustomerComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsCustomerListFilterByCustomerComboBox.setEditable(False)
        self.ReportsCustomerListFilterByCustomerComboBox.clear()
        self.ReportsCustomerListFilterByCustomerComboBox.addItem("")
        self.ReportsCustomerListFilterByCustomerComboBox.addItem("All Items")
        self.ReportsCustomerListFilterByCustomerComboBox.addItem(
            "Custom Select Items")
        self.ReportsCustomerListFilterByCustomerComboBox.setObjectName(
            "ReportsCustomerListFilterByCustomerComboBox")
        self.ReportsCustomerListFilterByCustomerComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerListFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerListFilterByCustomerComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsCustomerListFilterByCustomerComboBox.currentText()))
        self.ReportsCustomerListFilterByLabel = QtWidgets.QLabel(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerListFilterByLabel.setFont(font)
        self.ReportsCustomerListFilterByLabel.setObjectName(
            "ReportsCustomerListFilterByLabel")
        self.ReportsCustomerListFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 200, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsCustomerListFilterGeneratePushButton.setFont(font)
        self.ReportsCustomerListFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsCustomerListFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsCustomerListFilterGeneratePushButton.setObjectName(
            "ReportsCustomerListFilterGeneratePushButton")
        self.ReportsCustomerListFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsCustomerListFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsCustomerListFilterFrame)
        self.ReportsCustomerListFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsCustomerListFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsCustomerListFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsCustomerListFilterSplitterFrame.setObjectName(
            "ReportsCustomerListFilterSplitterFrame")
        self.ReportsPurchaseOrderSummaryFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderSummaryFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsPurchaseOrderSummaryFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderSummaryFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderSummaryFilterFrame.setObjectName(
            "ReportsPurchaseOrderSummaryFilterFrame")
        self.ReportsPurchaseOrderSummaryFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 352, 24, 24))
        self.ReportsPurchaseOrderSummaryFilterArrowPushButton.setText("")
        self.ReportsPurchaseOrderSummaryFilterArrowPushButton.setObjectName(
            "ReportsPurchaseOrderSummaryFilterArrowPushButton")
        self.ReportsPurchaseOrderSummaryFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsPurchaseOrderSummaryFilterTitleLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterTitleLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterTitleLabel")
        self.ReportsPurchaseOrderSummaryFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterCategoryLabel")
        self.ReportsPurchaseOrderSummaryFilterByStatusLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByStatusLabel")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.clear()
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem("")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByStatusComboBox")
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentText()))
        self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderSummaryFilterByStatusComboBox.currentText()))
        self.ReportsPurchaseOrderSummaryFilterByLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByLabel")
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setObjectName(
            "ReportsPurchaseOrderSummaryFilterGeneratePushButton")
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsPurchaseOrderSummaryFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderSummaryFilterSplitterFrame.setObjectName(
            "ReportsPurchaseOrderSummaryFilterSplitterFrame")
        self.ReportsPurchaseOrderSummaryFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByDateFromLabel")
        self.ReportsPurchaseOrderSummaryFilterByVendorLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByVendorLabel")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.clear()
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem("")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByVendorComboBox")
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentText()))
        self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderSummaryFilterByVendorComboBox.currentText()))
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByDateFromComboBox")
        self.ReportsPurchaseOrderSummaryFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByDateToLabel")
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsPurchaseOrderSummaryFilterFrame)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setFont(font)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setObjectName(
            "ReportsPurchaseOrderSummaryFilterByDateToComboBox")
        self.ReportsPurchaseOrderDetailsFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderDetailsFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsPurchaseOrderDetailsFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderDetailsFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderDetailsFilterFrame.setObjectName(
            "ReportsPurchaseOrderDetailsFilterFrame")
        self.ReportsPurchaseOrderDetailsFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 380, 24, 24))
        self.ReportsPurchaseOrderDetailsFilterArrowPushButton.setText("")
        self.ReportsPurchaseOrderDetailsFilterArrowPushButton.setObjectName(
            "ReportsPurchaseOrderDetailsFilterArrowPushButton")
        self.ReportsPurchaseOrderDetailsFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsPurchaseOrderDetailsFilterTitleLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterTitleLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterTitleLabel")
        self.ReportsPurchaseOrderDetailsFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterCategoryLabel")
        self.ReportsPurchaseOrderDetailsFilterByLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByLabel")
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 320, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setObjectName(
            "ReportsPurchaseOrderDetailsFilterGeneratePushButton")
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsPurchaseOrderDetailsFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderDetailsFilterSplitterFrame.setObjectName(
            "ReportsPurchaseOrderDetailsFilterSplitterFrame")
        self.ReportsPurchaseOrderDetailsFilterByDateFromLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setGeometry(
            QtCore.QRect(190, 240, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByDateFromLabel")
        self.ReportsPurchaseOrderDetailsFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByProductsLabel")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.clear()
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem("")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByProductsComboBox")
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentText()))
        self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderDetailsFilterByProductsComboBox.currentText()))
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox = QtWidgets.QDateEdit(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setGeometry(
            QtCore.QRect(340, 240, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setStyleSheet(
            "QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setCalendarPopup(
            True)
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByDateFromComboBox")
        self.ReportsPurchaseOrderDetailsFilterByDateToLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setGeometry(
            QtCore.QRect(190, 280, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByDateToLabel")
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox = QtWidgets.QDateEdit(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setGeometry(
            QtCore.QRect(340, 280, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setStyleSheet("QDateEdit {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;qproperty-alignment: AlignLeft;}\n""QDateEdit:on {padding-top: 3px;padding-left: 4px;}\n""QDateEdit::down-arrow {image: url(:/MinImg/Res/min.png);}\n""QDateEdit::down-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::down-button {image: url(:/MinImg/Res/min.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::down-button:on {top: 1px;left: 1px;}\n""QDateEdit::up-arrow {image: url(:/MaxImg/Res/max.png);}\n""QDateEdit::up-arrow:on {top: 1px;left: 1px;}\n""QDateEdit::up-button {image: url(:/MaxImg/Res/max.png);padding: 0px 7px 1px 1px;}\n""QDateEdit::up-button:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setDateTime(
            QtCore.QDateTime(QtCore.QDateTime.currentDateTime()))
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setCalendarPopup(
            True)
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByDateToComboBox")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setFont(font)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByVendorCodeLabel")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderDetailsFilterFrame)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setFont(
            font)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.clear()
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem("")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.setObjectName(
            "ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox")
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentText()))
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderDetailsFilterByVendorCodeComboBox.currentText()))
        self.ReportsPurchaseOrderStatusFilterFrame = QtWidgets.QFrame(
            self.ReportsMenuFrame)
        self.ReportsPurchaseOrderStatusFilterFrame.setGeometry(
            QtCore.QRect(219, 0, 641, 431))
        self.ReportsPurchaseOrderStatusFilterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderStatusFilterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderStatusFilterFrame.setObjectName(
            "ReportsPurchaseOrderStatusFilterFrame")
        self.ReportsPurchaseOrderStatusFilterArrowPushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterArrowPushButton.setGeometry(
            QtCore.QRect(0, 408, 24, 24))
        self.ReportsPurchaseOrderStatusFilterArrowPushButton.setText("")
        self.ReportsPurchaseOrderStatusFilterArrowPushButton.setObjectName(
            "ReportsPurchaseOrderStatusFilterArrowPushButton")
        self.ReportsPurchaseOrderStatusFilterTitleLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterTitleLabel.setGeometry(
            QtCore.QRect(190, 40, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.ReportsPurchaseOrderStatusFilterTitleLabel.setFont(font)
        self.ReportsPurchaseOrderStatusFilterTitleLabel.setObjectName(
            "ReportsPurchaseOrderStatusFilterTitleLabel")
        self.ReportsPurchaseOrderStatusFilterCategoryLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterCategoryLabel.setGeometry(
            QtCore.QRect(190, 70, 420, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderStatusFilterCategoryLabel.setFont(font)
        self.ReportsPurchaseOrderStatusFilterCategoryLabel.setObjectName(
            "ReportsPurchaseOrderStatusFilterCategoryLabel")
        self.ReportsPurchaseOrderStatusFilterByVendorLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterByVendorLabel.setGeometry(
            QtCore.QRect(190, 200, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderStatusFilterByVendorLabel.setFont(font)
        self.ReportsPurchaseOrderStatusFilterByVendorLabel.setObjectName(
            "ReportsPurchaseOrderStatusFilterByVendorLabel")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setGeometry(
            QtCore.QRect(340, 200, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setFont(font)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.clear()
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem("")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.setObjectName(
            "ReportsPurchaseOrderStatusFilterByVendorComboBox")
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentText()))
        self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderStatusFilterByVendorComboBox.currentText()))
        self.ReportsPurchaseOrderStatusFilterByLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterByLabel.setGeometry(
            QtCore.QRect(190, 130, 100, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderStatusFilterByLabel.setFont(font)
        self.ReportsPurchaseOrderStatusFilterByLabel.setObjectName(
            "ReportsPurchaseOrderStatusFilterByLabel")
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton = QtWidgets.QPushButton(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setGeometry(
            QtCore.QRect(190, 240, 345, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setFont(font)
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setObjectName(
            "ReportsPurchaseOrderStatusFilterGeneratePushButton")
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.clicked.connect(
            self.RequestReport)
        self.ReportsPurchaseOrderStatusFilterSplitterFrame = QtWidgets.QFrame(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterSplitterFrame.setGeometry(
            QtCore.QRect(30, 0, 2, 431))
        self.ReportsPurchaseOrderStatusFilterSplitterFrame.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.ReportsPurchaseOrderStatusFilterSplitterFrame.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.ReportsPurchaseOrderStatusFilterSplitterFrame.setObjectName(
            "ReportsPurchaseOrderStatusFilterSplitterFrame")
        self.ReportsPurchaseOrderStatusFilterByProductsLabel = QtWidgets.QLabel(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterByProductsLabel.setGeometry(
            QtCore.QRect(190, 160, 150, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportsPurchaseOrderStatusFilterByProductsLabel.setFont(font)
        self.ReportsPurchaseOrderStatusFilterByProductsLabel.setObjectName(
            "ReportsPurchaseOrderStatusFilterByProductsLabel")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox = QtWidgets.QComboBox(
            self.ReportsPurchaseOrderStatusFilterFrame)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setGeometry(
            QtCore.QRect(340, 160, 195, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setFont(font)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setStyleSheet(
            "QComboBox {max-width: 195px;font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setEditable(
            False)
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.clear()
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem("")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
            "All Items")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.addItem(
            "Custom Select Items")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.setObjectName(
            "ReportsPurchaseOrderStatusFilterByProductsComboBox")
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentText()))
        self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.ReportsPurchaseOrderStatusFilterByProductsComboBox.currentText()))
        self.ReportsInventoryDetailsFilterFrame.raise_()
        self.ReportsInventoryByLocationFilterFrame.raise_()
        self.ReportsVendorProductListFilterFrame.raise_()
        self.ReportsVendorListFilterFrame.raise_()
        self.ReportsCustomerListFilterFrame.raise_()
        self.ReportsProductPriceListFilterFrame.raise_()
        self.ReportsProductOrderedByCustomerFilterFrame.raise_()
        self.ReportsSalesOrderSummaryFilterFrame.raise_()
        self.ReportsSalesOrderProfitFilterFrame.raise_()
        self.ReportsCustomerPaymentSummaryFilterFrame.raise_()
        self.ReportsCustomerPaymentDetailsFilterFrame.raise_()
        self.ReportsVendorPaymentDetailsFilterFrame.raise_()
        self.ReportsPurchaseOrderSummaryFilterFrame.raise_()
        self.ReportsPurchaseOrderDetailsFilterFrame.raise_()
        self.ReportsPurchaseOrderStatusFilterFrame.raise_()
        self.ReportsInventorySummaryFilterFrame.raise_()
        self.ReportsSalesOrderSummaryPushButton.raise_()
        self.ReportsSalesOrderProfitPushButton.raise_()
        self.ReportsCustomerPaymentSummaryPushButton.raise_()
        self.ReportsCustomerPaymentDetailsPushButton.raise_()
        self.ReportsProductOrderedByCustomerPushButton.raise_()
        self.ReportsCustomerListPushButton.raise_()
        self.ReportsPurchaseOrderSummaryPushButton.raise_()
        self.ReportsPurchaseOrderDetailsPushButton.raise_()
        self.ReportsPurchaseOrderStatusPushButton.raise_()
        self.ReportsVendorPaymentDetailsPushButton.raise_()
        self.ReportsVendorProductListPushButton.raise_()
        self.ReportsVendorListPushButton.raise_()
        self.ReportsInventorySummaryPushButton.raise_()
        self.ReportsInventoryDetailsPushButton.raise_()
        self.ReportsInventoryByLocationPushButton.raise_()
        self.ReportsProductPriceListPushButton.raise_()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        self.ReportWebViewFrame = QtWidgets.QFrame(self.ReportsShowFrame)
        self.ReportWebViewFrame.setGeometry(QtCore.QRect(10, 10, 861, 431))
        self.ReportWebViewFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportWebViewFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportWebViewFrame.setObjectName("ReportWebViewFrame")
        self.ReportWebViewBrowser = QWebView(self.ReportWebViewFrame)
        self.ReportWebViewBrowser.setGeometry(QtCore.QRect(0, 50, 861, 381))
        self.ReportWebViewBrowser.setObjectName("ReportWebViewBrowser")
        self.ReportNameLabel = QtWidgets.QLabel(self.ReportWebViewFrame)
        self.ReportNameLabel.setGeometry(QtCore.QRect(40, 12, 450, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(15)
        self.ReportNameLabel.setFont(font)
        self.ReportNameLabel.setObjectName("ReportNameLabel")
        self.BackToReportsMenuPushButton = QtWidgets.QPushButton(
            self.ReportWebViewFrame)
        self.BackToReportsMenuPushButton.setGeometry(
            QtCore.QRect(0, 10, 24, 24))
        self.BackToReportsMenuPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.BackToReportsMenuPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.BackToReportsMenuPushButton.setText("")
        self.BackToReportsMenuPushButton.setObjectName(
            "BackToReportsMenuPushButton")
        self.ReportToExcelFrame = QtWidgets.QFrame(self.ReportWebViewFrame)
        self.ReportToExcelFrame.setGeometry(QtCore.QRect(770, 11, 24, 24))
        self.ReportToExcelFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportToExcelFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportToExcelFrame.setObjectName("ReportToExcelFrame")
        self.ReportToPDFFrame = QtWidgets.QFrame(self.ReportWebViewFrame)
        self.ReportToPDFFrame.setGeometry(QtCore.QRect(660, 11, 24, 24))
        self.ReportToPDFFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ReportToPDFFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ReportToPDFFrame.setObjectName("ReportToPDFFrame")
        self.ReportToExcelPushButton = QtWidgets.QPushButton(
            self.ReportWebViewFrame)
        self.ReportToExcelPushButton.setGeometry(QtCore.QRect(760, 6, 101, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportToExcelPushButton.setFont(font)
        self.ReportToExcelPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportToExcelPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ReportToExcelPushButton.setObjectName("ReportToExcelPushButton")
        self.ReportToExcelPushButton.clicked.connect(self.PrintReportToExcel)
        self.ReportToPDFPushButton = QtWidgets.QPushButton(
            self.ReportWebViewFrame)
        self.ReportToPDFPushButton.setGeometry(QtCore.QRect(650, 6, 101, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ReportToPDFPushButton.setFont(font)
        self.ReportToPDFPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportToPDFPushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ReportToPDFPushButton.setObjectName("ReportToPDFPushButton")
        self.ReportToPDFPushButton.clicked.connect(self.PrintReportToPDF)
        self.ReportWebViewBrowser.raise_()
        self.ReportNameLabel.raise_()
        self.BackToReportsMenuPushButton.raise_()
        self.ReportToExcelFrame.raise_()
        self.ReportToPDFFrame.raise_()
        self.ReportWebViewFrame.raise_()
        self.ReportsMenuFrame.raise_()
        self.ReportsShowFrame.raise_()
        self.ReportsFrameTitle.raise_()
        self.LeftFrame = QtWidgets.QFrame(self.MainFrame)
        self.LeftFrame.setGeometry(QtCore.QRect(0, 0, 81, 610))
        self.LeftFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.LeftFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LeftFrame.setObjectName("LeftFrame")
        self.HighlightingFrameTitle = QtWidgets.QFrame(self.LeftFrame)
        self.HighlightingFrameTitle.setGeometry(QtCore.QRect(0, 73, 81, 63))
        self.HighlightingFrameTitle.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.HighlightingFrameTitle.setFrameShadow(QtWidgets.QFrame.Raised)
        self.HighlightingFrameTitle.setObjectName("HighlightingFrameTitle")
        self.VendorLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.VendorLogoPushButton.setGeometry(QtCore.QRect(0, 73, 81, 63))
        self.VendorLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.VendorLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.VendorLogoPushButton.setText("")
        self.VendorLogoPushButton.setObjectName("VendorLogoPushButton")
        self.PurchaseLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.PurchaseLogoPushButton.setGeometry(QtCore.QRect(0, 136, 81, 63))
        self.PurchaseLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PurchaseLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.PurchaseLogoPushButton.setText("")
        self.PurchaseLogoPushButton.setObjectName("PurchaseLogoPushButton")
        self.InventoryLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.InventoryLogoPushButton.setGeometry(QtCore.QRect(0, 199, 81, 63))
        self.InventoryLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.InventoryLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.InventoryLogoPushButton.setText("")
        self.InventoryLogoPushButton.setObjectName("InventoryLogoPushButton")
        self.SaleLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.SaleLogoPushButton.setGeometry(QtCore.QRect(0, 262, 81, 63))
        self.SaleLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SaleLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SaleLogoPushButton.setText("")
        self.SaleLogoPushButton.setObjectName("SaleLogoPushButton")
        self.CustomerLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.CustomerLogoPushButton.setGeometry(QtCore.QRect(0, 325, 81, 63))
        self.CustomerLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.CustomerLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.CustomerLogoPushButton.setText("")
        self.CustomerLogoPushButton.setObjectName("CustomerLogoPushButton")
        self.NotificationLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.NotificationLogoPushButton.setGeometry(
            QtCore.QRect(0, 388, 81, 63))
        self.NotificationLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.NotificationLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.NotificationLogoPushButton.setText("")
        self.NotificationLogoPushButton.setObjectName(
            "NotificationLogoPushButton")
        self.SettingLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.SettingLogoPushButton.setGeometry(QtCore.QRect(0, 451, 81, 63))
        self.SettingLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SettingLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SettingLogoPushButton.setText("")
        self.SettingLogoPushButton.setObjectName("SettingLogoPushButton")
        self.ReportsLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.ReportsLogoPushButton.setGeometry(QtCore.QRect(0, 514, 81, 66))
        self.ReportsLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ReportsLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ReportsLogoPushButton.setText("")
        self.ReportsLogoPushButton.setObjectName("ReportsLogoPushButton")
        self.DashboardLogoPushButton = QtWidgets.QPushButton(self.LeftFrame)
        self.DashboardLogoPushButton.setGeometry(QtCore.QRect(0, 0, 81, 73))
        self.DashboardLogoPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.DashboardLogoPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.DashboardLogoPushButton.setText("")
        self.DashboardLogoPushButton.setObjectName("DashboardLogoPushButton")
        self.DashboardLogoPushButton.raise_()
        self.VendorLogoPushButton.raise_()
        self.PurchaseLogoPushButton.raise_()
        self.InventoryLogoPushButton.raise_()
        self.SaleLogoPushButton.raise_()
        self.CustomerLogoPushButton.raise_()
        self.NotificationLogoPushButton.raise_()
        self.SettingLogoPushButton.raise_()
        self.ReportsLogoPushButton.raise_()
        self.PurchasesFrame.raise_()
        self.SalesFrame.raise_()
        self.CustomerFrame.raise_()
        self.DashboardFrame.raise_()
        self.InventoryFrame.raise_()
        self.MessagesFrame.raise_()
        self.SettingsFrame.raise_()
        self.ReportsFrame.raise_()
        self.VendorFrame.raise_()
        self.LeftFrame.raise_()
        self.FooterFrame.raise_()
        self.HeaderFrame.raise_()
        self.ContextMenuCoverFrame = QtWidgets.QFrame(self.CentralWidget)
        self.ContextMenuCoverFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
        self.ContextMenuCoverFrame.setMinimumSize(QtCore.QSize(980, 610))
        self.ContextMenuCoverFrame.setMaximumSize(QtCore.QSize(980, 610))
        self.ContextMenuCoverFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ContextMenuCoverFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ContextMenuCoverFrame.setObjectName("ContextMenuCoverFrame")
        self.ContextMenuCoverFrame.setStyleSheet(
            "QFrame#ContextMenuCoverFrame{border: none;}")
        self.DialogBoxCoverFrame = QtWidgets.QFrame(self.CentralWidget)
        self.DialogBoxCoverFrame.setGeometry(QtCore.QRect(0, 0, 1274, 793))
        self.DialogBoxCoverFrame.setMinimumSize(QtCore.QSize(1274, 793))
        self.DialogBoxCoverFrame.setMaximumSize(QtCore.QSize(1274, 793))
        self.DialogBoxCoverFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.DialogBoxCoverFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.DialogBoxCoverFrame.setObjectName("DialogBoxCoverFrame")
        self.DialogBoxCoverFrame.setStyleSheet(
            "QFrame#DialogBoxCoverFrame{border: none;background-image: url(:/DialogBoxImg/Res/dialogcover.png);}")
        self.UserValidationFrame = QtWidgets.QFrame(self.CentralWidget)
        self.UserValidationFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
        self.UserValidationFrame.setMinimumSize(QtCore.QSize(980, 610))
        self.UserValidationFrame.setMaximumSize(QtCore.QSize(980, 610))
        self.UserValidationFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.UserValidationFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.UserValidationFrame.setObjectName("UserValidationFrame")
        self.ValidationLogoLabelLoginUI = QtWidgets.QLabel(
            self.UserValidationFrame)
        self.ValidationLogoLabelLoginUI.setGeometry(
            QtCore.QRect(40, 230, 300, 111))
        self.ValidationLogoLabelLoginUI.setText("")
        self.ValidationLogoLabelLoginUI.setObjectName(
            "ValidationLogoLabelLoginUI")
        self.ValidateClosePushButtonLoginUI = QtWidgets.QPushButton(
            self.UserValidationFrame)
        self.ValidateClosePushButtonLoginUI.setGeometry(
            QtCore.QRect(946, 3, 24, 24))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        self.ValidateClosePushButtonLoginUI.setFont(font)
        self.ValidateClosePushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ValidateClosePushButtonLoginUI.setText("")
        self.ValidateClosePushButtonLoginUI.setObjectName(
            "ValidateClosePushButtonLoginUI")
        self.ValidateMinimizePushButtonLoginUI = QtWidgets.QPushButton(
            self.UserValidationFrame)
        self.ValidateMinimizePushButtonLoginUI.setGeometry(
            QtCore.QRect(920, 3, 24, 24))
        font = QtGui.QFont()
        font.setFamily("Century Gothic")
        font.setPointSize(10)
        self.ValidateMinimizePushButtonLoginUI.setFont(font)
        self.ValidateMinimizePushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ValidateMinimizePushButtonLoginUI.setText("")
        self.ValidateMinimizePushButtonLoginUI.setObjectName(
            "ValidateMinimizePushButtonLoginUI")
        self.ValidationSplitterLabelLoginUI = QtWidgets.QLabel(
            self.UserValidationFrame)
        self.ValidationSplitterLabelLoginUI.setGeometry(
            QtCore.QRect(390, 90, 2, 450))
        self.ValidationSplitterLabelLoginUI.setText("")
        self.ValidationSplitterLabelLoginUI.setObjectName(
            "ValidationSplitterLabelLoginUI")
        self.RegisterFrameLoginUI = QtWidgets.QFrame(self.UserValidationFrame)
        self.RegisterFrameLoginUI.setGeometry(QtCore.QRect(430, 150, 461, 421))
        self.RegisterFrameLoginUI.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.RegisterFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.RegisterFrameLoginUI.setObjectName("RegisterFrameLoginUI")
        self.BigRegisterFrameLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.BigRegisterFrameLabelLoginUI.setGeometry(
            QtCore.QRect(20, 0, 425, 360))
        self.BigRegisterFrameLabelLoginUI.setText("")
        self.BigRegisterFrameLabelLoginUI.setObjectName(
            "BigRegisterFrameLabelLoginUI")
        self.ValidateRegisterPushButtonLoginUI = QtWidgets.QPushButton(
            self.RegisterFrameLoginUI)
        self.ValidateRegisterPushButtonLoginUI.setGeometry(
            QtCore.QRect(31, 294, 400, 50))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ValidateRegisterPushButtonLoginUI.setFont(font)
        self.ValidateRegisterPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ValidateRegisterPushButtonLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.ValidateRegisterPushButtonLoginUI.setObjectName(
            "ValidateRegisterPushButtonLoginUI")
        self.ValidateRegisterPushButtonLoginUI.clicked.connect(
            self.MainGUIAddUser)
        self.SignupEmailIconLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.SignupEmailIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 85, 50, 48))
        self.SignupEmailIconLabelLoginUI.setText("")
        self.SignupEmailIconLabelLoginUI.setObjectName(
            "SignupEmailIconLabelLoginUI")
        self.SignupConfirmPasswordIconLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.SignupConfirmPasswordIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 225, 50, 48))
        self.SignupConfirmPasswordIconLabelLoginUI.setText("")
        self.SignupConfirmPasswordIconLabelLoginUI.setObjectName(
            "SignupConfirmPasswordIconLabelLoginUI")
        self.SignupUsernameIconLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.SignupUsernameIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 15, 50, 48))
        self.SignupUsernameIconLabelLoginUI.setText("")
        self.SignupUsernameIconLabelLoginUI.setObjectName(
            "SignupUsernameIconLabelLoginUI")
        self.SignupPasswordFrameLoginUI = QtWidgets.QFrame(
            self.RegisterFrameLoginUI)
        self.SignupPasswordFrameLoginUI.setGeometry(
            QtCore.QRect(31, 154, 350, 50))
        self.SignupPasswordFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.SignupPasswordFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SignupPasswordFrameLoginUI.setObjectName(
            "SignupPasswordFrameLoginUI")
        self.SignupPasswordLineEditLoginUI = QtWidgets.QLineEdit(
            self.SignupPasswordFrameLoginUI)
        self.SignupPasswordLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SignupPasswordLineEditLoginUI.setFont(font)
        self.SignupPasswordLineEditLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SignupPasswordLineEditLoginUI.setEchoMode(
            QtWidgets.QLineEdit.Password)
        self.SignupPasswordLineEditLoginUI.setAlignment(QtCore.Qt.AlignCenter)
        self.SignupPasswordLineEditLoginUI.setObjectName(
            "SignupPasswordLineEditLoginUI")
        self.SignupPasswordLabelLoginUI = QtWidgets.QPushButton(
            self.SignupPasswordFrameLoginUI)
        self.SignupPasswordLabelLoginUI.setGeometry(
            QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SignupPasswordLabelLoginUI.setFont(font)
        self.SignupPasswordLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SignupPasswordLabelLoginUI.setObjectName(
            "SignupPasswordLabelLoginUI")
        self.SignupPasswordLabelLoginUI.setFocusPolicy(QtCore.Qt.NoFocus)
        self.SignupEmailFrameLoginUI = QtWidgets.QFrame(
            self.RegisterFrameLoginUI)
        self.SignupEmailFrameLoginUI.setGeometry(QtCore.QRect(31, 84, 350, 50))
        self.SignupEmailFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.SignupEmailFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SignupEmailFrameLoginUI.setObjectName("SignupEmailFrameLoginUI")
        self.SignupEmailLineEditLoginUI = QtWidgets.QLineEdit(
            self.SignupEmailFrameLoginUI)
        self.SignupEmailLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SignupEmailLineEditLoginUI.setFont(font)
        self.SignupEmailLineEditLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SignupEmailLineEditLoginUI.setAlignment(QtCore.Qt.AlignCenter)
        self.SignupEmailLineEditLoginUI.setObjectName(
            "SignupEmailLineEditLoginUI")
        self.SignupEmailLabelLoginUI = QtWidgets.QPushButton(
            self.SignupEmailFrameLoginUI)
        self.SignupEmailLabelLoginUI.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SignupEmailLabelLoginUI.setFont(font)
        self.SignupEmailLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SignupEmailLabelLoginUI.setObjectName("SignupEmailLabelLoginUI")
        self.SignupEmailLabelLoginUI.setFocusPolicy(QtCore.Qt.NoFocus)
        self.SignupUsernameFrameLoginUI = QtWidgets.QFrame(
            self.RegisterFrameLoginUI)
        self.SignupUsernameFrameLoginUI.setGeometry(
            QtCore.QRect(31, 14, 350, 50))
        self.SignupUsernameFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.SignupUsernameFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SignupUsernameFrameLoginUI.setObjectName(
            "SignupUsernameFrameLoginUI")
        self.SignupUsernameLineEditLoginUI = QtWidgets.QLineEdit(
            self.SignupUsernameFrameLoginUI)
        self.SignupUsernameLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SignupUsernameLineEditLoginUI.setFont(font)
        self.SignupUsernameLineEditLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SignupUsernameLineEditLoginUI.setAlignment(QtCore.Qt.AlignCenter)
        self.SignupUsernameLineEditLoginUI.setObjectName(
            "SignupUsernameLineEditLoginUI")
        self.SignupUsernameLabelLoginUI = QtWidgets.QPushButton(
            self.SignupUsernameFrameLoginUI)
        self.SignupUsernameLabelLoginUI.setGeometry(
            QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SignupUsernameLabelLoginUI.setFont(font)
        self.SignupUsernameLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SignupUsernameLabelLoginUI.setObjectName(
            "SignupUsernameLabelLoginUI")
        self.SignupUsernameLabelLoginUI.setFocusPolicy(QtCore.Qt.NoFocus)
        self.SignupConfirmPasswordFrameLoginUI = QtWidgets.QFrame(
            self.RegisterFrameLoginUI)
        self.SignupConfirmPasswordFrameLoginUI.setGeometry(
            QtCore.QRect(31, 224, 350, 50))
        self.SignupConfirmPasswordFrameLoginUI.setFrameShape(
            QtWidgets.QFrame.Box)
        self.SignupConfirmPasswordFrameLoginUI.setFrameShadow(
            QtWidgets.QFrame.Plain)
        self.SignupConfirmPasswordFrameLoginUI.setObjectName(
            "SignupConfirmPasswordFrameLoginUI")
        self.SignupConfirmPasswordLineEditLoginUI = QtWidgets.QLineEdit(
            self.SignupConfirmPasswordFrameLoginUI)
        self.SignupConfirmPasswordLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SignupConfirmPasswordLineEditLoginUI.setFont(font)
        self.SignupConfirmPasswordLineEditLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SignupConfirmPasswordLineEditLoginUI.setEchoMode(
            QtWidgets.QLineEdit.Password)
        self.SignupConfirmPasswordLineEditLoginUI.setAlignment(
            QtCore.Qt.AlignCenter)
        self.SignupConfirmPasswordLineEditLoginUI.setObjectName(
            "SignupConfirmPasswordLineEditLoginUI")
        self.SignupConfirmPasswordLabelLoginUI = QtWidgets.QPushButton(
            self.SignupConfirmPasswordFrameLoginUI)
        self.SignupConfirmPasswordLabelLoginUI.setGeometry(
            QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SignupConfirmPasswordLabelLoginUI.setFont(font)
        self.SignupConfirmPasswordLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SignupConfirmPasswordLabelLoginUI.setObjectName(
            "SignupConfirmPasswordLabelLoginUI")
        self.SignupConfirmPasswordLabelLoginUI.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.SignupPasswordIconLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.SignupPasswordIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 155, 50, 48))
        self.SignupPasswordIconLabelLoginUI.setText("")
        self.SignupPasswordIconLabelLoginUI.setObjectName(
            "SignupPasswordIconLabelLoginUI")
        self.RegisterErrorLabelLoginUI = QtWidgets.QLabel(
            self.RegisterFrameLoginUI)
        self.RegisterErrorLabelLoginUI.setGeometry(
            QtCore.QRect(20, 364, 421, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.RegisterErrorLabelLoginUI.setFont(font)
        self.RegisterErrorLabelLoginUI.setText("")
        self.RegisterErrorLabelLoginUI.setObjectName(
            "RegisterErrorLabelLoginUI")
        self.RegisterFrameCoverLoginUI = QtWidgets.QFrame(
            self.RegisterFrameLoginUI)
        self.RegisterFrameCoverLoginUI.setGeometry(
            QtCore.QRect(100, -1, 90, 10))
        self.RegisterFrameCoverLoginUI.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.RegisterFrameCoverLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.RegisterFrameCoverLoginUI.setObjectName(
            "RegisterFrameCoverLoginUI")
        self.BigRegisterFrameLabelLoginUI.raise_()
        self.ValidateRegisterPushButtonLoginUI.raise_()
        self.SignupPasswordFrameLoginUI.raise_()
        self.SignupEmailFrameLoginUI.raise_()
        self.SignupUsernameFrameLoginUI.raise_()
        self.SignupConfirmPasswordFrameLoginUI.raise_()
        self.SignupEmailIconLabelLoginUI.raise_()
        self.SignupConfirmPasswordIconLabelLoginUI.raise_()
        self.SignupUsernameIconLabelLoginUI.raise_()
        self.SignupPasswordIconLabelLoginUI.raise_()
        self.RegisterErrorLabelLoginUI.raise_()
        self.RegisterFrameCoverLoginUI.raise_()
        self.LoginFrameLoginUI = QtWidgets.QFrame(self.UserValidationFrame)
        self.LoginFrameLoginUI.setGeometry(QtCore.QRect(430, 150, 461, 421))
        self.LoginFrameLoginUI.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.LoginFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LoginFrameLoginUI.setObjectName("LoginFrameLoginUI")
        self.BigLoginFrameLabelLoginUI = QtWidgets.QLabel(
            self.LoginFrameLoginUI)
        self.BigLoginFrameLabelLoginUI.setGeometry(
            QtCore.QRect(20, 0, 425, 271))
        self.BigLoginFrameLabelLoginUI.setText("")
        self.BigLoginFrameLabelLoginUI.setObjectName(
            "BigLoginFrameLabelLoginUI")
        self.LoginPasswordFrameLoginUI = QtWidgets.QFrame(
            self.LoginFrameLoginUI)
        self.LoginPasswordFrameLoginUI.setGeometry(
            QtCore.QRect(31, 84, 350, 50))
        self.LoginPasswordFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.LoginPasswordFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Plain)
        self.LoginPasswordFrameLoginUI.setObjectName(
            "LoginPasswordFrameLoginUI")
        self.LoginPasswordLineEditLoginUI = QtWidgets.QLineEdit(
            self.LoginPasswordFrameLoginUI)
        self.LoginPasswordLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.LoginPasswordLineEditLoginUI.setFont(font)
        self.LoginPasswordLineEditLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.LoginPasswordLineEditLoginUI.setEchoMode(
            QtWidgets.QLineEdit.Password)
        self.LoginPasswordLineEditLoginUI.setAlignment(QtCore.Qt.AlignCenter)
        self.LoginPasswordLineEditLoginUI.setObjectName(
            "LoginPasswordLineEditLoginUI")
        self.LoginPasswordLabelLoginUI = QtWidgets.QPushButton(
            self.LoginPasswordFrameLoginUI)
        self.LoginPasswordLabelLoginUI.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.LoginPasswordLabelLoginUI.setFont(font)
        self.LoginPasswordLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.LoginPasswordLabelLoginUI.setObjectName(
            "LoginPasswordLabelLoginUI")
        self.LoginPasswordLabelLoginUI.setFocusPolicy(QtCore.Qt.NoFocus)
        self.LoginUsernameFrameLoginUI = QtWidgets.QFrame(
            self.LoginFrameLoginUI)
        self.LoginUsernameFrameLoginUI.setGeometry(
            QtCore.QRect(31, 14, 350, 50))
        self.LoginUsernameFrameLoginUI.setFrameShape(QtWidgets.QFrame.Box)
        self.LoginUsernameFrameLoginUI.setFrameShadow(QtWidgets.QFrame.Plain)
        self.LoginUsernameFrameLoginUI.setObjectName(
            "LoginUsernameFrameLoginUI")
        self.LoginUsernameLineEditLoginUI = QtWidgets.QLineEdit(
            self.LoginUsernameFrameLoginUI)
        self.LoginUsernameLineEditLoginUI.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.LoginUsernameLineEditLoginUI.setFont(font)
        self.LoginUsernameLineEditLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.LoginUsernameLineEditLoginUI.setAlignment(QtCore.Qt.AlignCenter)
        self.LoginUsernameLineEditLoginUI.setObjectName(
            "LoginUsernameLineEditLoginUI")
        self.LoginUsernameLabelLoginUI = QtWidgets.QPushButton(
            self.LoginUsernameFrameLoginUI)
        self.LoginUsernameLabelLoginUI.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.LoginUsernameLabelLoginUI.setFont(font)
        self.LoginUsernameLabelLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.LoginUsernameLabelLoginUI.setObjectName(
            "LoginUsernameLabelLoginUI")
        self.LoginUsernameLabelLoginUI.setFocusPolicy(QtCore.Qt.NoFocus)
        self.LoginPasswordIconLabelLoginUI = QtWidgets.QLabel(
            self.LoginFrameLoginUI)
        self.LoginPasswordIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 85, 50, 48))
        self.LoginPasswordIconLabelLoginUI.setText("")
        self.LoginPasswordIconLabelLoginUI.setObjectName(
            "LoginPasswordIconLabelLoginUI")
        self.ValidateLoginPushButtonLoginUI = QtWidgets.QPushButton(
            self.LoginFrameLoginUI)
        self.ValidateLoginPushButtonLoginUI.setGeometry(
            QtCore.QRect(30, 202, 400, 50))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ValidateLoginPushButtonLoginUI.setFont(font)
        self.ValidateLoginPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ValidateLoginPushButtonLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.ValidateLoginPushButtonLoginUI.setObjectName(
            "ValidateLoginPushButtonLoginUI")
        self.ValidateLoginPushButtonLoginUI.clicked.connect(
            self.MainGUIUserLogin)
        self.LoginUsernameIconLabelLoginUI = QtWidgets.QLabel(
            self.LoginFrameLoginUI)
        self.LoginUsernameIconLabelLoginUI.setGeometry(
            QtCore.QRect(380, 15, 50, 48))
        self.LoginUsernameIconLabelLoginUI.setText("")
        self.LoginUsernameIconLabelLoginUI.setObjectName(
            "LoginUsernameIconLabelLoginUI")
        self.LoginForgotPasswordPushButtonLoginUI = QtWidgets.QPushButton(
            self.LoginFrameLoginUI)
        self.LoginForgotPasswordPushButtonLoginUI.setGeometry(
            QtCore.QRect(300, 150, 130, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        self.LoginForgotPasswordPushButtonLoginUI.setFont(font)
        self.LoginForgotPasswordPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LoginForgotPasswordPushButtonLoginUI.setObjectName(
            "LoginForgotPasswordPushButtonLoginUI")
        self.LoginForgotPasswordPushButtonLoginUI.clicked.connect(
            self.ButtonEvents)
        self.LoginForgotPasswordPushButtonLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.LoginRemembermeCheckBoxLoginUI = QtWidgets.QCheckBox(
            self.LoginFrameLoginUI)
        self.LoginRemembermeCheckBoxLoginUI.setGeometry(
            QtCore.QRect(30, 150, 145, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        self.LoginRemembermeCheckBoxLoginUI.setFont(font)
        self.LoginRemembermeCheckBoxLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LoginRemembermeCheckBoxLoginUI.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.LoginRemembermeCheckBoxLoginUI.setObjectName(
            "LoginRemembermeCheckBoxLoginUI")
        self.LoginErrorLabelLoginUI = QtWidgets.QLabel(self.LoginFrameLoginUI)
        self.LoginErrorLabelLoginUI.setGeometry(QtCore.QRect(20, 274, 421, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.LoginErrorLabelLoginUI.setFont(font)
        self.LoginErrorLabelLoginUI.setText("")
        self.LoginErrorLabelLoginUI.setObjectName("LoginErrorLabelLoginUI")
        self.LoginFrameCoverLoginUI = QtWidgets.QFrame(self.LoginFrameLoginUI)
        self.LoginFrameCoverLoginUI.setGeometry(QtCore.QRect(21, -1, 79, 10))
        self.LoginFrameCoverLoginUI.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.LoginFrameCoverLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LoginFrameCoverLoginUI.setObjectName("LoginFrameCoverLoginUI")
        self.LoginButtonFrameLabelLoginUI = QtWidgets.QLabel(
            self.UserValidationFrame)
        self.LoginButtonFrameLabelLoginUI.setGeometry(
            QtCore.QRect(450, 110, 81, 41))
        self.LoginButtonFrameLabelLoginUI.setText("")
        self.LoginButtonFrameLabelLoginUI.setObjectName(
            "LoginButtonFrameLabelLoginUI")
        self.LoginPushButtonLoginUI = QtWidgets.QPushButton(
            self.UserValidationFrame)
        self.LoginPushButtonLoginUI.setGeometry(QtCore.QRect(451, 120, 79, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        self.LoginPushButtonLoginUI.setFont(font)
        self.LoginPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.LoginPushButtonLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.LoginPushButtonLoginUI.setObjectName("LoginPushButtonLoginUI")
        self.LoginPushButtonLoginUI.clicked.connect(self.VerifyOption)
        self.RegisterPushButtonLoginUI = QtWidgets.QPushButton(
            self.UserValidationFrame)
        self.RegisterPushButtonLoginUI.setGeometry(
            QtCore.QRect(531, 120, 89, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        self.RegisterPushButtonLoginUI.setFont(font)
        self.RegisterPushButtonLoginUI.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.RegisterPushButtonLoginUI.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.RegisterPushButtonLoginUI.setObjectName(
            "RegisterPushButtonLoginUI")
        self.RegisterPushButtonLoginUI.clicked.connect(self.VerifyOption)
        self.RegisterButtonFrameLabelLoginUI = QtWidgets.QLabel(
            self.UserValidationFrame)
        self.RegisterButtonFrameLabelLoginUI.setGeometry(
            QtCore.QRect(530, 110, 91, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.RegisterButtonFrameLabelLoginUI.setFont(font)
        self.RegisterButtonFrameLabelLoginUI.setText("")
        self.RegisterButtonFrameLabelLoginUI.setObjectName(
            "RegisterButtonFrameLabelLoginUI")
        self.LoginFrameUpCoverLoginUI = QtWidgets.QFrame(
            self.UserValidationFrame)
        self.LoginFrameUpCoverLoginUI.setGeometry(
            QtCore.QRect(451, 103, 79, 10))
        self.LoginFrameUpCoverLoginUI.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.LoginFrameUpCoverLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LoginFrameUpCoverLoginUI.setObjectName("LoginFrameUpCoverLoginUI")
        self.LoginFrameLeftCoverLoginUI = QtWidgets.QFrame(
            self.UserValidationFrame)
        self.LoginFrameLeftCoverLoginUI.setGeometry(
            QtCore.QRect(442, 110, 10, 40))
        self.LoginFrameLeftCoverLoginUI.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.LoginFrameLeftCoverLoginUI.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LoginFrameLeftCoverLoginUI.setObjectName(
            "LoginFrameLeftCoverLoginUI")
        self.RegisterFrameUpCoverLoginUI = QtWidgets.QFrame(
            self.UserValidationFrame)
        self.RegisterFrameUpCoverLoginUI.setGeometry(
            QtCore.QRect(531, 103, 90, 10))
        self.RegisterFrameUpCoverLoginUI.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.RegisterFrameUpCoverLoginUI.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.RegisterFrameUpCoverLoginUI.setObjectName(
            "RegisterFrameUpCoverLoginUI")
        self.RegisterFrameRightCoverLoginUI = QtWidgets.QFrame(
            self.UserValidationFrame)
        self.RegisterFrameRightCoverLoginUI.setGeometry(
            QtCore.QRect(618, 110, 10, 40))
        self.RegisterFrameRightCoverLoginUI.setFrameShape(
            QtWidgets.QFrame.StyledPanel)
        self.RegisterFrameRightCoverLoginUI.setFrameShadow(
            QtWidgets.QFrame.Raised)
        self.RegisterFrameRightCoverLoginUI.setObjectName(
            "RegisterFrameRightCoverLoginUI")
        self.LoginFrameLeftCoverLoginUI.raise_()
        self.LoginFrameUpCoverLoginUI.raise_()
        self.LoginButtonFrameLabelLoginUI.raise_()
        self.RegisterFrameLoginUI.raise_()
        self.RegisterButtonFrameLabelLoginUI.raise_()
        self.LoginFrameLoginUI.raise_()
        self.ValidationLogoLabelLoginUI.raise_()
        self.ValidateClosePushButtonLoginUI.raise_()
        self.ValidationSplitterLabelLoginUI.raise_()
        self.LoginPushButtonLoginUI.raise_()
        self.RegisterPushButtonLoginUI.raise_()
        self.RegisterFrameUpCoverLoginUI.raise_()
        self.RegisterFrameRightCoverLoginUI.raise_()
        self.ValidateMinimizePushButtonLoginUI.raise_()
        self.HomeFrame = QtWidgets.QFrame(self.CentralWidget)
        self.HomeFrame.setGeometry(QtCore.QRect(0, 0, 980, 610))
        self.HomeFrame.setMinimumSize(QtCore.QSize(980, 610))
        self.HomeFrame.setMaximumSize(QtCore.QSize(980, 610))
        self.HomeFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.HomeFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.HomeFrame.setObjectName("HomeFrame")
        self.HomeVendorsPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeVendorsPushButton.setGeometry(QtCore.QRect(70, 160, 180, 180))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(24)
        self.HomeVendorsPushButton.setFont(font)
        self.HomeVendorsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeVendorsPushButton.setText("")
        self.HomeVendorsPushButton.setObjectName("HomeVendorsPushButton")
        self.HomeVendorsPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomePurchasesPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomePurchasesPushButton.setGeometry(
            QtCore.QRect(290, 160, 180, 180))
        self.HomePurchasesPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomePurchasesPushButton.setText("")
        self.HomePurchasesPushButton.setObjectName("HomePurchasesPushButton")
        self.HomePurchasesPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeInventoryPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeInventoryPushButton.setGeometry(
            QtCore.QRect(510, 160, 180, 180))
        self.HomeInventoryPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeInventoryPushButton.setText("")
        self.HomeInventoryPushButton.setObjectName("HomeInventoryPushButton")
        self.HomeInventoryPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeSalesPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeSalesPushButton.setGeometry(QtCore.QRect(730, 160, 180, 180))
        self.HomeSalesPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeSalesPushButton.setText("")
        self.HomeSalesPushButton.setObjectName("HomeSalesPushButton")
        self.HomeSalesPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeCustomersPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeCustomersPushButton.setGeometry(
            QtCore.QRect(70, 380, 180, 180))
        self.HomeCustomersPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeCustomersPushButton.setText("")
        self.HomeCustomersPushButton.setObjectName("HomeCustomersPushButton")
        self.HomeCustomersPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeMessagesPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeMessagesPushButton.setGeometry(
            QtCore.QRect(290, 380, 180, 180))
        self.HomeMessagesPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeMessagesPushButton.setText("")
        self.HomeMessagesPushButton.setObjectName("HomeMessagesPushButton")
        self.HomeMessagesPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeSettingsPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeSettingsPushButton.setGeometry(
            QtCore.QRect(510, 380, 180, 180))
        self.HomeSettingsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeSettingsPushButton.setText("")
        self.HomeSettingsPushButton.setObjectName("HomeSettingsPushButton")
        self.HomeSettingsPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeReportsPushButton = QtWidgets.QPushButton(self.HomeFrame)
        self.HomeReportsPushButton.setGeometry(
            QtCore.QRect(730, 380, 180, 180))
        self.HomeReportsPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeReportsPushButton.setText("")
        self.HomeReportsPushButton.setObjectName("HomeReportsPushButton")
        self.HomeReportsPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeUserPictureLabel = QtWidgets.QLabel(self.HomeFrame)
        self.HomeUserPictureLabel.setGeometry(QtCore.QRect(930, 15, 32, 32))
        self.HomeUserPictureLabel.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.HomeUserPictureLabel.setText("")
        self.HomeUserPictureLabel.setObjectName("HomeUserPictureLabel")
        self.HomeUserComboBox = QtWidgets.QComboBox(self.HomeFrame)
        self.HomeUserComboBox.setGeometry(QtCore.QRect(740, 20, 180, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.HomeUserComboBox.setFont(font)
        self.HomeUserComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.HomeUserComboBox.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.HomeUserComboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.HomeUserComboBox.setStyleSheet("QComboBox {border: 1px solid rgb(44,62,80);background-color: rgb(44,62,80);padding: 0px 0px 0px 3px;min-width: 6em;color: red;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.HomeUserComboBox.setEditable(False)
        self.HomeUserComboBox.setObjectName("HomeUserComboBox")
        self.HomeUserComboBox.activated.connect(self.UserComboboxSelectItem)
        self.HomeUserComboBox.addItem("")
        self.HomeUserComboBox.addItem("")
        self.HomeUserComboBox.addItem("")
        self.HomeUserComboBox.addItem("")
        self.HomeUserComboBox.addItem("")
        self.HomeUserComboBox.addItem("")
        self.HomeUserInfoFrame = QtWidgets.QFrame(self.HomeFrame)
        self.HomeUserInfoFrame.setGeometry(QtCore.QRect(490, 15, 408, 41))
        self.HomeUserInfoFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.HomeUserInfoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.HomeUserInfoFrame.setObjectName("HomeUserInfoFrame")
        self.HomeUserNameLabel = QtWidgets.QLabel(self.HomeUserInfoFrame)
        self.HomeUserNameLabel.setGeometry(QtCore.QRect(100, 12, 301, 21))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.HomeUserNameLabel.setFont(font)
        self.HomeUserNameLabel.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.HomeUserNameLabel.setObjectName("HomeUserNameLabel")
        self.HomeHeaderLogoLabel = QtWidgets.QLabel(self.HomeFrame)
        self.HomeHeaderLogoLabel.setGeometry(QtCore.QRect(68, 30, 251, 91))
        self.HomeHeaderLogoLabel.setText("")
        self.HomeHeaderLogoLabel.setObjectName("HomeHeaderLogoLabel")
        self.HomeHeaderTextLabel = QtWidgets.QLabel(self.HomeFrame)
        self.HomeHeaderTextLabel.setGeometry(QtCore.QRect(310, 63, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(19)
        font.setBold(False)
        font.setWeight(50)
        self.HomeHeaderTextLabel.setFont(font)
        self.HomeHeaderTextLabel.setObjectName("HomeHeaderTextLabel")
        self.HomeVendorsPushButton.raise_()
        self.HomePurchasesPushButton.raise_()
        self.HomeInventoryPushButton.raise_()
        self.HomeSalesPushButton.raise_()
        self.HomeCustomersPushButton.raise_()
        self.HomeMessagesPushButton.raise_()
        self.AddSaleProductAddToCart.raise_()
        self.HomeSettingsPushButton.raise_()
        self.HomeReportsPushButton.raise_()
        self.HomeUserPictureLabel.raise_()
        self.HomeUserComboBox.raise_()
        self.HomeHeaderLogoLabel.raise_()
        self.HomeHeaderTextLabel.raise_()
        self.HomeUserInfoFrame.raise_()
        self.HomeFrame.raise_()
        self.MainFrame.raise_()
        self.UserValidationFrame.raise_()

        self.retranslateUi(self)
        self.VendorTabWidget.setCurrentIndex(1)
        self.PurchaseTabWidget.setCurrentIndex(1)
        self.SaleTabWidget.setCurrentIndex(1)
        self.CustomerTabWidget.setCurrentIndex(1)
        self.InventoryTabWidget.setCurrentIndex(2)
        self.SettingsTabWidget.setCurrentIndex(1)
        self.SettingsPreferencesAToolBox.setCurrentIndex(0)
        self.SettingsPreferencesBToolBox.setCurrentIndex(0)
        self.SaleLogoPushButton.clicked.connect(self.SalesFrame.raise_)
        self.SaleLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.CustomerLogoPushButton.clicked.connect(self.CustomerFrame.raise_)
        self.CustomerLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.DashboardLogoPushButton.clicked.connect(
            self.DashboardFrame.raise_)
        self.DashboardLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.NotificationLogoPushButton.clicked.connect(
            self.MessagesFrame.raise_)
        self.NotificationLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.SettingLogoPushButton.clicked.connect(self.SettingsFrame.raise_)
        self.SettingLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.ReportsLogoPushButton.clicked.connect(self.ReportsFrame.raise_)
        self.ReportsLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.InventoryLogoPushButton.clicked.connect(
            self.InventoryFrame.raise_)
        self.InventoryLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.PurchaseLogoPushButton.clicked.connect(self.PurchasesFrame.raise_)
        self.PurchaseLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.VendorLogoPushButton.clicked.connect(self.VendorFrame.raise_)
        self.VendorLogoPushButton.clicked.connect(self.ChangeButtonColor)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.LoginFrameLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.RegisterFrameLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.LoginFrameLeftCoverLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.LoginFrameUpCoverLoginUI.raise_)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.RegisterFrameUpCoverLoginUI.raise_)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.RegisterFrameRightCoverLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.LoginPushButtonLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.RegisterFrameCoverLoginUI.raise_)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.RegisterPushButtonLoginUI.raise_)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.LoginFrameCoverLoginUI.raise_)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.RegisterFrameUpCoverLoginUI.lower)
        self.RegisterPushButtonLoginUI.clicked.connect(
            self.RegisterFrameRightCoverLoginUI.lower)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.LoginFrameUpCoverLoginUI.lower)
        self.LoginPushButtonLoginUI.clicked.connect(
            self.LoginFrameLeftCoverLoginUI.lower)
        self.ValidateClosePushButtonLoginUI.clicked.connect(self.close)
        self.ReportsInventorySummaryPushButton.clicked.connect(
            self.ReportsInventorySummaryFilterFrame.raise_)
        self.ReportsInventoryDetailsPushButton.clicked.connect(
            self.ReportsInventoryDetailsFilterFrame.raise_)
        self.ReportsInventoryByLocationPushButton.clicked.connect(
            self.ReportsInventoryByLocationFilterFrame.raise_)
        self.ReportsProductPriceListPushButton.clicked.connect(
            self.ReportsProductPriceListFilterFrame.raise_)
        self.ReportsProductOrderedByCustomerPushButton.clicked.connect(
            self.ReportsProductOrderedByCustomerFilterFrame.raise_)
        self.ReportsVendorPaymentDetailsPushButton.clicked.connect(
            self.ReportsVendorPaymentDetailsFilterFrame.raise_)
        self.ReportsVendorProductListPushButton.clicked.connect(
            self.ReportsVendorProductListFilterFrame.raise_)
        self.ReportsVendorListPushButton.clicked.connect(
            self.ReportsVendorListFilterFrame.raise_)
        self.ReportsSalesOrderSummaryPushButton.clicked.connect(
            self.ReportsSalesOrderSummaryFilterFrame.raise_)
        self.ReportsSalesOrderProfitPushButton.clicked.connect(
            self.ReportsSalesOrderProfitFilterFrame.raise_)
        self.ReportsCustomerPaymentSummaryPushButton.clicked.connect(
            self.ReportsCustomerPaymentSummaryFilterFrame.raise_)
        self.ReportsCustomerPaymentDetailsPushButton.clicked.connect(
            self.ReportsCustomerPaymentDetailsFilterFrame.raise_)
        self.ReportsCustomerListPushButton.clicked.connect(
            self.ReportsCustomerListFilterFrame.raise_)
        self.ReportsPurchaseOrderSummaryPushButton.clicked.connect(
            self.ReportsPurchaseOrderSummaryFilterFrame.raise_)
        self.ReportsPurchaseOrderDetailsPushButton.clicked.connect(
            self.ReportsPurchaseOrderDetailsFilterFrame.raise_)
        self.ReportsPurchaseOrderStatusPushButton.clicked.connect(
            self.ReportsPurchaseOrderStatusFilterFrame.raise_)
        self.BackToReportsMenuPushButton.clicked.connect(
            self.ReportsMenuFrame.raise_)
        self.HomeVendorsPushButton.clicked.connect(self.VendorFrame.raise_)
        self.HomeVendorsPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeVendorsPushButton.clicked.connect(self.ButtonEvents)
        self.HomePurchasesPushButton.clicked.connect(
            self.PurchasesFrame.raise_)
        self.HomePurchasesPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomePurchasesPushButton.clicked.connect(self.ButtonEvents)
        self.HomeInventoryPushButton.clicked.connect(
            self.InventoryFrame.raise_)
        self.HomeInventoryPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeInventoryPushButton.clicked.connect(self.ButtonEvents)
        self.HomeSalesPushButton.clicked.connect(self.SalesFrame.raise_)
        self.HomeSalesPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeSalesPushButton.clicked.connect(self.ButtonEvents)
        self.HomeCustomersPushButton.clicked.connect(self.CustomerFrame.raise_)
        self.HomeCustomersPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeCustomersPushButton.clicked.connect(self.ButtonEvents)
        self.HomeMessagesPushButton.clicked.connect(self.MessagesFrame.raise_)
        self.HomeMessagesPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeMessagesPushButton.clicked.connect(self.ButtonEvents)
        self.HomeSettingsPushButton.clicked.connect(self.SettingsFrame.raise_)
        self.HomeSettingsPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeSettingsPushButton.clicked.connect(self.ButtonEvents)
        self.HomeReportsPushButton.clicked.connect(self.ReportsFrame.raise_)
        self.HomeReportsPushButton.clicked.connect(self.ChangeButtonColor)
        self.HomeReportsPushButton.clicked.connect(self.ButtonEvents)
        self.HomeVendorsPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomePurchasesPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeInventoryPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeSalesPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeCustomersPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeMessagesPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeSettingsPushButton.clicked.connect(self.MainFrame.raise_)
        self.HomeReportsPushButton.clicked.connect(self.MainFrame.raise_)
        self.ValidateMinimizePushButtonLoginUI.clicked.connect(self.MinMax)
        QtCore.QMetaObject.connectSlotsByName(self)
        self.setTabOrder(self.LoginPushButtonLoginUI,
                         self.LoginUsernameLineEditLoginUI)
        self.setTabOrder(self.LoginUsernameLineEditLoginUI,
                         self.LoginPasswordLineEditLoginUI)
        self.setTabOrder(self.LoginPasswordLineEditLoginUI,
                         self.LoginRemembermeCheckBoxLoginUI)
        self.setTabOrder(self.LoginRemembermeCheckBoxLoginUI,
                         self.LoginForgotPasswordPushButtonLoginUI)
        self.setTabOrder(self.LoginForgotPasswordPushButtonLoginUI,
                         self.ValidateLoginPushButtonLoginUI)

    def retranslateUi(self, MyMainWindow):

        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MyMainWindow", "DanialSoft POS"))
        self.HeaderTextLabel.setText(_translate("MyMainWindow", ": pos"))
        self.UserComboBox.setCurrentText(
            _translate("MyMainWindow", "HOME     "))
        self.UserComboBox.setItemText(
            0, _translate("MyMainWindow", "HOME     "))
        self.UserComboBox.setItemText(
            1, _translate("MyMainWindow", "LOGOUT     "))
        self.UserComboBox.setItemText(
            2, _translate("MyMainWindow", "LARGE VIEW     "))
        self.UserComboBox.setItemText(
            3, _translate("MyMainWindow", "HIDE     "))
        self.UserComboBox.setItemText(
            4, _translate("MyMainWindow", "CLOSE     "))
        self.UserComboBox.setItemText(
            5, _translate("MyMainWindow", "HELP     "))
        self.UserNameLabel.setText(_translate("MyMainWindow", "CurrentUser"))
        self.AddVendorProductTableWidget.setSortingEnabled(True)
        item = self.AddVendorProductTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT CODE"))
        item = self.AddVendorProductTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.AddVendorProductTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        item = self.AddVendorProductTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "MEASUREMENT"))
        item = self.AddVendorProductTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "VENDOR PRICE"))
        __sortingEnabled = self.AddVendorProductTableWidget.isSortingEnabled()
        self.AddVendorProductTableWidget.setSortingEnabled(False)
        self.AddVendorProductTableWidget.setSortingEnabled(__sortingEnabled)
        self.AddVendorPhoneLabel.setText(_translate("MyMainWindow", "PHONE"))
        self.AddVendorEmailLabel.setText(_translate("MyMainWindow", "EMAIL"))
        self.AddVendorPaymentTermLabel.setText(
            _translate("MyMainWindow", "PAY TERM"))
        self.AddVendorDiscountLabel.setText(
            _translate("MyMainWindow", "DISCOUNT"))
        self.AddVendorCurrencyLabel.setText(
            _translate("MyMainWindow", "CURRENCY"))
        self.AddVendorTaxingLabel.setText(_translate("MyMainWindow", "TAXING"))
        self.AddVendorCarrierLabel.setText(
            _translate("MyMainWindow", "CARRIER"))
        self.AddVendorPaymentMethodLabel.setText(
            _translate("MyMainWindow", "PAYMENT"))
        self.AddVendorIDLineEdit.setText(
            _translate("MyMainWindow", "000000000"))
        self.AddVendorRemarksLabel.setText(
            _translate("MyMainWindow", "REMARKS"))
        self.AddVendorIDLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.AddVendorNameLabel.setText(_translate("MyMainWindow", "NAME"))
        self.AddVendorAddressLabel.setText(
            _translate("MyMainWindow", "ADDRESS"))
        self.AddVendorProductPushButton.setText(_translate("MyMainWindow", ""))
        self.AddVendorProductToPurchasePushButton.setText(
            _translate("MyMainWindow", ""))
        self.AddVendorSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.VendorTabWidget.setTabText(self.VendorTabWidget.indexOf(
            self.AddVendorTab), _translate("MyMainWindow", "    NEW"))
        self.VendorListTableWidget.setSortingEnabled(True)
        item = self.VendorListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "VENDOR CODE"))
        item = self.VendorListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.VendorListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "PHONE"))
        item = self.VendorListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "EMAIL"))
        item = self.VendorListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "ADDRESS"))
        item = self.VendorListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "DISCOUNT"))
        __sortingEnabled = self.VendorListTableWidget.isSortingEnabled()
        self.VendorListTableWidget.setSortingEnabled(False)
        self.VendorListTableWidget.setSortingEnabled(__sortingEnabled)
        self.SearchVendorLineEdit.setToolTip(_translate("MyMainWindow", ""))
        self.VendorTabWidget.setTabText(self.VendorTabWidget.indexOf(
            self.ListVendorTab), _translate("MyMainWindow", "  LIST"))
        self.VendorLabelTitle.setText(_translate("MyMainWindow", "Vendors"))
        self.AddPurchaseVendorIDLineEdit.setText(
            _translate("MyMainWindow", "--"))
        self.AddPurchaseStatusTextLabel.setText(
            _translate("MyMainWindow", "STATUS"))
        self.AddPurchaseSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.AddPurchaseProductTableWidget.setSortingEnabled(True)
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT CODE"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "QUANTITY"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "UNIT PRICE"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "DISCOUNT"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MyMainWindow", "TAX"))
        item = self.AddPurchaseProductTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MyMainWindow", "SUB TOTAL"))
        __sortingEnabled = self.AddPurchaseProductTableWidget.isSortingEnabled()
        self.AddPurchaseProductTableWidget.setSortingEnabled(False)
        self.AddPurchaseProductTableWidget.setSortingEnabled(__sortingEnabled)
        self.AddPurchaseDateTextLabel.setText(
            _translate("MyMainWindow", "DATE"))
        self.AddPurchaseOrderNumberTextLabel.setText(
            _translate("MyMainWindow", "ORDER #"))
        self.AddPurchaseInfoSplitterLabel.setToolTip(
            _translate("MyMainWindow", "Add Vendor Picture"))
        self.AddPurchaseOrderNumberInfoSplitterLabel.setToolTip(
            _translate("MyMainWindow", "Add Vendor Picture"))
        self.AddPurchaseDateInfoSplitterLabel.setToolTip(
            _translate("MyMainWindow", "Add Vendor Picture"))
        self.AddPurchaseStatusInfoSplitterLabel.setToolTip(
            _translate("MyMainWindow", "Add Vendor Picture"))
        self.AddPurchaseOrderNumberLineEdit.setText(
            _translate("MyMainWindow", "00000000"))
        self.AddPurchaseDateLineEdit.setText(
            datetime.now().strftime("%d-%b-%y"))
        self.AddPurchaseDueDateTextLabel.setText(
            _translate("MyMainWindow", "DUE DATE"))
        self.AddPurchaseDueDateDateEdit.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.AddPurchaseRequestShipDateTextLabel.setText(
            _translate("MyMainWindow", "REQ SHIP DATE"))
        self.AddPurchaseRequestShipDateDateEdit.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.AddPurchaseRemarksTextLabel.setText(
            _translate("MyMainWindow", "REMARKS"))
        self.AddPurchaseTotalLineEdit.setText(
            _translate("MyMainWindow", "0.0"))
        self.AddPurchaseTotalTextLabel.setText(
            _translate("MyMainWindow", "TOTAL"))
        self.AddPurchasePaidTextLabel.setText(
            _translate("MyMainWindow", "PAID"))
        self.AddPurchasePaidLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddPurchaseCurrencyTextLabel.setText(
            _translate("MyMainWindow", "CURRENCY"))
        self.AddPurchaseBalanceLineEdit.setText(
            _translate("MyMainWindow", "0.0"))
        self.AddPurchaseBalanceTextLabel.setText(
            _translate("MyMainWindow", "BALANCE"))
        self.AddPurchasePaymentInfoLabel.setToolTip(
            _translate("MyMainWindow", "Add Vendor Picture"))
        self.PurchaseTabWidget.setTabText(self.PurchaseTabWidget.indexOf(
            self.NewPurchaseTab), _translate("MyMainWindow", "    NEW"))
        self.PurchaseListTableWidget.setSortingEnabled(True)
        item = self.PurchaseListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PURCHASE ORDER"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "VENDOR CODE"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "DATE"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "STATUS"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "DUE DATE"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "REQ. SHIP DATE"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MyMainWindow", "TOTAL"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MyMainWindow", "PAID"))
        item = self.PurchaseListTableWidget.horizontalHeaderItem(8)
        item.setText(_translate("MyMainWindow", "BALANCE"))
        __sortingEnabled = self.PurchaseListTableWidget.isSortingEnabled()
        self.PurchaseListTableWidget.setSortingEnabled(False)
        self.PurchaseListTableWidget.setSortingEnabled(__sortingEnabled)
        self.SearchPurchaseLineEdit.setToolTip(
            _translate("MyMainWindow", "Search Purchase"))
        self.PurchaseTabWidget.setTabText(self.PurchaseTabWidget.indexOf(
            self.ListPurchaseTab), _translate("MyMainWindow", "  LIST"))
        self.PurchaseLabelTitle.setText(
            _translate("MyMainWindow", "Purchases"))
        self.AddSaleChargePushButton.setText(
            _translate("MyMainWindow", "CHARGE"))
        self.AddSaleProductTableWidget.setSortingEnabled(True)
        item = self.AddSaleProductTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT ID"))
        item = self.AddSaleProductTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.AddSaleProductTableWidget.horizontalHeaderItem(2)
        __sortingEnabled = self.AddSaleProductTableWidget.isSortingEnabled()
        self.AddSaleProductTableWidget.setSortingEnabled(False)
        self.AddSaleProductTableWidget.setSortingEnabled(__sortingEnabled)
        self.AddSaleProductPayMethodLabelLineEdit.setText(
            _translate("MyMainWindow", "PAYMENT"))
        self.AddSaleProductCurrencyLabelLineEdit.setText(
            _translate("MyMainWindow", "CURRENCY"))
        self.AddSale1CalPushButton.setText(_translate("MyMainWindow", "1"))
        self.AddSale2CalPushButton.setText(_translate("MyMainWindow", "2"))
        self.AddSale3CalPushButton.setText(_translate("MyMainWindow", "3"))
        self.AddSale4CalPushButton.setText(_translate("MyMainWindow", "4"))
        self.AddSale5CalPushButton.setText(_translate("MyMainWindow", "5"))
        self.AddSale6CalPushButton.setText(_translate("MyMainWindow", "6"))
        self.AddSale8CalPushButton.setText(_translate("MyMainWindow", "8"))
        self.AddSale7CalPushButton.setText(_translate("MyMainWindow", "7"))
        self.AddSale9CalPushButton.setText(_translate("MyMainWindow", "9"))
        self.AddSale00CalPushButton.setText(_translate("MyMainWindow", "."))
        self.AddSale0CalPushButton.setText(_translate("MyMainWindow", "0"))
        self.AddSaleDeleteCalPushButton.setText(
            _translate("MyMainWindow", "C"))
        self.AddSaleProductNameLineEdit.setText(
            _translate("MyMainWindow", "---"))
        self.AddSaleProductCodeLabelLineEdit.setText(
            _translate("MyMainWindow", "PRODUCT ID"))
        self.AddSaleProductPriceLineEdit.setText(
            _translate("MyMainWindow", "0.0"))
        self.AddSaleProductQuantityLabelLineEdit.setText(
            _translate("MyMainWindow", "QUANTITY"))
        self.AddSaleProductQuantityLineEdit.setText(
            _translate("MyMainWindow", ""))
        self.AddSaleTaxLineEdit.setText(_translate("MyMainWindow", "0 %"))
        self.AddSaleSubTotalLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddSaleTotalTextLabel.setText(_translate("MyMainWindow", "TOTAL"))
        self.AddSaleSubTotalTextLabel.setText(
            _translate("MyMainWindow", "SUB TOTAL"))
        self.AddSaleDiscountLineEdit.setText(_translate("MyMainWindow", "0 %"))
        self.AddSaleDiscountTextLabel.setText(
            _translate("MyMainWindow", "DISCOUNT"))
        self.AddSaleTotalLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddSaleTaxTextLabel.setText(_translate("MyMainWindow", "TAX"))
        self.AddSaleBalanceTextLabel.setText(
            _translate("MyMainWindow", "BALANCE"))
        self.AddSaleBalanceLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddSaleChangeLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddSaleChangeTextLabel.setText(
            _translate("MyMainWindow", "CHANGE"))
        self.AddSaleCalcPaidLineEdit.setText(_translate("MyMainWindow", "0"))
        self.AddSalePaidLineEdit.setText(_translate("MyMainWindow", "0.0"))
        self.AddSalePaidTextLabel.setText(_translate("MyMainWindow", "PAID"))
        self.SaleTabWidget.setTabText(self.SaleTabWidget.indexOf(
            self.NewSaleTab), _translate("MyMainWindow", "    NEW"))
        self.SaleListTableWidget.setSortingEnabled(True)
        item = self.SaleListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "SALES ORDER"))
        item = self.SaleListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "CUSTOMER CODE"))
        item = self.SaleListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "DATE"))
        item = self.SaleListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "TOTAL"))
        item = self.SaleListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "PAID"))
        item = self.SaleListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "BALANCE"))
        item = self.SaleListTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MyMainWindow", "PAYMENT"))
        __sortingEnabled = self.SaleListTableWidget.isSortingEnabled()
        self.SaleListTableWidget.setSortingEnabled(False)
        self.SaleListTableWidget.setSortingEnabled(__sortingEnabled)
        self.CustomerSaleListTableWidget.setSortingEnabled(True)
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "SALES ORDER"))
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "DATE"))
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "TOTAL"))
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "PAID"))
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "BALANCE"))
        item = self.CustomerSaleListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "PAYMENT"))
        __sortingEnabled = self.CustomerSaleListTableWidget.isSortingEnabled()
        self.CustomerSaleListTableWidget.setSortingEnabled(False)
        self.CustomerSaleListTableWidget.setSortingEnabled(__sortingEnabled)
        self.SearchSaleLineEdit.setToolTip(
            _translate("MyMainWindow", "Search Sale"))
        self.SaleTabWidget.setTabText(self.SaleTabWidget.indexOf(
            self.ListSaleTab), _translate("MyMainWindow", "  LIST"))
        self.SaleLabelTitle.setText(_translate("MyMainWindow", "Sales"))
        self.AddCustomerPhoneLabel.setText(_translate("MyMainWindow", "PHONE"))
        self.AddCustomerEmailLabel.setText(_translate("MyMainWindow", "EMAIL"))
        self.AddCustomerPaymentTermLabel.setText(
            _translate("MyMainWindow", "PAY TERM"))
        self.AddCustomerDiscountLabel.setText(
            _translate("MyMainWindow", "DISCOUNT"))
        self.AddCustomerCurrencyLabel.setText(
            _translate("MyMainWindow", "CURRENCY"))
        self.AddCustomerTaxingLabel.setText(
            _translate("MyMainWindow", "TAXING"))
        self.AddCustomerCarrierLabel.setText(
            _translate("MyMainWindow", "CARRIER"))
        self.AddCustomerPaymentMethodLabel.setText(
            _translate("MyMainWindow", "PAYMENT"))
        self.AddCustomerIDLineEdit.setText(
            _translate("MyMainWindow", "000000000"))
        self.AddCustomerRemarksLabel.setText(
            _translate("MyMainWindow", "REMARKS"))
        self.AddCustomerIDLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.AddCustomerNameLabel.setText(_translate("MyMainWindow", "NAME"))
        self.AddCustomerAddressLabel.setText(
            _translate("MyMainWindow", "ADDRESS"))
        self.AddCustomerSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.CustomerTabWidget.setTabText(self.CustomerTabWidget.indexOf(
            self.AddCustomerTab), _translate("MyMainWindow", "    NEW"))
        self.CustomerListTableWidget.setSortingEnabled(True)
        item = self.CustomerListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "CUSTOMER CODE"))
        item = self.CustomerListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.CustomerListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "PHONE"))
        item = self.CustomerListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "EMAIL"))
        item = self.CustomerListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "ADDRESS"))
        item = self.CustomerListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "DISCOUNT"))
        __sortingEnabled = self.CustomerListTableWidget.isSortingEnabled()
        self.CustomerListTableWidget.setSortingEnabled(False)
        self.CustomerListTableWidget.setSortingEnabled(__sortingEnabled)
        self.SearchCustomerLineEdit.setToolTip(
            _translate("MyMainWindow", "Search Customer"))
        self.CustomerTabWidget.setTabText(self.CustomerTabWidget.indexOf(
            self.ListCustomerTab), _translate("MyMainWindow", "  LIST"))
        self.CustomerLabelTitle.setText(
            _translate("MyMainWindow", "Customers"))
        self.AddStockItemNameTextLabel.setText(
            _translate("MyMainWindow", "NAME"))
        self.AddStockItemCodeTextLabel.setText(
            _translate("MyMainWindow", "CODE"))
        self.AddStockItemCategoryTextLabel.setText(
            _translate("MyMainWindow", "CATEGORY"))
        self.AddStockItemPriceTextLabel.setText(
            _translate("MyMainWindow", "PRICE"))
        self.AddStockItemLocationTextLabel.setText(
            _translate("MyMainWindow", "LOCATION"))
        self.AddStockItemReorderPointTextLabel.setText(
            _translate("MyMainWindow", "REORDER POINT"))
        self.AddStockItemMeasurementTextLabel.setText(
            _translate("MyMainWindow", "MEASUREMENT"))
        self.AddStockItemRemarksTextLabel.setText(
            _translate("MyMainWindow", "REMARKS"))
        self.AddItemStockSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.AddStockItemPictureFrameImage.setToolTip(
            _translate("MyMainWindow", "Add Item Picture"))
        self.InventoryTabWidget.setTabText(self.InventoryTabWidget.indexOf(
            self.AddInventoryTab), _translate("MyMainWindow", "  NEW"))
        self.SearchReceiveOrderNumberTableWidget.setSortingEnabled(True)
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT CODE"))
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "VENDOR CODE"))
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "ORDER QTY"))
        item = self.SearchReceiveOrderNumberTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "RECEIVE QTY"))
        __sortingEnabled = self.SearchReceiveOrderNumberTableWidget.isSortingEnabled()
        self.SearchReceiveOrderNumberTableWidget.setSortingEnabled(False)
        self.SearchReceiveOrderNumberTableWidget.setSortingEnabled(
            __sortingEnabled)
        self.SearchReceiveOrderNumberSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.InventoryTabWidget.setTabText(self.InventoryTabWidget.indexOf(
            self.ReceiveInventoryTab), _translate("MyMainWindow", "     RECEIVE"))
        self.CurrentInventoryListTableWidget.setSortingEnabled(True)
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT CODE"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "NAME"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "PRICE"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MyMainWindow", "LOCATION"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(5)
        item.setText(_translate("MyMainWindow", "LAST VENDOR"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(6)
        item.setText(_translate("MyMainWindow", "AVG. UNIT COST"))
        item = self.CurrentInventoryListTableWidget.horizontalHeaderItem(7)
        item.setText(_translate("MyMainWindow", "QUANTITY"))
        __sortingEnabled = self.CurrentInventoryListTableWidget.isSortingEnabled()
        self.CurrentInventoryListTableWidget.setSortingEnabled(False)
        self.CurrentInventoryListTableWidget.setSortingEnabled(
            __sortingEnabled)
        self.SearchInventoryLineEdit.setToolTip(
            _translate("MyMainWindow", "Search Inventory"))
        self.InventoryTabWidget.setTabText(self.InventoryTabWidget.indexOf(
            self.CurrentInventoryTab), _translate("MyMainWindow", "    CURRENT"))
        self.InventoryLabelTitle.setText(
            _translate("MyMainWindow", "Inventory"))
        self.MessagesLabelTitle.setText(
            _translate("MyMainWindow", "Notifications"))
        self.NotificationsTableWidget.setSortingEnabled(True)
        item = self.NotificationsTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "NOTIFICATIONS"))
        __sortingEnabled = self.NotificationsTableWidget.isSortingEnabled()
        self.NotificationsTableWidget.setSortingEnabled(False)
        self.NotificationsTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsUsersMinusPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsUsersAddPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.DisableRegisteringNewAccountCheckBox.setText(_translate(
            "MyMainWindow", "Disable Registering New Account at Startup"))
        self.SettingsUserSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.SettingsUserTableWidget.setSortingEnabled(True)
        item = self.SettingsUserTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "USER NAME"))
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        item = self.SettingsUserTableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MyMainWindow", "EMAIL"))
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        item = self.SettingsUserTableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MyMainWindow", "PASSWORD"))
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        item = self.SettingsUserTableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        item.setTextAlignment(QtCore.Qt.AlignCenter)
        __sortingEnabled = self.SettingsUserTableWidget.isSortingEnabled()
        self.SettingsUserTableWidget.setSortingEnabled(False)
        self.SettingsUserTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsTabWidget.setTabText(self.SettingsTabWidget.indexOf(
            self.UsersSettingsTab), _translate("MyMainWindow", "    ACCOUNTS"))
        self.SettingsMinusCarrierPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddCarrierPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsCarrierTableWidget.setSortingEnabled(True)
        item = self.SettingsCarrierTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "CARRIER"))
        __sortingEnabled = self.SettingsCarrierTableWidget.isSortingEnabled()
        self.SettingsCarrierTableWidget.setSortingEnabled(False)
        self.SettingsCarrierTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesAToolBox.setItemText(self.SettingsPreferencesAToolBox.indexOf(
            self.CarrierPage), _translate("MyMainWindow", "CARRIER"))
        self.SettingsMinusLocationPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddLocationPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsLocationTableWidget.setSortingEnabled(True)
        item = self.SettingsLocationTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "LOCATION"))
        __sortingEnabled = self.SettingsLocationTableWidget.isSortingEnabled()
        self.SettingsLocationTableWidget.setSortingEnabled(False)
        self.SettingsLocationTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesAToolBox.setItemText(self.SettingsPreferencesAToolBox.indexOf(
            self.LocationPage), _translate("MyMainWindow", "LOCATION"))
        self.SettingsMinusDiscountPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddDiscountPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsDiscountTableWidget.setSortingEnabled(True)
        item = self.SettingsDiscountTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "DISCOUNT"))
        __sortingEnabled = self.SettingsDiscountTableWidget.isSortingEnabled()
        self.SettingsDiscountTableWidget.setSortingEnabled(False)
        self.SettingsDiscountTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesAToolBox.setItemText(self.SettingsPreferencesAToolBox.indexOf(
            self.DiscountPage), _translate("MyMainWindow", "DISCOUNT"))
        self.SettingsMinusMeasurementPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddMeasurementPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsMeasurementTableWidget.setSortingEnabled(True)
        item = self.SettingsMeasurementTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "MEASUREMENT"))
        __sortingEnabled = self.SettingsMeasurementTableWidget.isSortingEnabled()
        self.SettingsMeasurementTableWidget.setSortingEnabled(False)
        self.SettingsMeasurementTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesAToolBox.setItemText(self.SettingsPreferencesAToolBox.indexOf(
            self.MeasurementPage), _translate("MyMainWindow", "MEASUREMENT"))
        self.SettingsMinusPayMethodPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddPayMethodPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsPayMethodTableWidget.setSortingEnabled(True)
        item = self.SettingsPayMethodTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PAYMENT METHOD"))
        __sortingEnabled = self.SettingsPayMethodTableWidget.isSortingEnabled()
        self.SettingsPayMethodTableWidget.setSortingEnabled(False)
        self.SettingsPayMethodTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesBToolBox.setItemText(self.SettingsPreferencesBToolBox.indexOf(
            self.PaymentMethodPage), _translate("MyMainWindow", "PAYMENT"))
        self.SettingsMinusPayTermPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddPayTermPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsPayTermTableWidget.setSortingEnabled(True)
        item = self.SettingsPayTermTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PAYMENT TERM"))
        self.SettingsPreferencesBToolBox.setItemText(self.SettingsPreferencesBToolBox.indexOf(
            self.PaymentTermPage), _translate("MyMainWindow", "PAY TERM"))
        self.SettingsMinusCategoryPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddCategoryPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsCategoryTableWidget.setSortingEnabled(True)
        item = self.SettingsCategoryTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "CATEGORY"))
        __sortingEnabled = self.SettingsCategoryTableWidget.isSortingEnabled()
        self.SettingsCategoryTableWidget.setSortingEnabled(False)
        self.SettingsCategoryTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesBToolBox.setItemText(self.SettingsPreferencesBToolBox.indexOf(
            self.CategoryPage), _translate("MyMainWindow", "CATEGORY"))
        self.SettingsMinusTaxingPushButton.setToolTip(
            _translate("MyMainWindow", "Remove"))
        self.SettingsAddTaxingPushButton.setToolTip(
            _translate("MyMainWindow", "Add"))
        self.SettingsTaxingTableWidget.setSortingEnabled(True)
        item = self.SettingsTaxingTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "TAXING"))
        __sortingEnabled = self.SettingsTaxingTableWidget.isSortingEnabled()
        self.SettingsTaxingTableWidget.setSortingEnabled(False)
        self.SettingsTaxingTableWidget.setSortingEnabled(__sortingEnabled)
        self.SettingsPreferencesBToolBox.setItemText(self.SettingsPreferencesBToolBox.indexOf(
            self.TaxingPage), _translate("MyMainWindow", "TAXING"))
        self.SettingsReferenceSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))
        self.SettingsTabWidget.setTabText(self.SettingsTabWidget.indexOf(
            self.PreferencesSettingsTab), _translate("MyMainWindow", "    PREFERENCES"))
        self.SettingsLabelTitle.setText(_translate("MyMainWindow", "Settings"))
        self.AdminLoginPasswordLabelLoginUI.setText(
            _translate("MyMainWindow", "PASSWORD"))
        self.AdminLoginUsernameLabelLoginUI.setText(
            _translate("MyMainWindow", "USERNAME"))
        self.AdminValidateLoginPushButtonLoginUI.setText(
            _translate("MyMainWindow", "LOGIN"))
        self.AdminLoginLabel.setText(_translate(
            "MyMainWindow", "Login as Administrator account to update Settings"))
        self.ReportsLabelTitle.setText(_translate("MyMainWindow", "Reports"))
        self.ReportsSalesOrderSummaryPushButton.setText(
            _translate("MyMainWindow", "    Sales Order Summary"))
        self.ReportsSalesOrderProfitPushButton.setText(
            _translate("MyMainWindow", "    Sales Order Profit"))
        self.ReportsCustomerPaymentSummaryPushButton.setText(
            _translate("MyMainWindow", "    Customer Pay Summary"))
        self.ReportsCustomerPaymentDetailsPushButton.setText(
            _translate("MyMainWindow", "    Customer Pay Details"))
        self.ReportsProductOrderedByCustomerPushButton.setText(
            _translate("MyMainWindow", "    Ordered By Customer"))
        self.ReportsCustomerListPushButton.setText(
            _translate("MyMainWindow", "    Customer List"))
        self.ReportsPurchaseOrderSummaryPushButton.setText(
            _translate("MyMainWindow", "    Purchase Order Summary"))
        self.ReportsPurchaseOrderDetailsPushButton.setText(
            _translate("MyMainWindow", "    Purchase Order Details"))
        self.ReportsPurchaseOrderStatusPushButton.setText(
            _translate("MyMainWindow", "    Purchase Order Status"))
        self.ReportsVendorPaymentDetailsPushButton.setText(
            _translate("MyMainWindow", "    Vendor Payment Details"))
        self.ReportsVendorProductListPushButton.setText(
            _translate("MyMainWindow", "    Vendor Product List"))
        self.ReportsVendorListPushButton.setText(
            _translate("MyMainWindow", "    Vendor List"))
        self.ReportsInventorySummaryPushButton.setText(
            _translate("MyMainWindow", "    Inventory Summary"))
        self.ReportsInventoryDetailsPushButton.setText(
            _translate("MyMainWindow", "    Inventory Details"))
        self.ReportsInventoryByLocationPushButton.setText(
            _translate("MyMainWindow", "    Inventory By Location"))
        self.ReportsProductPriceListPushButton.setText(
            _translate("MyMainWindow", "    Product Price List"))
        self.ReportsInventorySummaryFilterTitleLabel.setText(
            _translate("MyMainWindow", "Inventory Summary Report"))
        self.ReportsInventorySummaryFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "The total quantities of product inventory levels."))
        self.ReportsInventorySummaryFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsInventorySummaryFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsInventorySummaryFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsInventoryDetailsFilterTitleLabel.setText(
            _translate("MyMainWindow", "Inventory Details Report"))
        self.ReportsInventoryDetailsFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "List of inventory by Location, Category, or Product."))
        self.ReportsInventoryDetailsFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsInventoryDetailsFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsInventoryDetailsFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsInventoryDetailsFilterByLocationLabel.setText(
            _translate("MyMainWindow", "LOCATION"))
        self.ReportsInventoryByLocationFilterTitleLabel.setText(
            _translate("MyMainWindow", "Inventory By Location Report"))
        self.ReportsInventoryByLocationFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Shows the total amount of each product in a location."))
        self.ReportsInventoryByLocationFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsInventoryByLocationFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsInventoryByLocationFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsInventoryByLocationFilterByLocationLabel.setText(
            _translate("MyMainWindow", "LOCATION"))
        self.ReportsProductPriceListFilterTitleLabel.setText(
            _translate("MyMainWindow", "Product Price List Report"))
        self.ReportsProductPriceListFilterCategoryLabel.setText(
            _translate("MyMainWindow", "List of products along with their prices."))
        self.ReportsProductPriceListFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsProductPriceListFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsProductPriceListFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsProductOrderedByCustomerFilterTitleLabel.setText(
            _translate("MyMainWindow", "Product Ordered By Customer Report"))
        self.ReportsProductOrderedByCustomerFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Shows you all customers that have ordered a product."))
        self.ReportsProductOrderedByCustomerFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsProductOrderedByCustomerFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsProductOrderedByCustomerFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsProductOrderedByCustomerFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsProductOrderedByCustomerFilterByPayStatusLabel.setText(
            _translate("MyMainWindow", "PAY STATUS"))
        self.ReportsProductOrderedByCustomerFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsProductOrderedByCustomerFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsProductOrderedByCustomerFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsVendorPaymentDetailsFilterTitleLabel.setText(
            _translate("MyMainWindow", "Vendor Payment Details Report"))
        self.ReportsVendorPaymentDetailsFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "A breakdown of all payments to vendors and refunds."))
        self.ReportsVendorPaymentDetailsFilterByPayMethodLabel.setText(
            _translate("MyMainWindow", "PAYMENT"))
        self.ReportsVendorPaymentDetailsFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsVendorPaymentDetailsFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsVendorPaymentDetailsFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsVendorPaymentDetailsFilterByVendorLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsVendorPaymentDetailsFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsVendorPaymentDetailsFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsVendorPaymentDetailsFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsVendorProductListFilterTitleLabel.setText(
            _translate("MyMainWindow", "Vendor Product List Report"))
        self.ReportsVendorProductListFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "List of products with related information from Vendor."))
        self.ReportsVendorProductListFilterByVendorLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsVendorProductListFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsVendorProductListFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsVendorProductListFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsVendorListFilterTitleLabel.setText(
            _translate("MyMainWindow", "Vendor List Report"))
        self.ReportsVendorListFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "A list of your vendors and their contact information."))
        self.ReportsVendorListFilterByVendorCodeLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsVendorListFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsVendorListFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsSalesOrderSummaryFilterTitleLabel.setText(
            _translate("MyMainWindow", "Sales Order Summary Report"))
        self.ReportsSalesOrderSummaryFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Summary of financial info for a number of sales orders."))
        self.ReportsSalesOrderSummaryFilterByCustomerLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.ReportsSalesOrderSummaryFilterByPayStatusLabel.setText(
            _translate("MyMainWindow", "PAY STATUS"))
        self.ReportsSalesOrderSummaryFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsSalesOrderSummaryFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsSalesOrderSummaryFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsSalesOrderSummaryFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsSalesOrderSummaryFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsSalesOrderSummaryFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsSalesOrderProfitFilterTitleLabel.setText(
            _translate("MyMainWindow", "Sales Order Profit Report"))
        self.ReportsSalesOrderProfitFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "List of Sales Orders with the profit of each sales order."))
        self.ReportsSalesOrderProfitFilterByCustomerLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.ReportsSalesOrderProfitFilterByPayStatusLabel.setText(
            _translate("MyMainWindow", "PAY STATUS"))
        self.ReportsSalesOrderProfitFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsSalesOrderProfitFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsSalesOrderProfitFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsSalesOrderProfitFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsSalesOrderProfitFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsSalesOrderProfitFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsCustomerPaymentSummaryFilterTitleLabel.setText(
            _translate("MyMainWindow", "Customer Payment Summary Report"))
        self.ReportsCustomerPaymentSummaryFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "List of customers with a summary of their accounts"))
        self.ReportsCustomerPaymentSummaryFilterByCustomerLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.ReportsCustomerPaymentSummaryFilterByPayStatusLabel.setText(
            _translate("MyMainWindow", "PAY STATUS"))
        self.ReportsCustomerPaymentSummaryFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsCustomerPaymentSummaryFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsCustomerPaymentSummaryFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsCustomerPaymentSummaryFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsCustomerPaymentSummaryFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsCustomerPaymentSummaryFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsCustomerPaymentSummaryFilterCategoryContinueLabel.setText(
            _translate("MyMainWindow", "receivable information."))
        self.ReportsCustomerPaymentDetailsFilterTitleLabel.setText(
            _translate("MyMainWindow", "Customer Payment Details Report"))
        self.ReportsCustomerPaymentDetailsFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Breakdown of all payments from customers & refunds."))
        self.ReportsCustomerPaymentDetailsFilterByCustomerLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.ReportsCustomerPaymentDetailsFilterByPayMethodLabel.setText(
            _translate("MyMainWindow", "PAYMENT"))
        self.ReportsCustomerPaymentDetailsFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsCustomerPaymentDetailsFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsCustomerPaymentDetailsFilterByPayFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsCustomerPaymentDetailsFilterByPayFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsCustomerPaymentDetailsFilterByPayToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsCustomerPaymentDetailsFilterByPayToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsCustomerListFilterTitleLabel.setText(
            _translate("MyMainWindow", "Customer List Report"))
        self.ReportsCustomerListFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "A list of your customers and their contact information."))
        self.ReportsCustomerListFilterByCustomerLabel.setText(
            _translate("MyMainWindow", "CUSTOMER CODE"))
        self.ReportsCustomerListFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsCustomerListFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsPurchaseOrderSummaryFilterTitleLabel.setText(
            _translate("MyMainWindow", "Purchase Order Summary Report"))
        self.ReportsPurchaseOrderSummaryFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Shows a summary of a number of Purchase Orders."))
        self.ReportsPurchaseOrderSummaryFilterByStatusLabel.setText(
            _translate("MyMainWindow", "STATUS"))
        self.ReportsPurchaseOrderSummaryFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsPurchaseOrderSummaryFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsPurchaseOrderSummaryFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsPurchaseOrderSummaryFilterByVendorLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsPurchaseOrderSummaryFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsPurchaseOrderSummaryFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsPurchaseOrderSummaryFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsPurchaseOrderDetailsFilterTitleLabel.setText(
            _translate("MyMainWindow", "Purchase Order Details Report"))
        self.ReportsPurchaseOrderDetailsFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Shows you the items you\'ve purchased from vendors."))
        self.ReportsPurchaseOrderDetailsFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsPurchaseOrderDetailsFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsPurchaseOrderDetailsFilterByDateFromLabel.setText(
            _translate("MyMainWindow", "DATE FROM"))
        self.ReportsPurchaseOrderDetailsFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportsPurchaseOrderDetailsFilterByDateFromComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsPurchaseOrderDetailsFilterByDateToLabel.setText(
            _translate("MyMainWindow", "DATE TO"))
        self.ReportsPurchaseOrderDetailsFilterByDateToComboBox.setDisplayFormat(
            _translate("MyMainWindow", "d-MMM-yy"))
        self.ReportsPurchaseOrderDetailsFilterByVendorCodeLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsPurchaseOrderStatusFilterTitleLabel.setText(
            _translate("MyMainWindow", "Purchase Order Status Report"))
        self.ReportsPurchaseOrderStatusFilterCategoryLabel.setText(_translate(
            "MyMainWindow", "Shows Purchase Orders from vendos different products."))
        self.ReportsPurchaseOrderStatusFilterByVendorLabel.setText(
            _translate("MyMainWindow", "VENDOR CODE"))
        self.ReportsPurchaseOrderStatusFilterByLabel.setText(
            _translate("MyMainWindow", "Filter By:"))
        self.ReportsPurchaseOrderStatusFilterGeneratePushButton.setText(
            _translate("MyMainWindow", "GENERATE REPORT"))
        self.ReportsPurchaseOrderStatusFilterByProductsLabel.setText(
            _translate("MyMainWindow", "PRODUCT CODE"))
        self.ReportNameLabel.setText(_translate("MyMainWindow", ""))
        self.BackToReportsMenuPushButton.setToolTip(
            _translate("MyMainWindow", "Back to Reports Menu"))
        self.ReportToExcelPushButton.setToolTip(
            _translate("MyMainWindow", "Save As Excel"))
        self.ReportToExcelPushButton.setText(
            _translate("MyMainWindow", "     XLS"))
        self.ReportToPDFPushButton.setToolTip(
            _translate("MyMainWindow", "Save As PDF"))
        self.ReportToPDFPushButton.setText(
            _translate("MyMainWindow", "     PDF"))
        self.VendorLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Vendors"))
        self.PurchaseLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Purchases"))
        self.InventoryLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Inventory"))
        self.SaleLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Sales"))
        self.CustomerLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Customers"))
        self.NotificationLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Notifications"))
        self.SettingLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Settings"))
        self.ReportsLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Reports"))
        self.DashboardLogoPushButton.setToolTip(
            _translate("MyMainWindow", "Go to Dashboard"))
        self.ValidateClosePushButtonLoginUI.setToolTip(
            _translate("MyMainWindow", "Close"))
        self.ValidateMinimizePushButtonLoginUI.setToolTip(
            _translate("MyMainWindow", "Large View"))
        self.AddVendorProductPushButton.setToolTip(
            _translate("MyMainWindow", "Add Vendor Product"))
        self.AddVendorProductToPurchasePushButton.setToolTip(
            _translate("MyMainWindow", "Add Vendor Product"))
        self.ValidateRegisterPushButtonLoginUI.setText(
            _translate("MyMainWindow", "REGISTER"))
        self.SignupPasswordLabelLoginUI.setText(
            _translate("MyMainWindow", "PASSWORD"))
        self.SignupEmailLabelLoginUI.setText(
            _translate("MyMainWindow", "EMAIL"))
        self.SignupUsernameLabelLoginUI.setText(
            _translate("MyMainWindow", "USERNAME"))
        self.SignupConfirmPasswordLabelLoginUI.setText(
            _translate("MyMainWindow", "PASSWORD"))
        self.LoginPasswordLabelLoginUI.setText(
            _translate("MyMainWindow", "PASSWORD"))
        self.LoginUsernameLabelLoginUI.setText(
            _translate("MyMainWindow", "USERNAME"))
        self.ValidateLoginPushButtonLoginUI.setText(
            _translate("MyMainWindow", "LOGIN"))
        self.LoginForgotPasswordPushButtonLoginUI.setText(
            _translate("MyMainWindow", "Forgot Password?"))
        self.LoginRemembermeCheckBoxLoginUI.setText(
            _translate("MyMainWindow", "Remember Me"))
        self.LoginPushButtonLoginUI.setText(
            _translate("MyMainWindow", "LOGIN"))
        self.RegisterPushButtonLoginUI.setText(
            _translate("MyMainWindow", "REGISTER"))
        self.HomeUserComboBox.setCurrentText(
            _translate("MyMainWindow", "DASHBOARD"))
        self.HomeUserComboBox.setItemText(
            0, _translate("MyMainWindow", "DASHBOARD"))
        self.HomeUserComboBox.setItemText(
            1, _translate("MyMainWindow", "LOGOUT"))
        self.HomeUserComboBox.setItemText(
            2, _translate("MyMainWindow", "LARGE VIEW"))
        self.HomeUserComboBox.setItemText(
            3, _translate("MyMainWindow", "HIDE"))
        self.HomeUserComboBox.setItemText(
            4, _translate("MyMainWindow", "CLOSE"))
        self.HomeUserComboBox.setItemText(
            5, _translate("MyMainWindow", "HELP"))
        self.HomeUserNameLabel.setText(
            _translate("MyMainWindow", "CurrentUser"))
        self.HomeHeaderTextLabel.setText(_translate("MyMainWindow", ": pos"))

        # Select items widget.
        self.SelectItemsFrame = QtWidgets.QFrame(self)
        self.SelectItemsFrame.setGeometry(QtCore.QRect(325, 160, 330, 300))
        self.SelectItemsFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SelectItemsFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SelectItemsFrame.setStyleSheet(
            "QFrame#SelectItemsFrame{background-color: rgb(255,255,255);border: none;}")
        self.SelectItemsFrame.lower()
        self.SelectItemsFrame.setObjectName("SelectItemsFrame")

        self.SelectItemsComboBox = QtWidgets.QComboBox(self.SelectItemsFrame)
        self.SelectItemsComboBox.setGeometry(QtCore.QRect(10, 10, 311, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.SelectItemsComboBox.setFont(font)
        self.SelectItemsComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SelectItemsComboBox.setInsertPolicy(QtWidgets.QComboBox.NoInsert)
        self.SelectItemsComboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.SelectItemsComboBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SelectItemsComboBox.setStyleSheet("QComboBox {font-size: 12pt;border: 1px solid rgb(135,206,250);background: white;padding: 1px 18px 1px 3px;min-width: 6em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.SelectItemsComboBox.setEditable(True)
        self.SelectItemsComboBox.installEventFilter(self)
        self.SelectItemsComboBox.setObjectName("SelectItemsComboBox")
        self.SelectItemsComboBox.currentTextChanged.connect(
            lambda i: self.ComboBoxEvents(i, "None"))

        self.SelectItemsTableWidget = QtWidgets.QTableWidget(
            self.SelectItemsFrame)
        self.SelectItemsTableWidget.setGeometry(QtCore.QRect(10, 50, 311, 171))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.SelectItemsTableWidget.sizePolicy().hasHeightForWidth())
        self.SelectItemsTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SelectItemsTableWidget.setFont(font)
        self.SelectItemsTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SelectItemsTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SelectItemsTableWidget.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.SelectItemsTableWidget.setStyleSheet(
            "QHeaderView::section {color: rgb(255,255,255);background-color: rgb(135,206,250);border: none; padding: 10px;}")
        self.SelectItemsTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.SelectItemsTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.SelectItemsTableWidget.setAlternatingRowColors(True)
        self.SelectItemsTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.SingleSelection)
        self.SelectItemsTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.SelectItemsTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SelectItemsTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.SelectItemsTableWidget.setShowGrid(False)
        self.SelectItemsTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.SelectItemsTableWidget.setWordWrap(False)
        self.SelectItemsTableWidget.setCornerButtonEnabled(False)
        self.SelectItemsTableWidget.setRowCount(0)
        self.SelectItemsTableWidget.setObjectName("SelectItemsTableWidget")
        self.SelectItemsTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setKerning(True)
        item.setFont(font)
        self.SelectItemsTableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.SelectItemsTableWidget.setItem(1, 0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(12)
        item.setFont(font)
        self.SelectItemsTableWidget.setItem(2, 0, item)
        self.SelectItemsTableWidget.horizontalHeader().setVisible(False)
        self.SelectItemsTableWidget.horizontalHeader().setDefaultSectionSize(420)
        self.SelectItemsTableWidget.horizontalHeader().setMinimumSectionSize(420)
        self.SelectItemsTableWidget.verticalHeader().setVisible(False)
        self.SelectItemsTableWidget.verticalHeader().setMinimumSectionSize(30)
        self.SelectItemsTableWidget.setSortingEnabled(True)
        item = self.SelectItemsTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "SEECT ITEM"))
        __sortingEnabled = self.SelectItemsTableWidget.isSortingEnabled()
        self.SelectItemsTableWidget.setSortingEnabled(False)
        self.SelectItemsTableWidget.setSortingEnabled(__sortingEnabled)

        self.SelectItemsMinusPushButton = QtWidgets.QPushButton(
            self.SelectItemsFrame)
        self.SelectItemsMinusPushButton.setGeometry(
            QtCore.QRect(10, 225, 20, 20))
        self.SelectItemsMinusPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SelectItemsMinusPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SelectItemsMinusPushButton.setToolTip("Remove")
        self.SelectItemsMinusPushButton.setObjectName(
            "SelectItemsMinusPushButton")
        self.SelectItemsMinusPushButton.clicked.connect(self.SettingsModule)

        self.SelectItemsSavePushButton = QtWidgets.QPushButton(
            self.SelectItemsFrame)
        self.SelectItemsSavePushButton.setGeometry(
            QtCore.QRect(10, 250, 150, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SelectItemsSavePushButton.setFont(font)
        self.SelectItemsSavePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SelectItemsSavePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SelectItemsSavePushButton.setObjectName(
            "SelectItemsSavePushButton")
        self.SelectItemsSavePushButton.clicked.connect(
            self.AddCustomSelectedItems)
        self.SelectItemsSavePushButton.setText(
            _translate("MyMainWindow", "SAVE CHANGES"))

        self.SelectItemsCancelPushButton = QtWidgets.QPushButton(
            self.SelectItemsFrame)
        self.SelectItemsCancelPushButton.setGeometry(
            QtCore.QRect(170, 250, 150, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SelectItemsCancelPushButton.setFont(font)
        self.SelectItemsCancelPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SelectItemsCancelPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SelectItemsCancelPushButton.setObjectName(
            "SelectItemsCancelPushButton")
        self.SelectItemsCancelPushButton.clicked.connect(
            self.AddCustomSelectedItems)
        self.SelectItemsCancelPushButton.setText(
            _translate("MyMainWindow", "CANCEL"))

        # Product widgets.
        self.ProductFrame = QtWidgets.QFrame(self)
        self.ProductFrame.setGeometry(QtCore.QRect(int(203.5), 45, 573, 520))
        self.ProductFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.ProductFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ProductFrame.setStyleSheet(
            "QFrame#ProductFrame{background-color: rgb(255,255,255);border: none;}")
        self.ProductFrame.lower()
        self.ProductFrame.setObjectName("ProductFrame")
        self.SearchProductFrame = QtWidgets.QFrame(self.ProductFrame)
        self.SearchProductFrame.setGeometry(QtCore.QRect(10, 10, 553, 35))
        self.SearchProductFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SearchProductFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SearchProductFrame.setStyleSheet(
            "QFrame#SearchProductFrame{background-color: rgb(255,255,255);border: 1px solid rgb(135,206,250);}")
        self.SearchProductFrame.setObjectName("SearchVendorFrame")
        self.SearchProductDialogBoxPushButton = QtWidgets.QPushButton(
            self.SearchProductFrame)
        self.SearchProductDialogBoxPushButton.setGeometry(
            QtCore.QRect(10, 5, 24, 24))
        self.SearchProductDialogBoxPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchProductDialogBoxPushButton.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.SearchProductDialogBoxPushButton.setText("")
        self.SearchProductDialogBoxPushButton.setToolTip("Search Product")
        self.SearchProductDialogBoxPushButton.setStyleSheet(
            "QPushButton#SearchProductDialogBoxPushButton{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe.png);}\n""QPushButton#SearchProductDialogBoxPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/LoupeImg/Res/loupe hover.png);}")
        self.SearchProductDialogBoxPushButton.setObjectName(
            "SearchProductDialogBoxPushButton")
        self.SearchProductDialogBoxPushButton.clicked.connect(
            self.SearchEvents)
        self.SearchProductLineEdit = QtWidgets.QLineEdit(
            self.SearchProductFrame)
        self.SearchProductLineEdit.setGeometry(QtCore.QRect(40, 2, 505, 31))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SearchProductLineEdit.setFont(font)
        self.SearchProductLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SearchProductLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SearchProductLineEdit.setFrame(False)
        self.SearchProductLineEdit.setStyleSheet(
            "QLineEdit#SearchProductLineEdit{color: rgb(0,0,0);}")
        self.SearchProductLineEdit.setObjectName("SearchProductLineEdit")
        self.SearchProductLineEdit.textChanged.connect(self.ClearSearch)
        self.ProductResultLabel = QtWidgets.QLabel(self.ProductFrame)
        self.ProductResultLabel.setGeometry(QtCore.QRect(10, 57, 350, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductResultLabel.setFont(font)
        self.ProductResultLabel.setText("No Result")
        self.ProductResultLabel.setStyleSheet(
            "QLabel#ProductResultLabel{color: rgb(135,206,250);background-color: rgb(255,255,255);qproperty-alignment: AlignLeft;}")
        self.ProductResultLabel.setObjectName("ProductResultLabel")
        self.ProductWidgetListTableWidget = QtWidgets.QTableWidget(
            self.ProductFrame)
        self.ProductWidgetListTableWidget.setGeometry(
            QtCore.QRect(10, 80, 553, 380))
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.ProductWidgetListTableWidget.sizePolicy().hasHeightForWidth())
        self.ProductWidgetListTableWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.ProductWidgetListTableWidget.setFont(font)
        self.ProductWidgetListTableWidget.viewport().setProperty(
            "cursor", QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.ProductWidgetListTableWidget.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductWidgetListTableWidget.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductWidgetListTableWidget.setStyleSheet(
            "QTableWidget#ProductWidgetListTableWidget{gridline-color: rgb(135,206,250);border: 0px solid rgb(135,206,250); background-color: rgb(255,255,255);alternate-background-color: rgb(255,255,255);selection-color: rgb(0,0,0);selection-background-color: rgb(135,206,250);color: rgb(0,0,0);alignment: center;}\n""QHeaderView::section {color: rgb(255,255,255);background-color: rgb(255,255,255);border: none; padding: 10px;}")
        self.ProductWidgetListTableWidget.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOn)
        self.ProductWidgetListTableWidget.setEditTriggers(
            QtWidgets.QAbstractItemView.NoEditTriggers)
        self.ProductWidgetListTableWidget.setAlternatingRowColors(False)
        self.ProductWidgetListTableWidget.setSelectionMode(
            QtWidgets.QAbstractItemView.NoSelection)
        self.ProductWidgetListTableWidget.setSelectionBehavior(
            QtWidgets.QAbstractItemView.SelectRows)
        self.ProductWidgetListTableWidget.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.ProductWidgetListTableWidget.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerItem)
        self.ProductWidgetListTableWidget.setShowGrid(True)
        self.ProductWidgetListTableWidget.setGridStyle(QtCore.Qt.SolidLine)
        self.ProductWidgetListTableWidget.setWordWrap(False)
        self.ProductWidgetListTableWidget.setCornerButtonEnabled(False)
        self.ProductWidgetListTableWidget.setRowCount(0)
        self.ProductWidgetListTableWidget.setObjectName(
            "ProductWidgetListTableWidget")
        self.ProductWidgetListTableWidget.setColumnCount(1)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        font.setKerning(True)
        item.setFont(font)
        self.ProductWidgetListTableWidget.setHorizontalHeaderItem(0, item)
        self.ProductWidgetListTableWidget.horizontalHeader().setVisible(False)
        self.ProductWidgetListTableWidget.horizontalHeader().setDefaultSectionSize(551)
        self.ProductWidgetListTableWidget.horizontalHeader().setMinimumSectionSize(551)
        self.ProductWidgetListTableWidget.verticalHeader().setVisible(False)
        self.ProductWidgetListTableWidget.verticalHeader().setDefaultSectionSize(190)
        self.ProductWidgetListTableWidget.verticalHeader().setMinimumSectionSize(190)
        self.ProductWidgetListTableWidget.setSortingEnabled(True)
        item = self.ProductWidgetListTableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MyMainWindow", "PRODUCT CODE"))
        __sortingEnabled = self.ProductWidgetListTableWidget.isSortingEnabled()
        self.ProductWidgetListTableWidget.setSortingEnabled(False)
        self.ProductWidgetListTableWidget.setSortingEnabled(__sortingEnabled)
        self.ProductDialogClosePushButton = QtWidgets.QPushButton(
            self.ProductFrame)
        self.ProductDialogClosePushButton.setGeometry(
            QtCore.QRect(10, 468, 553, 41))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductDialogClosePushButton.setFont(font)
        self.ProductDialogClosePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductDialogClosePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductDialogClosePushButton.setText("CLOSE")
        self.ProductDialogClosePushButton.setStyleSheet(
            "QPushButton#ProductDialogClosePushButton{color: rgb(255,255,255);background-color: rgb(52,152,219);border: none;}\n""QPushButton#ProductDialogClosePushButton:hover{color: rgb(255,255,255);background-color: rgb(142,68,173);border: none;}\n")
        self.ProductDialogClosePushButton.setObjectName(
            "ProductDialogClosePushButton")
        self.ProductDialogClosePushButton.clicked.connect(
            self.ShowProductWidgets)

        # Setup database.
        self.SetupDatabaseFrame = QtWidgets.QFrame(self.UserValidationFrame)
        self.SetupDatabaseFrame.setGeometry(QtCore.QRect(430, 100, 491, 421))
        self.SetupDatabaseFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.SetupDatabaseFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.SetupDatabaseFrame.setObjectName("SetupDatabaseFrame")
        self.SetupDatabaseFrame.hide()

        self.SetupDatabaseLabel = QtWidgets.QLabel(self.SetupDatabaseFrame)
        self.SetupDatabaseLabel.setGeometry(QtCore.QRect(50, 15, 421, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(11)
        font.setBold(False)
        font.setWeight(50)
        self.SetupDatabaseLabel.setFont(font)
        self.SetupDatabaseLabel.setText("SETUP DATABASE")
        self.SetupDatabaseLabel.setObjectName("SetupDatabaseLabel")

        self.SetupDatabaseHostFrame = QtWidgets.QFrame(self.SetupDatabaseFrame)
        self.SetupDatabaseHostFrame.setGeometry(QtCore.QRect(31, 60, 350, 50))
        self.SetupDatabaseHostFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.SetupDatabaseHostFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SetupDatabaseHostFrame.setObjectName("SetupDatabaseHostFrame")

        self.SetupDatabaseHostLabel = QtWidgets.QPushButton(
            self.SetupDatabaseHostFrame)
        self.SetupDatabaseHostLabel.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SetupDatabaseHostLabel.setFont(font)
        self.SetupDatabaseHostLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SetupDatabaseHostLabel.setText("HOST")
        self.SetupDatabaseHostLabel.setObjectName("SetupDatabaseHostLabel")
        self.SetupDatabaseHostLabel.setFocusPolicy(QtCore.Qt.NoFocus)

        self.SetupDatabaseHostLineEdit = QtWidgets.QLineEdit(
            self.SetupDatabaseHostFrame)
        self.SetupDatabaseHostLineEdit.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SetupDatabaseHostLineEdit.setFont(font)
        self.SetupDatabaseHostLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SetupDatabaseHostLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.SetupDatabaseHostLineEdit.setText("localhost")
        self.SetupDatabaseHostLineEdit.setObjectName(
            "SetupDatabaseHostLineEdit")

        self.SetupDatabaseHostIcon = QtWidgets.QLabel(self.SetupDatabaseFrame)
        self.SetupDatabaseHostIcon.setGeometry(QtCore.QRect(380, 61, 50, 48))
        self.SetupDatabaseHostIcon.setText("")
        self.SetupDatabaseHostIcon.setObjectName("SetupDatabaseHostIcon")

        self.SetupDatabaseNameFrame = QtWidgets.QFrame(self.SetupDatabaseFrame)
        self.SetupDatabaseNameFrame.setGeometry(QtCore.QRect(31, 130, 350, 50))
        self.SetupDatabaseNameFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.SetupDatabaseNameFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SetupDatabaseNameFrame.setObjectName("SetupDatabaseNameFrame")

        self.SetupDatabaseNameLabel = QtWidgets.QPushButton(
            self.SetupDatabaseNameFrame)
        self.SetupDatabaseNameLabel.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SetupDatabaseNameLabel.setFont(font)
        self.SetupDatabaseNameLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SetupDatabaseNameLabel.setText("DATABASE")
        self.SetupDatabaseNameLabel.setObjectName("SetupDatabaseNameLabel")
        self.SetupDatabaseNameLabel.setFocusPolicy(QtCore.Qt.NoFocus)

        self.SetupDatabaseNameLineEdit = QtWidgets.QLineEdit(
            self.SetupDatabaseNameFrame)
        self.SetupDatabaseNameLineEdit.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SetupDatabaseNameLineEdit.setFont(font)
        self.SetupDatabaseNameLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SetupDatabaseNameLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.SetupDatabaseNameLineEdit.setText("DanialSoftPOS")
        self.SetupDatabaseNameLineEdit.setReadOnly(True)
        self.SetupDatabaseNameLineEdit.setObjectName(
            "SetupDatabaseNameLineEdit")

        self.SetupDatabaseNameIcon = QtWidgets.QLabel(self.SetupDatabaseFrame)
        self.SetupDatabaseNameIcon.setGeometry(QtCore.QRect(380, 131, 50, 48))
        self.SetupDatabaseNameIcon.setText("")
        self.SetupDatabaseNameIcon.setObjectName("SetupDatabaseNameIcon")

        self.SetupDatabaseUserFrame = QtWidgets.QFrame(self.SetupDatabaseFrame)
        self.SetupDatabaseUserFrame.setGeometry(QtCore.QRect(31, 200, 350, 50))
        self.SetupDatabaseUserFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.SetupDatabaseUserFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SetupDatabaseUserFrame.setObjectName("SetupDatabaseUserFrame")

        self.SetupDatabaseUserLabel = QtWidgets.QPushButton(
            self.SetupDatabaseUserFrame)
        self.SetupDatabaseUserLabel.setGeometry(QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SetupDatabaseUserLabel.setFont(font)
        self.SetupDatabaseUserLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SetupDatabaseUserLabel.setText("USER")
        self.SetupDatabaseUserLabel.setObjectName("SetupDatabaseUserLabel")
        self.SetupDatabaseUserLabel.setFocusPolicy(QtCore.Qt.NoFocus)

        self.SetupDatabaseUserLineEdit = QtWidgets.QLineEdit(
            self.SetupDatabaseUserFrame)
        self.SetupDatabaseUserLineEdit.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SetupDatabaseUserLineEdit.setFont(font)
        self.SetupDatabaseUserLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SetupDatabaseUserLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.SetupDatabaseUserLineEdit.setText("postgres")
        self.SetupDatabaseUserLineEdit.setObjectName(
            "SetupDatabaseUserLineEdit")

        self.SetupDatabaseUserIcon = QtWidgets.QLabel(self.SetupDatabaseFrame)
        self.SetupDatabaseUserIcon.setGeometry(QtCore.QRect(380, 201, 50, 48))
        self.SetupDatabaseUserIcon.setText("")
        self.SetupDatabaseUserIcon.setObjectName("SetupDatabaseUserIcon")

        self.SetupDatabasePasswordFrame = QtWidgets.QFrame(
            self.SetupDatabaseFrame)
        self.SetupDatabasePasswordFrame.setGeometry(
            QtCore.QRect(31, 270, 350, 50))
        self.SetupDatabasePasswordFrame.setFrameShape(QtWidgets.QFrame.Box)
        self.SetupDatabasePasswordFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.SetupDatabasePasswordFrame.setObjectName("SetupDatabaseUserFrame")

        self.SetupDatabasePasswordLabel = QtWidgets.QPushButton(
            self.SetupDatabasePasswordFrame)
        self.SetupDatabasePasswordLabel.setGeometry(
            QtCore.QRect(10, 8, 80, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.SetupDatabasePasswordLabel.setFont(font)
        self.SetupDatabasePasswordLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SetupDatabasePasswordLabel.setText("PASSWORD")
        self.SetupDatabasePasswordLabel.setObjectName(
            "SetupDatabasePasswordLabel")
        self.SetupDatabasePasswordLabel.setFocusPolicy(QtCore.Qt.NoFocus)

        self.SetupDatabasePasswordLineEdit = QtWidgets.QLineEdit(
            self.SetupDatabasePasswordFrame)
        self.SetupDatabasePasswordLineEdit.setGeometry(
            QtCore.QRect(95, 7, 241, 35))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SetupDatabasePasswordLineEdit.setFont(font)
        self.SetupDatabasePasswordLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SetupDatabasePasswordLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.SetupDatabasePasswordLineEdit.setEchoMode(
            QtWidgets.QLineEdit.Password)
        self.SetupDatabasePasswordLineEdit.setObjectName(
            "SetupDatabasePasswordLineEdit")

        self.SetupDatabasePasswordIcon = QtWidgets.QLabel(
            self.SetupDatabaseFrame)
        self.SetupDatabasePasswordIcon.setGeometry(
            QtCore.QRect(380, 271, 50, 48))
        self.SetupDatabasePasswordIcon.setText("")
        self.SetupDatabasePasswordIcon.setObjectName(
            "SetupDatabasePasswordIcon")

        self.SetupDatabasePushButton = QtWidgets.QPushButton(
            self.SetupDatabaseFrame)
        self.SetupDatabasePushButton.setGeometry(
            QtCore.QRect(31, 340, 400, 50))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.SetupDatabasePushButton.setFont(font)
        self.SetupDatabasePushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SetupDatabasePushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.SetupDatabasePushButton.setObjectName("SetupDatabasePushButton")
        self.SetupDatabasePushButton.setText("CREATE")
        self.SetupDatabasePushButton.clicked.connect(self.SetupDatabase)

        self.InitializeDatabase()

        # Dashboard widgets
        self.PurchaseOrderDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderDashboardLabel.setGeometry(
            QtCore.QRect(28, 30, 150, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.PurchaseOrderDashboardLabel.setFont(font)
        self.PurchaseOrderDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseOrderDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.PurchaseOrderDashboardLabel.setObjectName(
            "PurchaseOrderDashboardLabel")
        self.PurchaseOrderDashboardLabel.setText(
            _translate("MyMainWindow", "PURCHASE ORDER"))

        self.PurchaseOrderDateDashboardComboBox = QtWidgets.QComboBox(
            self.DashboardFrame)
        self.PurchaseOrderDateDashboardComboBox.setGeometry(
            QtCore.QRect(190, 26, 160, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.PurchaseOrderDateDashboardComboBox.setFont(font)
        self.PurchaseOrderDateDashboardComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.PurchaseOrderDateDashboardComboBox.setFocusPolicy(
            QtCore.Qt.NoFocus)
        self.PurchaseOrderDateDashboardComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.PurchaseOrderDateDashboardComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.PurchaseOrderDateDashboardComboBox.setStyleSheet(
            "QComboBox {max-width: 115px;font-size: 12pt;border: 0px solid rgb(135,206,250);background: white;padding: 1px 1px 1px 3px;min-width: 3em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.PurchaseOrderDateDashboardComboBox.setEditable(False)
        self.PurchaseOrderDateDashboardComboBox.clear()
        self.PurchaseOrderDateDashboardComboBox.addItem("This Month")
        self.PurchaseOrderDateDashboardComboBox.addItem("Last Month")
        self.PurchaseOrderDateDashboardComboBox.addItem("This Year")
        self.PurchaseOrderDateDashboardComboBox.addItem("Last Year")
        self.PurchaseOrderDateDashboardComboBox.setObjectName(
            "PurchaseOrderDateDashboardComboBox")
        self.PurchaseOrderDateDashboardComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.PurchaseOrderDateDashboardComboBox.currentText()))

        self.PurchaseOrderQtyOrderedDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderQtyOrderedDashboardLabel.setGeometry(
            QtCore.QRect(16, 89, 303, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.PurchaseOrderQtyOrderedDashboardLabel.setFont(font)
        self.PurchaseOrderQtyOrderedDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseOrderQtyOrderedDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderQtyOrderedDashboardLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.PurchaseOrderQtyOrderedDashboardLabel.setObjectName(
            "PurchaseOrderQtyOrderedDashboardLabel")
        self.PurchaseOrderQtyOrderedDashboardLabel.setText(
            _translate("MyMainWindow", "Quantity Ordered"))

        self.PurchaseOrderNumberQtyOrderedDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setGeometry(
            QtCore.QRect(16, 107, 303, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(20)
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setFont(font)
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderNumberQtyOrderedDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setObjectName(
            "PurchaseOrderNumberQtyOrderedDashboardLabel")
        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.PurchaseOrderTotalCostDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderTotalCostDashboardLabel.setGeometry(
            QtCore.QRect(16, 170, 303, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.PurchaseOrderTotalCostDashboardLabel.setFont(font)
        self.PurchaseOrderTotalCostDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseOrderTotalCostDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderTotalCostDashboardLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.PurchaseOrderTotalCostDashboardLabel.setObjectName(
            "PurchaseOrderTotalCostDashboardLabel")
        self.PurchaseOrderTotalCostDashboardLabel.setText(
            _translate("MyMainWindow", "Total Cost"))

        self.PurchaseOrderNumberTotalCostDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderNumberTotalCostDashboardLabel.setGeometry(
            QtCore.QRect(16, 188, 303, 40))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(20)
        self.PurchaseOrderNumberTotalCostDashboardLabel.setFont(font)
        self.PurchaseOrderNumberTotalCostDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.PurchaseOrderNumberTotalCostDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderNumberTotalCostDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.PurchaseOrderNumberTotalCostDashboardLabel.setObjectName(
            "PurchaseOrderNumberTotalCostDashboardLabel")
        self.PurchaseOrderNumberTotalCostDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.PurchaseOrderMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderMarginDashboardLabel.setGeometry(
            QtCore.QRect(15, 15, 305, 50))
        self.PurchaseOrderMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.PurchaseOrderMarginDashboardLabel.setToolTip("")
        self.PurchaseOrderMarginDashboardLabel.setText("")
        self.PurchaseOrderMarginDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.PurchaseOrderMarginDashboardLabel.setObjectName(
            "PurchaseOrderMarginDashboardLabel")
        self.PurchaseOrderMarginDashboardLabel.lower()

        self.PurchaseOrderMarginDownDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.PurchaseOrderMarginDownDashboardLabel.setGeometry(
            QtCore.QRect(15, 58, 305, 200))
        self.PurchaseOrderMarginDownDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.PurchaseOrderMarginDownDashboardLabel.setToolTip("")
        self.PurchaseOrderMarginDownDashboardLabel.setText("")
        self.PurchaseOrderMarginDownDashboardLabel.setStyleSheet(
            "QLabel#PurchaseOrderMarginDownDashboardLabel{border: 1px solid rgba(135,206,250,0.3);}")
        self.PurchaseOrderMarginDownDashboardLabel.setObjectName(
            "PurchaseOrderMarginDownDashboardLabel")
        self.PurchaseOrderMarginDownDashboardLabel.lower()

        self.SalesOrderDashboardLabel = QtWidgets.QLabel(self.DashboardFrame)
        self.SalesOrderDashboardLabel.setGeometry(
            QtCore.QRect(28, 288, 120, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.SalesOrderDashboardLabel.setFont(font)
        self.SalesOrderDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.SalesOrderDashboardLabel.setStyleSheet(
            "QLabel#SalesOrderDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.SalesOrderDashboardLabel.setObjectName("SalesOrderDashboardLabel")
        self.SalesOrderDashboardLabel.setText(
            _translate("MyMainWindow", "SALES PROFIT"))

        self.SalesOrderDateDashboardComboBox = QtWidgets.QComboBox(
            self.DashboardFrame)
        self.SalesOrderDateDashboardComboBox.setGeometry(
            QtCore.QRect(748, 284, 160, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.SalesOrderDateDashboardComboBox.setFont(font)
        self.SalesOrderDateDashboardComboBox.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.SalesOrderDateDashboardComboBox.setFocusPolicy(QtCore.Qt.NoFocus)
        self.SalesOrderDateDashboardComboBox.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.SalesOrderDateDashboardComboBox.setInsertPolicy(
            QtWidgets.QComboBox.NoInsert)
        self.SalesOrderDateDashboardComboBox.setStyleSheet(
            "QComboBox {max-width: 115px;font-size: 12pt;border: 0px solid rgb(135,206,250);background: white;padding: 1px 1px 1px 3px;min-width: 3em;color: black;}\n""QComboBox:on {padding-top: 3px;padding-left: 4px;}\n""QComboBox::drop-down {subcontrol-origin: padding;subcontrol-position: top right;width: 25px;border-left-width: 1px;border-left-color: white;border-bottom-right-radius: 3px;}\n""QComboBox::down-arrow {image: url(:/ArrowDownImg/Res/arrowdown.png);}\n""QComboBox::down-arrow:on {top: 1px;left: 1px;}")
        self.SalesOrderDateDashboardComboBox.setEditable(False)
        self.SalesOrderDateDashboardComboBox.clear()
        self.SalesOrderDateDashboardComboBox.addItem("This Month")
        self.SalesOrderDateDashboardComboBox.addItem("Last Month")
        self.SalesOrderDateDashboardComboBox.addItem("This Year")
        self.SalesOrderDateDashboardComboBox.addItem("Last Year")
        self.SalesOrderDateDashboardComboBox.setObjectName(
            "SalesOrderDateDashboardComboBox")
        self.SalesOrderDateDashboardComboBox.currentIndexChanged.connect(
            lambda i: self.ComboBoxEvents(i, self.SalesOrderDateDashboardComboBox.currentText()))

        self.SalesOrderMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.SalesOrderMarginDashboardLabel.setGeometry(
            QtCore.QRect(15, 275, 867, 50))
        self.SalesOrderMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SalesOrderMarginDashboardLabel.setToolTip("")
        self.SalesOrderMarginDashboardLabel.setText("")
        self.SalesOrderMarginDashboardLabel.setStyleSheet(
            "QLabel#SalesOrderMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.SalesOrderMarginDashboardLabel.setObjectName(
            "SalesOrderMarginDashboardLabel")
        self.SalesOrderMarginDashboardLabel.lower()

        self.SalesOrderMarginDownDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.SalesOrderMarginDownDashboardLabel.setGeometry(
            QtCore.QRect(15, 320, 867, 168))
        self.SalesOrderMarginDownDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.SalesOrderMarginDownDashboardLabel.setToolTip("")
        self.SalesOrderMarginDownDashboardLabel.setText("")
        self.SalesOrderMarginDownDashboardLabel.setStyleSheet(
            "QLabel#SalesOrderMarginDownDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.SalesOrderMarginDownDashboardLabel.setObjectName(
            "SalesOrderMarginDownDashboardLabel")
        self.SalesOrderMarginDownDashboardLabel.lower()

        self.ProductDetailsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ProductDetailsDashboardLabel.setGeometry(
            QtCore.QRect(358, 30, 148, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductDetailsDashboardLabel.setFont(font)
        self.ProductDetailsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.ProductDetailsDashboardLabel.setStyleSheet(
            "QLabel#ProductDetailsDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.ProductDetailsDashboardLabel.setObjectName(
            "ProductDetailsDashboardLabel")
        self.ProductDetailsDashboardLabel.setText(
            _translate("MyMainWindow", "PRODUCT DETAILS"))

        self.LowStockItemsProductDetailsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.LowStockItemsProductDetailsDashboardLabel.setGeometry(
            QtCore.QRect(362, 78, 112, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.LowStockItemsProductDetailsDashboardLabel.setFont(font)
        self.LowStockItemsProductDetailsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.LowStockItemsProductDetailsDashboardLabel.setStyleSheet(
            "QLabel#LowStockItemsProductDetailsDashboardLabel{color: rgb(255,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.LowStockItemsProductDetailsDashboardLabel.setObjectName(
            "LowStockItemsProductDetailsDashboardLabel")
        self.LowStockItemsProductDetailsDashboardLabel.setText(
            _translate("MyMainWindow", "Low Stocks Items"))

        self.NumberLowStockItemsProductDetailsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.NumberLowStockItemsProductDetailsDashboardLabel.setGeometry(
            QtCore.QRect(530, 78, 74, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.NumberLowStockItemsProductDetailsDashboardLabel.setFont(font)
        self.NumberLowStockItemsProductDetailsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.NumberLowStockItemsProductDetailsDashboardLabel.setStyleSheet(
            "QLabel#NumberLowStockItemsProductDetailsDashboardLabel{color: rgb(255,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.NumberLowStockItemsProductDetailsDashboardLabel.setObjectName(
            "NumberLowStockItemsProductDetailsDashboardLabel")
        self.NumberLowStockItemsProductDetailsDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.AllItemsProductDetailsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.AllItemsProductDetailsDashboardLabel.setGeometry(
            QtCore.QRect(362, 107, 65, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(10)
        self.AllItemsProductDetailsDashboardLabel.setFont(font)
        self.AllItemsProductDetailsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.AllItemsProductDetailsDashboardLabel.setStyleSheet(
            "QLabel#AllItemsProductDetailsDashboardLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.AllItemsProductDetailsDashboardLabel.setObjectName(
            "AllItemsProductDetailsDashboardLabel")
        self.AllItemsProductDetailsDashboardLabel.setText(
            _translate("MyMainWindow", "All Items"))

        self.NumberAllItemsProductDetailsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.NumberAllItemsProductDetailsDashboardLabel.setGeometry(
            QtCore.QRect(530, 107, 74, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.NumberAllItemsProductDetailsDashboardLabel.setFont(font)
        self.NumberAllItemsProductDetailsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.NumberAllItemsProductDetailsDashboardLabel.setStyleSheet(
            "QLabel#NumberAllItemsProductDetailsDashboardLabel{color: rgb(0,0,0);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.NumberAllItemsProductDetailsDashboardLabel.setObjectName(
            "NumberAllItemsProductDetailsDashboardLabel")
        self.NumberAllItemsProductDetailsDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.ProductDetailsMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ProductDetailsMarginDashboardLabel.setGeometry(
            QtCore.QRect(340, 15, 285, 50))
        self.ProductDetailsMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.ProductDetailsMarginDashboardLabel.setToolTip("")
        self.ProductDetailsMarginDashboardLabel.setText("")
        self.ProductDetailsMarginDashboardLabel.setStyleSheet(
            "QLabel#ProductDetailsMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.ProductDetailsMarginDashboardLabel.setObjectName(
            "ProductDetailsMarginDashboardLabel")
        self.ProductDetailsMarginDashboardLabel.lower()

        self.ProductDetailsMarginDownDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ProductDetailsMarginDownDashboardLabel.setGeometry(
            QtCore.QRect(340, 58, 285, 80))
        self.ProductDetailsMarginDownDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.ProductDetailsMarginDownDashboardLabel.setToolTip("")
        self.ProductDetailsMarginDownDashboardLabel.setText("")
        self.ProductDetailsMarginDownDashboardLabel.setStyleSheet(
            "QLabel#ProductDetailsMarginDownDashboardLabel{border: 1px solid rgba(135,206,250,0.3);}")
        self.ProductDetailsMarginDownDashboardLabel.setObjectName(
            "ProductDetailsMarginDownDashboardLabel")
        self.ProductDetailsMarginDownDashboardLabel.lower()

        self.QuantityInHandDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.QuantityInHandDashboardLabel.setGeometry(
            QtCore.QRect(345, 221, 148, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.QuantityInHandDashboardLabel.setFont(font)
        self.QuantityInHandDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.QuantityInHandDashboardLabel.setStyleSheet(
            "QLabel#QuantityInHandDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.QuantityInHandDashboardLabel.setObjectName(
            "QuantityInHandDashboardLabel")
        self.QuantityInHandDashboardLabel.setText(
            _translate("MyMainWindow", "QNTY. IN HAND"))

        self.NumberQuantityInHandDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.NumberQuantityInHandDashboardLabel.setGeometry(
            QtCore.QRect(530, 219, 75, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.NumberQuantityInHandDashboardLabel.setFont(font)
        self.NumberQuantityInHandDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.NumberQuantityInHandDashboardLabel.setStyleSheet(
            "QLabel#NumberQuantityInHandDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.NumberQuantityInHandDashboardLabel.setObjectName(
            "NumberQuantityInHandDashboardLabel")
        self.NumberQuantityInHandDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.QuantityInHandMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.QuantityInHandMarginDashboardLabel.setGeometry(
            QtCore.QRect(340, 207, 285, 50))
        self.QuantityInHandMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.QuantityInHandMarginDashboardLabel.setToolTip("")
        self.QuantityInHandMarginDashboardLabel.setText("")
        self.QuantityInHandMarginDashboardLabel.setStyleSheet(
            "QLabel#QuantityInHandMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.QuantityInHandMarginDashboardLabel.setObjectName(
            "QuantityInHandMarginDashboardLabel")
        self.QuantityInHandMarginDashboardLabel.lower()

        self.QuantityToBeReceivedDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.QuantityToBeReceivedDashboardLabel.setGeometry(
            QtCore.QRect(345, 175, 180, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.QuantityToBeReceivedDashboardLabel.setFont(font)
        self.QuantityToBeReceivedDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.QuantityToBeReceivedDashboardLabel.setStyleSheet(
            "QLabel#QuantityToBeReceivedDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.QuantityToBeReceivedDashboardLabel.setObjectName(
            "QuantityToBeReceivedDashboardLabel")
        self.QuantityToBeReceivedDashboardLabel.setText(
            _translate("MyMainWindow", "QNTY. TO RECEIVED"))

        self.NumberQuantityToBeReceivedMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setGeometry(
            QtCore.QRect(530, 174, 75, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(14)
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setFont(font)
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setStyleSheet(
            "QLabel#NumberQuantityToBeReceivedMarginDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setObjectName(
            "NumberQuantityToBeReceivedMarginDashboardLabel")
        self.NumberQuantityToBeReceivedMarginDashboardLabel.setText(
            _translate("MyMainWindow", "0"))

        self.QuantityToBeReceivedMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.QuantityToBeReceivedMarginDashboardLabel.setGeometry(
            QtCore.QRect(340, 158, 285, 50))
        self.QuantityToBeReceivedMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.QuantityToBeReceivedMarginDashboardLabel.setToolTip("")
        self.QuantityToBeReceivedMarginDashboardLabel.setText("")
        self.QuantityToBeReceivedMarginDashboardLabel.setStyleSheet(
            "QLabel#QuantityToBeReceivedMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.QuantityToBeReceivedMarginDashboardLabel.setObjectName(
            "QuantityToBeReceivedMarginDashboardLabel")
        self.QuantityToBeReceivedMarginDashboardLabel.lower()

        self.ActiveProductsDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ActiveProductsDashboardLabel.setGeometry(
            QtCore.QRect(646, 30, 235, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ActiveProductsDashboardLabel.setFont(font)
        self.ActiveProductsDashboardLabel.setAlignment(
            QtCore.Qt.AlignLeading | QtCore.Qt.AlignLeft | QtCore.Qt.AlignVCenter)
        self.ActiveProductsDashboardLabel.setStyleSheet(
            "QLabel#ActiveProductsDashboardLabel{color: rgb(52,152,219);background-color: rgb(255,255,255);qproperty-alignment: AlignCenter;}")
        self.ActiveProductsDashboardLabel.setObjectName(
            "ActiveProductsDashboardLabel")
        self.ActiveProductsDashboardLabel.setText(
            _translate("MyMainWindow", "PRODUCT CATEGORIES"))

        self.ActiveProductsGraphwidget = QChartView(self.DashboardFrame)
        self.ActiveProductsGraphwidget.setGeometry(
            QtCore.QRect(648, 69, 231, 184))
        self.ActiveProductsGraphwidget.setObjectName(
            "ActiveProductsGraphwidget")

        self.ActiveProductsMarginDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ActiveProductsMarginDashboardLabel.setGeometry(
            QtCore.QRect(645, 15, 237, 50))
        self.ActiveProductsMarginDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.ActiveProductsMarginDashboardLabel.setToolTip("")
        self.ActiveProductsMarginDashboardLabel.setText("")
        self.ActiveProductsMarginDashboardLabel.setStyleSheet(
            "QLabel#ActiveProductsMarginDashboardLabel{border: 1px solid rgba(135,206,250,0.3);background-color: rgb(255,255,255);}")
        self.ActiveProductsMarginDashboardLabel.setObjectName(
            "ActiveProductsMarginDashboardLabel")
        self.ActiveProductsMarginDashboardLabel.lower()

        self.ActiveProductsMarginDownDashboardLabel = QtWidgets.QLabel(
            self.DashboardFrame)
        self.ActiveProductsMarginDownDashboardLabel.setGeometry(
            QtCore.QRect(645, 58, 237, 198))
        self.ActiveProductsMarginDownDashboardLabel.setCursor(
            QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.ActiveProductsMarginDownDashboardLabel.setToolTip("")
        self.ActiveProductsMarginDownDashboardLabel.setText("")
        self.ActiveProductsMarginDownDashboardLabel.setStyleSheet(
            "QLabel#ActiveProductsMarginDownDashboardLabel{border: 1px solid rgba(135,206,250,0.3);}")
        self.ActiveProductsMarginDownDashboardLabel.setObjectName(
            "ActiveProductsMarginDownDashboardLabel")
        self.ActiveProductsMarginDownDashboardLabel.lower()

        self.SalesOrderGraphwidget = PlotWidget(self.DashboardFrame)
        self.SalesOrderGraphwidget.setGeometry(QtCore.QRect(20, 328, 855, 155))
        self.SalesOrderGraphwidget.setObjectName("SalesOrderGraphwidget")

    # Sales order chart data.
    def ShowSalesOrderChartData(self):

        today = date.today()

        FromThisMonth = datetime.now().replace(day=1).strftime("%d-%b-%y")
        ToThisMonth = datetime.now().strftime("%d-%b-%y")

        FromThisYear = datetime.now().replace(day=1, month=1).strftime("%d-%b-%y")
        ToThisYear = datetime.now().strftime("%d-%b-%y")

        FromLastMonth = today.replace(day=1) - timedelta(days=1)
        FromLastMonth = FromLastMonth.replace(day=1).strftime("%d-%b-%y")
        ToLastMonth = today.replace(day=1) - timedelta(days=1)
        ToLastMonth = ToLastMonth.strftime("%d-%b-%y")

        FromLastYear = today.replace(day=1, month=1) - timedelta(days=365)
        FromLastYear = FromLastYear.replace(day=1).strftime("%d-%b-%y")
        ToLastYear = today.replace(day=1, month=1) - timedelta(days=1)
        ToLastYear = ToLastYear.strftime("%d-%b-%y")

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if self.SalesOrderDateDashboardComboBox.currentText() == "This Month":

            query = "SELECT SaleDate, SaleProfit FROM Sales WHERE SaleDate >= " + "\'" + \
                str(FromThisMonth) + "\'" + " AND SaleDate <= " + \
                "\'" + str(ToThisMonth) + "\'"

        elif self.SalesOrderDateDashboardComboBox.currentText() == "Last Month":

            query = "SELECT SaleDate, SaleProfit FROM Sales WHERE SaleDate >= " + "\'" + \
                str(FromLastMonth) + "\'" + " AND SaleDate <= " + \
                "\'" + str(ToLastMonth) + "\'"

        elif self.SalesOrderDateDashboardComboBox.currentText() == "This Year":

            query = "SELECT SaleDate, SaleProfit FROM Sales WHERE SaleDate >= " + "\'" + \
                str(FromThisYear) + "\'" + " AND SaleDate <= " + \
                "\'" + str(ToThisYear) + "\'"

        elif self.SalesOrderDateDashboardComboBox.currentText() == "Last Year":

            query = "SELECT SaleDate, SaleProfit FROM Sales WHERE SaleDate >= " + "\'" + \
                str(FromLastYear) + "\'" + " AND SaleDate <= " + \
                "\'" + str(ToLastYear) + "\'"

        cursor.execute(query)

        results = cursor.fetchall()

        l = []
        m = []
        n = []
        x = []
        y = []
        maxl = []
        ksum = 0

        if results:

            styles = {'color': 'r', 'font-size': '12px'}

            for r in results:

                if self.SalesOrderDateDashboardComboBox.currentText() == "This Month" or self.SalesOrderDateDashboardComboBox.currentText() == "Last Month":

                    s = str(r[0]).split("-")[2]
                    self.SalesOrderGraphwidget.setLabel(
                        'bottom', 'Day (D)', **styles)

                elif self.SalesOrderDateDashboardComboBox.currentText() == "This Year" or self.SalesOrderDateDashboardComboBox.currentText() == "Last Year":

                    s = str(r[0]).split("-")[1]
                    self.SalesOrderGraphwidget.setLabel(
                        'bottom', 'Month (M)', **styles)

                l.append(s[0].strip('0') + s[1:])
                maxl.append(int(s[0].strip('0') + s[1:]))
                m.append(s[0].strip('0') + s[1:] + "@@@" + str(r[1]))

            maxi = max(maxl) + 1

            for i in range(1, maxi):

                if i not in n:

                    n.append(str(i))

            for j in n:

                for k in m:

                    if k.split("@@@")[0] == j:

                        ksum += float(k.split("@@@")[1])

                x.append(int(j))
                y.append(int(ksum))

                ksum = 0

        else:

            x = [0, 1]
            y = [0, 0]

        self.SalesOrderGraphwidget.clear()
        self.SalesOrderGraphwidget.setBackground('w')

        pen = pg.mkPen(color=(52, 152, 219), width=2)

        self.SalesOrderGraphwidget.plot(x, y, pen=pen)

        conn.close()

    # Active products chart legend.
    def ShowActiveProductsChartLegends(self, viewmode):

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        query = "SELECT ProCategory, CAST(SUM(CAST(ProQuantity AS DECIMAL)) AS DECIMAL) AS ProQuantityTotal FROM Products GROUP BY ProCategory"

        cursor.execute(query)

        results = cursor.fetchall()

        total = 0
        catlist = []

        if results:

            for r in results:

                catlist.append(str(r[0]) + "@@@" + str(r[1]))
                total += r[1]

        series = QPieSeries()
        series.setHoleSize(0.35)

        if total != 0:

            for i in catlist:

                series.append(
                    i.split("@@@")[0], float(i.split("@@@")[1])/float(total))

        chart = QChart()

        if viewmode == "hide":

            chart.legend().hide()

        elif viewmode == "show":

            chart.legend().show()

        chart.addSeries(series)
        chart.legend().setAlignment(Qt.AlignLeft)
        chart.setAnimationOptions(QChart.SeriesAnimations)

        self.ActiveProductsGraphwidget.setChart(chart)
        self.ActiveProductsGraphwidget.setRenderHint(QPainter.Antialiasing)

        conn.close()

    # Load dashboard data.
    def LoadDashboardData(self, whatdata):

        today = date.today()

        FromThisMonth = datetime.now().replace(day=1).strftime("%d-%b-%y")
        ToThisMonth = datetime.now().strftime("%d-%b-%y")

        FromThisYear = datetime.now().replace(day=1, month=1).strftime("%d-%b-%y")
        ToThisYear = datetime.now().strftime("%d-%b-%y")

        FromLastMonth = today.replace(day=1) - timedelta(days=1)
        FromLastMonth = FromLastMonth.replace(day=1).strftime("%d-%b-%y")
        ToLastMonth = today.replace(day=1) - timedelta(days=1)
        ToLastMonth = ToLastMonth.strftime("%d-%b-%y")

        FromLastYear = today.replace(day=1, month=1) - timedelta(days=365)
        FromLastYear = FromLastYear.replace(day=1).strftime("%d-%b-%y")
        ToLastYear = today.replace(day=1, month=1) - timedelta(days=1)
        ToLastYear = ToLastYear.strftime("%d-%b-%y")

        conn = Database.ConnectDatabase()

        cursor = conn.cursor()

        if whatdata == "PurchaseOrderData":

            if self.PurchaseOrderDateDashboardComboBox.currentText() == "This Month":

                query = "SELECT CAST(SUM(CAST(PurOrderQuantity AS DECIMAL)) AS DECIMAL) AS PurOrderQuantityTotal, CAST(SUM(CAST(PurTotal AS DECIMAL)) AS DECIMAL) AS PurTotalTotal FROM Purchases WHERE PurDate >= " + \
                    "\'" + str(FromThisMonth) + "\'" + \
                    " AND PurDate <= " + "\'" + str(ToThisMonth) + "\'"

            elif self.PurchaseOrderDateDashboardComboBox.currentText() == "This Year":

                query = "SELECT CAST(SUM(CAST(PurOrderQuantity AS DECIMAL)) AS DECIMAL) AS PurOrderQuantityTotal, CAST(SUM(CAST(PurTotal AS DECIMAL)) AS DECIMAL) AS PurTotalTotal FROM Purchases WHERE PurDate >= " + \
                    "\'" + str(FromThisYear) + "\'" + \
                    " AND PurDate <= " + "\'" + str(ToThisYear) + "\'"

            elif self.PurchaseOrderDateDashboardComboBox.currentText() == "Last Month":

                query = "SELECT CAST(SUM(CAST(PurOrderQuantity AS DECIMAL)) AS DECIMAL) AS PurOrderQuantityTotal, CAST(SUM(CAST(PurTotal AS DECIMAL)) AS DECIMAL) AS PurTotalTotal FROM Purchases WHERE PurDate >= " + \
                    "\'" + str(FromLastMonth) + "\'" + \
                    " AND PurDate <= " + "\'" + str(ToLastMonth) + "\'"

            elif self.PurchaseOrderDateDashboardComboBox.currentText() == "Last Year":

                query = "SELECT CAST(SUM(CAST(PurOrderQuantity AS DECIMAL)) AS DECIMAL) AS PurOrderQuantityTotal, CAST(SUM(CAST(PurTotal AS DECIMAL)) AS DECIMAL) AS PurTotalTotal FROM Purchases WHERE PurDate >= " + \
                    "\'" + str(FromLastYear) + "\'" + \
                    " AND PurDate <= " + "\'" + str(ToLastYear) + "\'"

            self.PurchaseOrderNumberQtyOrderedDashboardLabel.setText("0")
            self.PurchaseOrderNumberTotalCostDashboardLabel.setText("0")

            cursor.execute(query)

            results = cursor.fetchall()

            if results:

                for r in results:

                    if r[0] is not None:
                        self.PurchaseOrderNumberQtyOrderedDashboardLabel.setText(
                            str(round(r[0], 2)))
                    if r[1] is not None:
                        self.PurchaseOrderNumberTotalCostDashboardLabel.setText(
                            str(round(r[1], 2)))

        elif whatdata == "ProductDetailsData":

            query = "SELECT ProCode FROM Products WHERE ProQuantity < ProReorder"

            self.NumberLowStockItemsProductDetailsDashboardLabel.setText("0")

            cursor.execute(query)

            xresults = cursor.fetchall()

            x = 0

            if xresults:

                for xr in xresults:

                    x += 1

                self.NumberLowStockItemsProductDetailsDashboardLabel.setText(
                    str(x))

            query = "SELECT ProCode FROM Products"

            self.NumberAllItemsProductDetailsDashboardLabel.setText("0")

            cursor.execute(query)

            yresults = cursor.fetchall()

            y = 0

            if yresults:

                for yr in yresults:

                    y += 1

                self.NumberAllItemsProductDetailsDashboardLabel.setText(str(y))

        elif whatdata == "QntyToReceived":

            query = "SELECT CAST(SUM(CAST(PurNotReceived AS DECIMAL)) AS DECIMAL) AS PurNotReceivedTotal FROM Purchases"

            self.NumberQuantityToBeReceivedMarginDashboardLabel.setText("0")

            cursor.execute(query)

            results = cursor.fetchall()

            if results:

                for r in results:

                    self.NumberQuantityToBeReceivedMarginDashboardLabel.setText(
                        str(r[0]))

        elif whatdata == "QntyInHand":

            query = "SELECT CAST(SUM(CAST(ProQuantity AS DECIMAL)) AS DECIMAL) AS ProQuantityTotal FROM Products"

            self.NumberQuantityInHandDashboardLabel.setText("0")

            cursor.execute(query)

            results = cursor.fetchall()

            if results:

                for r in results:

                    self.NumberQuantityInHandDashboardLabel.setText(str(r[0]))

        conn.close()

    # Show product dialog box.
    def ProductDialogBox(self, index, productcode, productname, productCategory, productmeasurement, productprice, productquantity, requester):

        self.ProductInfoFrame = QtWidgets.QFrame(self)
        self.ProductInfoFrame.setGeometry(QtCore.QRect(0, 0, 552, 190))
        self.ProductInfoFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.ProductInfoFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.ProductInfoFrame.setStyleSheet(
            "QFrame#ProductFrame{background-color: rgb(255,255,255);border: 0px solid rgb(255,255,255);}")
        self.ProductInfoFrame.lower()
        self.ProductInfoFrame.setObjectName("ProductInfoFrame")

        self.ProductInfoImage = QtWidgets.QLabel(self.ProductInfoFrame)
        self.ProductInfoImage.setGeometry(QtCore.QRect(20, 40, 150, 150))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductInfoImage.setFont(font)
        self.ProductInfoImage.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductInfoImage.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductInfoImage.setText("")
        self.ProductInfoImage.setToolTip("Product " + productcode + " Image")
        self.ProductInfoImage.setAlignment(QtCore.Qt.AlignCenter)
        self.ProductInfoImage.setStyleSheet(
            "QLabel#ProductInfoImage{border: none;image: url(:/ShoppingBagImg/Res/shoppingbag.png);}\n")
        self.ProductInfoImage.setObjectName("ProductInfoImage")

        self.ProductCodeWidgetLineEdit = QtWidgets.QLineEdit(
            self.ProductInfoFrame)
        self.ProductCodeWidgetLineEdit.setGeometry(
            QtCore.QRect(230, 8, 210, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductCodeWidgetLineEdit.setFont(font)
        self.ProductCodeWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductCodeWidgetLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductCodeWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductCodeWidgetLineEdit.setText(productcode)
        self.ProductCodeWidgetLineEdit.setToolTip("Product " + productcode)
        self.ProductCodeWidgetLineEdit.setFrame(True)
        self.ProductCodeWidgetLineEdit.setReadOnly(True)
        self.ProductCodeWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductCodeWidgetLineEdit{color: rgb(0,0,0);border: 0px solid rgb(135,206,250);}")
        self.ProductCodeWidgetLineEdit.setObjectName(
            "ProductCodeWidgetLineEdit")

        self.ProductNameWidgetLineEdit = QtWidgets.QLabel(
            self.ProductInfoFrame)
        self.ProductNameWidgetLineEdit.setGeometry(
            QtCore.QRect(230, 40, 260, 20))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductNameWidgetLineEdit.setFont(font)
        self.ProductNameWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductNameWidgetLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductNameWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductNameWidgetLineEdit.setText(productname)
        self.ProductNameWidgetLineEdit.setToolTip(
            "Product " + productcode + " " + productname)
        self.ProductNameWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductNameWidgetLineEdit{color: rgb(0,0,0);border: 0px solid rgb(135,206,250);}")
        self.ProductNameWidgetLineEdit.setObjectName(
            "ProductNameWidgetLineEdit")

        self.ProductCategoryWidgetLineEdit = QtWidgets.QLineEdit(
            self.ProductInfoFrame)
        self.ProductCategoryWidgetLineEdit.setGeometry(
            QtCore.QRect(230, 60, 210, 25))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductCategoryWidgetLineEdit.setFont(font)
        self.ProductCategoryWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductCategoryWidgetLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductCategoryWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductCategoryWidgetLineEdit.setText(productCategory)
        self.ProductCategoryWidgetLineEdit.setToolTip(
            "Product " + productcode + " Category")
        self.ProductCategoryWidgetLineEdit.setFrame(True)
        self.ProductCategoryWidgetLineEdit.setReadOnly(True)
        self.ProductCategoryWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductCategoryWidgetLineEdit{color: rgb(0,0,0);border: 0px solid rgb(135,206,250);}")
        self.ProductCategoryWidgetLineEdit.setObjectName(
            "ProductCategoryWidgetLineEdit")

        self.ProductMeasurementWidgetLineEdit = QtWidgets.QLineEdit(
            self.ProductInfoFrame)
        self.ProductMeasurementWidgetLineEdit.setGeometry(
            QtCore.QRect(230, 80, 210, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductMeasurementWidgetLineEdit.setFont(font)
        self.ProductMeasurementWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductMeasurementWidgetLineEdit.setFocusPolicy(
            QtCore.Qt.ClickFocus)
        self.ProductMeasurementWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductMeasurementWidgetLineEdit.setText(productmeasurement)
        self.ProductMeasurementWidgetLineEdit.setToolTip(
            "Product " + productcode + " Measurement")
        self.ProductMeasurementWidgetLineEdit.setFrame(True)
        self.ProductMeasurementWidgetLineEdit.setReadOnly(True)
        self.ProductMeasurementWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductMeasurementWidgetLineEdit{color: rgb(0,0,0);border: 0px solid rgb(135,206,250);}")
        self.ProductMeasurementWidgetLineEdit.setObjectName(
            "ProductMeasurementWidgetLineEdit")

        self.ProductPriceWidgetLineEdit = QtWidgets.QLineEdit(
            self.ProductInfoFrame)
        self.ProductPriceWidgetLineEdit.setGeometry(
            QtCore.QRect(230, 140, 80, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductPriceWidgetLineEdit.setFont(font)
        self.ProductPriceWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductPriceWidgetLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductPriceWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductPriceWidgetLineEdit.setText(str(productprice))
        self.ProductPriceWidgetLineEdit.setToolTip(
            "Product " + productcode + " Price")
        self.ProductPriceWidgetLineEdit.setFrame(True)
        self.ProductPriceWidgetLineEdit.setReadOnly(False)
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.ProductPriceWidgetLineEdit.setValidator(validator)
        self.ProductPriceWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductPriceWidgetLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}")
        self.ProductPriceWidgetLineEdit.setObjectName(
            "ProductPriceWidgetLineEdit")
        self.ProductPriceWidgetLineEdit.editingFinished.connect(
            self.GetValueEvents)

        self.ProductQuantityWidgetLineEdit = QtWidgets.QLineEdit(
            self.ProductInfoFrame)
        self.ProductQuantityWidgetLineEdit.setGeometry(
            QtCore.QRect(315, 140, 110, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ProductQuantityWidgetLineEdit.setFont(font)
        self.ProductQuantityWidgetLineEdit.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductQuantityWidgetLineEdit.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductQuantityWidgetLineEdit.setLayoutDirection(
            QtCore.Qt.LeftToRight)
        self.ProductQuantityWidgetLineEdit.setText(productquantity)
        self.ProductQuantityWidgetLineEdit.setToolTip(
            "Product " + productcode + " Quantity")
        self.ProductQuantityWidgetLineEdit.setFrame(True)
        self.ProductQuantityWidgetLineEdit.setReadOnly(False)
        rx = QtCore.QRegExp("\d+\.?\d*")
        validator = QtGui.QRegExpValidator(rx)
        self.ProductQuantityWidgetLineEdit.setValidator(validator)
        self.ProductQuantityWidgetLineEdit.setStyleSheet(
            "QLineEdit#ProductQuantityWidgetLineEdit{color: rgb(0,0,0);border: 1px solid rgb(135,206,250);qproperty-alignment: AlignCenter;}")
        self.ProductQuantityWidgetLineEdit.setObjectName(
            "ProductQuantityWidgetLineEdit")
        self.ProductQuantityWidgetLineEdit.editingFinished.connect(
            self.GetValueEvents)

        self.ProductPriceWidgetLabel = QtWidgets.QLabel(self.ProductInfoFrame)
        self.ProductPriceWidgetLabel.setGeometry(
            QtCore.QRect(230, 110, 80, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductPriceWidgetLabel.setFont(font)
        self.ProductPriceWidgetLabel.setText("PRICE")
        self.ProductPriceWidgetLabel.setStyleSheet(
            "QLabel#ProductPriceWidgetLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}")
        self.ProductPriceWidgetLabel.setObjectName("ProductPriceWidgetLabel")

        self.ProductQuantityWidgetLabel = QtWidgets.QLabel(
            self.ProductInfoFrame)
        self.ProductQuantityWidgetLabel.setGeometry(
            QtCore.QRect(315, 110, 110, 30))
        font = QtGui.QFont()
        font.setFamily("Raleway")
        font.setPointSize(12)
        self.ProductQuantityWidgetLabel.setFont(font)
        self.ProductQuantityWidgetLabel.setText("QUANTITY")
        self.ProductQuantityWidgetLabel.setStyleSheet(
            "QLabel#ProductQuantityWidgetLabel{color: rgb(255,255,255);background-color: rgb(135,206,250);qproperty-alignment: AlignCenter;}")
        self.ProductQuantityWidgetLabel.setObjectName(
            "ProductQuantityWidgetLabel")

        self.ProductAddToVendorPushButton = QtWidgets.QPushButton(
            self.ProductInfoFrame)
        self.ProductAddToVendorPushButton.setGeometry(
            QtCore.QRect(500, 10, 20, 20))
        self.ProductAddToVendorPushButton.setCursor(
            QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.ProductAddToVendorPushButton.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.ProductAddToVendorPushButton.setText("")

        if productquantity == "None":

            self.ProductAddToVendorPushButton.setToolTip(
                "Add product " + productcode + " to Vendor")

        else:

            self.ProductAddToVendorPushButton.setToolTip(
                "Add product " + productcode + " to Purchase")

        self.ProductAddToVendorPushButton.setStyleSheet(
            "QPushButton#ProductAddToVendorPushButton{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign.png);}\n""QPushButton#ProductAddToVendorPushButton:hover{border: none;background-color: rgb(255,255,255);image: url(:/AddSymbolImg/Res/addsign hover.png);}")
        self.ProductAddToVendorPushButton.setObjectName(
            "ProductAddToVendorPushButton")
        self.ProductAddToVendorPushButton.clicked.connect(
            self.ShowProductWidgets)

        if requester == "AddVendorProductPushButton":

            self.ProductPriceWidgetLabel.show()
            self.ProductPriceWidgetLineEdit.show()
            self.ProductQuantityWidgetLabel.hide()
            self.ProductQuantityWidgetLineEdit.hide()

        elif requester == "AddVendorProductToPurchasePushButton":

            self.ProductPriceWidgetLabel.show()
            self.ProductPriceWidgetLineEdit.show()
            self.ProductPriceWidgetLineEdit.setReadOnly(True)
            self.ProductQuantityWidgetLabel.show()
            self.ProductQuantityWidgetLineEdit.show()

        self.ProductWidgetListTableWidget.setCellWidget(
            index, 0, self.ProductInfoFrame)


def MainWin():

    app = QtWidgets.QApplication([])
    exm = MainGUI()
    exm.show()
    app.exec_()


if __name__ == "__main__":

    import sys
    import sqlite3
    MainWin()
